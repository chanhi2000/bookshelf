import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,d as s,f as a,b as m,a as k,t as g,n as i,g as l,e as r,r as p,o as h}from"./app-BVguHYKu.js";const v={},b={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},f={class:"hint-container info"};function w(e,n){const o=p("VPCard"),t=p("SiteInfo"),c=p("CodePen");return h(),d("div",null,[s("h1",b,[s("a",y,[s("span",null,g(e.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(o,i(l({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n[1]||(n[1]=s("nav",{class:"table-of-contents"},[s("ul")],-1)),n[2]||(n[2]=s("hr",null,null,-1)),a(t,{name:"CSS Fan Out with Grid and @property",desc:"A ‚Äúfan out‚Äù animation involves sequentially revealing items from a stack with bouncy effect. by using css grid, we save quite bit of fiddly positioning work.",url:"https://frontendmasters.com/blog/css-fan-out-with-grid-and-property/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4128"}),n[3]||(n[3]=s("p",null,"A ‚Äúfan out‚Äù is an expanding animation where a group of items appear one after another, next to each other, as though they were spread out from a stack. There's usually a subtle bounciness in the reveal.",-1)),n[4]||(n[4]=s("p",null,"The effect is customarily achieved by timing and positioning each of the items individually with very specific hard set values. That can be an awful lot of work though. We can make things a bit easier if we let the items' parent container do this for us. Here's a result of doing it this way:",-1)),n[5]||(n[5]=s("div",{class:"hint-container note"},[s("p",{class:"hint-container-title"},"UPDATE"),s("p",null,[r("This article has been updated to now include the animation of the grid items' "),s("code",null,"height"),r(", to produce an overall smoother transition effect. The previous version of this article didn't cover that.")])],-1)),a(c,{user:"rpsthecoder","slug-hash":"xxvRrYQ",title:"CSS Reveal (grid-template-rows + @property)","default-tab":["css","result"],theme:e.$isDarkmode?"dark":"light"},null,8,["theme"]),n[6]||(n[6]=m(`<p>For HTML, there&#39;s a group of items (plus an empty one ‚Äî I will explain later why it&#39;s there), bookended by two radio controls to prompt the opening and closing of the items respectively.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--empty--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items close<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    Close the messages<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Alert from Project X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token entity" title="üê©">&amp;#x1F429;</span> Willow&#39;s appointment at <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>Scrubby&#39;s<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Message from (-_-)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>NYT Feed: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">&gt;</span></span>Weather In... (Read more)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>6 more items to check in your vacation list!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    Show the messages<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We need a grid container for this to work, so let&#39;s turn the <code>&lt;section&gt;</code>, the items&#39; container element, into one.You could use a list or anything you feel is semantically appropriate.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.items-container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now create an <em>Integer</em> CSS custom property with a value same as the number of items inside the container (including the open and close controls, and the empty item). This is key to implement the revealing and hiding of the items, sequentially, from within the grid container&#39;s style rule.</p><p>Also, register another CSS custom property of data type <em>length</em> that&#39;ll be used to animate each item&#39;s height during the opening and closing of the control, for a smoother execution of the overall action.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token atrule"><span class="token rule">@property</span> --int</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">syntax</span><span class="token punctuation">:</span> <span class="token string">&quot;&lt;integer&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inherits</span><span class="token punctuation">:</span> false<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">initial-value</span><span class="token punctuation">:</span> 7<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@property</span> --hgt</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">syntax</span><span class="token punctuation">:</span> <span class="token string">&quot;&lt;length&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inherits</span><span class="token punctuation">:</span> false<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">initial-value</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use the now created <code>--int</code> and <code>--hgt</code> properties to add that many grid rows of zero height in the grid container.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.items-container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--int<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">var</span><span class="token punctuation">(</span>--hgt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When directly adding <code>--int</code> to <code>repeat()</code> it was producing a blotchy animation in Safari for me, so I fed it through <code>calc()</code> and the animation executed well (we&#39;ll look into the animation in a moment). However, <code>calc()</code> computation kept leaving out one item in the iteration, because of how it computed the value 0. Hence, I added the empty item to compensate the exclusion.</p><p>If Safari did not give me a blotchy result, I would&#39;ve not needed an empty item, <code>--int</code>&#39;s <code>initial-value</code> would&#39;ve been 6, and <code>grid-template-rows</code>&#39;s value would&#39;ve been just <code>repeat(var(--int), 0px)</code>. In fact, with this set up, I got good animation results both in Firefox and Chrome.</p><p>In the end though, I went with the one that uses <code>calc()</code>, which provided the desired result in all the major browsers.</p><p>Let&#39;s get to animation now:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> open</span> <span class="token punctuation">{</span> <span class="token selector">to</span> <span class="token punctuation">{</span> <span class="token property">--int</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token property">--hgt</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> close</span> <span class="token punctuation">{</span> <span class="token selector">to</span> <span class="token punctuation">{</span> <span class="token property">--int</span><span class="token punctuation">:</span> 6<span class="token punctuation">;</span> <span class="token property">--hgt</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.item-container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--int<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">var</span><span class="token punctuation">(</span>--hgt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">&amp;:has(.open :checked)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* open action */</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span> open 0.3s ease-in-out forwards<span class="token punctuation">;</span></span>
<span class="line">    <span class="token selector">.open</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token selector">&amp;:has(.close :checked)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* close action */</span></span>
<span class="line">    <span class="token property">--int</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">--hgt</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span> close 0.3s ease-in-out forwards<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When the input is in the <code>checked</code> state, the <code>open</code> keyframe animation is executed, and the control itself is hidden with <code>display: none</code>.</p><p>The <code>open</code> class changes <code>--int</code>&#39;s value from its <code>initial-value</code>, 7, to the one set within the <code>@keyframes</code> rule (<code>0</code>), over a set period (<code>.3s</code>). This decrement removes the zero height from each of the grid row, one by one, thus sequentially revealing all the items in <code>.3s</code> or <code>300ms</code>.Simultaneously, <code>--hgt</code>&#39;s value is increased to 60px from its initial 0px value. This expands each item&#39;s height as it appears on the screen.</p><p>When the input to <em>hide</em> all the items is in the <code>checked</code> state, the <code>close</code> keyframe animation is executed, setting <code>--int</code>&#39;s value to 0 and <code>--hgt</code>&#39;s value to 60px.</p><p>The <code>close</code> class changes the now <code>0</code> value of <code>--int</code> to the value declared in its rule: <code>7</code>. This increment sets a zero height to each of the grid row, one by one, thus <em>sequentially hiding</em> all the items.Simultaneously, <code>--hgt</code>&#39;s value is decreased to 0px. This shrinks each item&#39;s height as it disappears from the screen.</p><p>To perform the close action, instead of making a unique close animation, I tried using the open animation with <code>animation-direction: reverse</code>. Unfortunately, the result was jerky. So I kept unique animations for the open and close actions separately.</p><p>Additionally, to polish the UI, I&#39;m adding transition animations to the row gaps and text colors as well. The row gaps set <code>cubic-bezier()</code> animation timing function to create a low-key springy effect.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.scroll-container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--int<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* serves the open and close actions */</span></span>
<span class="line">  <span class="token property">transition</span><span class="token punctuation">:</span> row-gap 0.3s 0.1s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.8<span class="token punctuation">,</span> 0.5<span class="token punctuation">,</span> 0.2<span class="token punctuation">,</span> 1.4<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">&amp;:has(.open :checked)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* open action */</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span> open 0.3s ease-in-out forwards<span class="token punctuation">;</span></span>
<span class="line">    <span class="token selector">.open</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">/* styling */</span></span>
<span class="line">    <span class="token property">row-gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token selector">.items</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>113 124 158<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span> color 0.3s 0.1s<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token selector">.close</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token selector">&amp;:has(.close :checked)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* close action */</span></span>
<span class="line">    <span class="token property">--int</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span> close 0.3s ease-in-out forwards<span class="token punctuation">;</span> <span class="token comment">/* styling */</span></span>
<span class="line">    <span class="token property">row-gap</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">    <span class="token selector">.items</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span> color 0.2s<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When expanded, the row <code>gap</code>s go up to <code>10px</code> and the text color comes in. When shrinking, the row <code>gap</code>s go down to <code>0</code> and the text color fades out to transparent. With that, the example is complete! Here&#39;s the Pen once more:</p>`,22)),a(c,{user:"rpsthecoder","slug-hash":"xxvRrYQ",title:"CSS Reveal (grid-template-rows + @property)","default-tab":["css","result"],theme:e.$isDarkmode?"dark":"light"},null,8,["theme"]),n[7]||(n[7]=s("div",{class:"hint-container note"},[s("p",{class:"hint-container-title"},"Note"),s("p",null,"You can try this method with any grid compositions ‚Äî rows, columns, or both.")],-1)),n[8]||(n[8]=s("hr",null,null,-1)),s("div",f,[n[0]||(n[0]=s("p",{class:"hint-container-title"},"Further Reading",-1)),a(t,{name:"grid-template-rows - CSS: Cascading Style Sheets | MDN",desc:"The grid-template-rows CSS property defines the line names and track sizing functions of the grid rows.",url:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows/",logo:"https://developer.mozilla.org/favicon-48x48.bc390275e955dacb2e65.png",preview:"https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png"}),a(t,{name:"@property: Next-gen CSS variables now with universal browser support | Blog | web.dev",desc:"Semantic custom properties with @property just reached Baseline Newly available.",url:"https://web.dev/blog/at-property-baseline/",logo:"https://gstatic.com/devrel-devsite/prod/vdcd49b48a0f6579e36a0f52b513a1840db67522fa48e80a57742b4388044a7e9/web/images/favicon.png",preview:"https://web.dev/static/blog/at-property-baseline/image/hero.jpg"}),a(t,{name:"<easing-function> - CSS: Cascading Style Sheets | MDN",desc:"The <easing-function> CSS data type represents a mathematical function that describes the rate at which a value changes.",url:"https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function/",logo:"https://developer.mozilla.org/favicon-48x48.bc390275e955dacb2e65.png",preview:"https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png"})]),k(" TODO: add ARTICLE CARD "),a(o,i(l({title:"CSS Fan Out with Grid and @property",desc:"A ‚Äúfan out‚Äù animation involves sequentially revealing items from a stack with bouncy effect. by using css grid, we save quite bit of fiddly positioning work.",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/css-fan-out-with-grid-and-property.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const x=u(v,[["render",w]]),C=JSON.parse('{"path":"/frontendmasters.com/css-fan-out-with-grid-and-property.html","title":"CSS Fan Out with Grid and @property","lang":"en-US","frontmatter":{"lang":"en-US","title":"CSS Fan Out with Grid and @property","description":"Article(s) > CSS Fan Out with Grid and @property","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","frontendmasters.com","css","animation","custom-properties","grid","@property"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS Fan Out with Grid and @property\\",\\"image\\":[\\"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4128\\"],\\"datePublished\\":\\"2024-10-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Preethi Sam\\",\\"url\\":\\"https://frontendmasters.com/blog/author/preethisam/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/css-fan-out-with-grid-and-property.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"CSS Fan Out with Grid and @property"}],["meta",{"property":"og:description","content":"Article(s) > CSS Fan Out with Grid and @property"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4128"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4128"}],["meta",{"name":"twitter:image:alt","content":"CSS Fan Out with Grid and @property"}],["meta",{"property":"article:author","content":"Preethi Sam"}],["meta",{"property":"article:tag","content":"@property"}],["meta",{"property":"article:tag","content":"grid"}],["meta",{"property":"article:tag","content":"custom-properties"}],["meta",{"property":"article:tag","content":"animation"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-10-09T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > CSS Fan Out with Grid and @property"},{"property":"og:description","content":"CSS Fan Out with Grid and @property"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/css-fan-out-with-grid-and-property.html"}]],"prev":"/programming/css/articles/README.md","date":"2024-10-09T00:00:00.000Z","isOriginal":false,"author":[{"name":"Preethi Sam","url":"https://frontendmasters.com/blog/author/preethisam/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4128"},"git":{},"readingTime":{"minutes":4.96,"words":1489},"filePathRelative":"frontendmasters.com/css-fan-out-with-grid-and-property.md","copyright":{"author":"Preethi Sam"}}');export{x as comp,C as data};
