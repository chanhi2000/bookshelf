import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as n,f as t,b as c,a as h,t as w,n as k,g as m,w as e,e as a,r as i,o as y}from"./app-BVguHYKu.js";const x={},C={id:"frontmatter-title-관련",tabindex:"-1"},I={class:"header-anchor",href:"#frontmatter-title-관련"},T={class:"table-of-contents"},A={class:"hint-container tip"},H={href:"https://developer.android.com/develop/ui/compose/layouts/custom",target:"_blank",rel:"noopener noreferrer"};function P(v,s){const r=i("VPCard"),p=i("router-link"),u=i("SiteInfo"),b=i("VPIcon"),d=i("Tabs");return y(),f("div",null,[n("h1",C,[n("a",I,[n("span",null,w(v.$frontmatter.title)+" 관련",1)])]),t(r,k(m({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",T,[n("ul",null,[n("li",null,[t(p,{to:"#introduction"},{default:e(()=>s[0]||(s[0]=[a("Introduction")])),_:1,__:[0]})]),n("li",null,[t(p,{to:"#overview"},{default:e(()=>s[1]||(s[1]=[a("Overview")])),_:1,__:[1]})]),n("li",null,[t(p,{to:"#what-you-ll-learn"},{default:e(()=>s[2]||(s[2]=[a("What You’ll Learn")])),_:1,__:[2]})]),n("li",null,[t(p,{to:"#step-1-building-the-header"},{default:e(()=>s[3]||(s[3]=[a("Step 1: Building the Header")])),_:1,__:[3]}),n("ul",null,[n("li",null,[t(p,{to:"#defining-the-heights"},{default:e(()=>s[4]||(s[4]=[a("Defining the Heights")])),_:1,__:[4]})]),n("li",null,[t(p,{to:"#create-box-to-set-background-image"},{default:e(()=>s[5]||(s[5]=[a("Create box to set background image")])),_:1,__:[5]})]),n("li",null,[t(p,{to:"#now-let-s-add-all-these-element-without-any-sense-of-direction-for-now"},{default:e(()=>s[6]||(s[6]=[a("Now let’s add all these element without any sense of direction for now.")])),_:1,__:[6]})]),n("li",null,[t(p,{to:"#arrange-them-dynamically-using-custom-layout"},{default:e(()=>s[7]||(s[7]=[a("Arrange them dynamically using custom layout")])),_:1,__:[7]})]),n("li",null,[t(p,{to:"#collapsed-state"},{default:e(()=>s[8]||(s[8]=[a("Collapsed state")])),_:1,__:[8]})])])])])]),s[23]||(s[23]=n("hr",null,null,-1)),t(u,{name:"Collapsing Toolbar in Compose— PART 2",desc:"Introduction Creating smooth, responsive user experiences in modern UI development often involves complex scrolling interactions. One common requirement is nested scrolling, where a scrollable component is embedded within another. Jetpack Compose, with its declarative approach, provides an elegant way to handle such interactions.",url:"https://droidcon.com/collapsing-toolbar-in-compose-part-2",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/11/1_khPFw1H7giplcH42MXQfFw-1024x256.webp"}),s[24]||(s[24]=n("hr",null,null,-1)),s[25]||(s[25]=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction"},[n("span",null,"Introduction")])],-1)),s[26]||(s[26]=n("p",null,"Creating smooth, responsive user experiences in modern UI development often involves complex scrolling interactions. One common requirement is nested scrolling, where a scrollable component is embedded within another. Jetpack Compose, with its declarative approach, provides an elegant way to handle such interactions.",-1)),s[27]||(s[27]=n("p",null,[a("In"),n("strong",null,"PART 1"),a("of this article, we covered scroll states and the basics of nested scrolling. Now, in"),n("strong",null,"PART 2"),a(", we will build a dynamic UI with a collapsing toolbar and learn how to handle nested scrolling effectively.")],-1)),t(u,{name:"Mastering Scroll in Jetpack Compose — PART 1",desc:"Scrolling is a fundamental element of any mobile app, and Jetpack Compose provides powerful tools to create smooth and efficient scrolling…",url:"https://proandroiddev.com/mastering-scroll-in-jetpack-compose-part-1-7bacefce436e/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/da:true/resize:fit:420/1*aCXgpKg8i9cUEggreqZMeQ.gif"}),s[28]||(s[28]=c('<figure><img src="https://miro.medium.com/v2/resize:fit:534/format:webp/1*34u8WkQ0VrbHyRLdxbFABQ.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>We aim to create an interface with a lazy list where scrolling causes the top card to transform into a toolbar, with a smooth, curved path transition effect.</p><hr><h2 id="what-you-ll-learn" tabindex="-1"><a class="header-anchor" href="#what-you-ll-learn"><span>What You’ll Learn</span></a></h2><ul><li>Creating custom layouts</li><li>Resizing layouts based on states (collapsed or expanded)</li><li>Combining lazy list scrolling with screen content</li><li>Working with nested scrolling and<code>NestedScrollConnection</code></li></ul><hr><h2 id="step-1-building-the-header" tabindex="-1"><a class="header-anchor" href="#step-1-building-the-header"><span><em>Step 1:</em> Building the Header</span></a></h2><p>The header has two states:<strong>expanded</strong>and<strong>collapsed</strong>. We use dynamic elements with changing heights and widths to achieve a smooth transition between these states.</p><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_kOtEtv7iOY8rF_g-xz5I3g-300x153.webp" alt="Expanded state" tabindex="0" loading="lazy"><figcaption>Expanded state</figcaption></figure><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_TnfLbpiXo0KjusNnl_GiRw-300x73.webp" alt="Collapsed State" tabindex="0" loading="lazy"><figcaption>Collapsed State</figcaption></figure>',12)),n("div",A,[s[12]||(s[12]=n("p",{class:"hint-container-title"},"Tips",-1)),n("p",null,[s[10]||(s[10]=a("To calculate the height for these containers we will use Custom layout in compose. If you already not know custom layout checkout ")),n("a",H,[t(b,{icon:"fa-brands fa-android"}),s[9]||(s[9]=n("em",null,"this",-1))]),s[11]||(s[11]=a("."))]),t(u,{name:"Custom layouts | Jetpack Compose| Android Developers",desc:"In Compose, UI elements are represented by the composable functions that emit a piece of UI when invoked, that is then added to a UI tree that gets rendered on the screen. Each UI element has one parent and potentially many children. Each element is also located within its parent, specified as an (x, y) position, and a size, specified as a width and a height.",url:"https://developer.android.com/develop/ui/compose/layouts/custom/",logo:"https://gstatic.com/devrel-devsite/prod/v6f23042ee535b54d461e0cc5c1cc12493e4d0aea4f2d54a7a63063da7859ead0/android/images/favicon.svg",preview:"https://developer.android.com/static/images/social/android-developers.png"})]),s[29]||(s[29]=c(`<h3 id="defining-the-heights" tabindex="-1"><a class="header-anchor" href="#defining-the-heights"><span>Defining the Heights</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> expandedBoxHeight <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">.</span>dp</span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> collapsedBoxHeight <span class="token operator">=</span> <span class="token number">96</span><span class="token punctuation">.</span>dp</span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> ExpandedLeoHeight <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">.</span>dp</span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> CollapsedLeoHeight <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">.</span>dp</span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> leoTextHeight <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>sp</span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> ButtonSize <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">.</span>dp</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We interpolate between these values as the header transitions between states.</p><p><em>To get the linear sizes ar each state we use lerp function.</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">val</span> leoHeight <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>LocalDensity<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">lerp</span><span class="token punctuation">(</span>CollapsedLeoHeight<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExpandedLeoHeight<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>where progress is changing from <code>1f</code> to <code>0f</code> lineraly.</em></p><h3 id="create-box-to-set-background-image" tabindex="-1"><a class="header-anchor" href="#create-box-to-set-background-image"><span>Create box to set background image</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">CollapsingToolbar</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token annotation builtin">@DrawableRes</span> backgroundImageResId<span class="token operator">:</span> Int<span class="token punctuation">,</span></span>
<span class="line">    progress<span class="token operator">:</span> Float<span class="token punctuation">,</span></span>
<span class="line">    onPrivacyTipButtonClicked<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    onSettingsButtonClicked<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> leoHeight <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>LocalDensity<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">lerp</span><span class="token punctuation">(</span>CollapsedLeoHeight<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExpandedLeoHeight<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">val</span> logoPadding <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>LocalDensity<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">lerp</span><span class="token punctuation">(</span>CollapsedPadding<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExpandedPadding<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Surface</span><span class="token punctuation">(</span></span>
<span class="line">        color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary<span class="token punctuation">,</span></span>
<span class="line">        elevation <span class="token operator">=</span> Elevation<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">==</span> <span class="token number">1f</span><span class="token punctuation">)</span> <span class="token number">200</span><span class="token punctuation">.</span>dp <span class="token keyword">else</span> leoHeight \\<span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// #Background Image</span></span>
<span class="line">                <span class="token function">Image</span><span class="token punctuation">(</span></span>
<span class="line">                    painter <span class="token operator">=</span> <span class="token function">painterResource</span><span class="token punctuation">(</span>id <span class="token operator">=</span> backgroundImageResId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                    contentScale <span class="token operator">=</span> ContentScale<span class="token punctuation">.</span>FillWidth<span class="token punctuation">,</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">graphicsLayer</span> <span class="token punctuation">{</span></span>
<span class="line">                            alpha <span class="token operator">=</span> progress \\<span class="token operator">*</span> Alpha</span>
<span class="line">                        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                    alignment <span class="token operator">=</span> <span class="token function">BiasAlignment</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">1f</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> progress<span class="token punctuation">)</span> \\<span class="token operator">*</span> <span class="token number">0.75f</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// ....... </span></span>
<span class="line">        <span class="token comment">// inside content </span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Here background image alignment is changing with progress.</em></p>`,9)),t(d,{data:[{id:"when progress = 1f"},{id:"when progress = 0f"}],active:0},{title0:e(({value:o,isActive:l})=>s[13]||(s[13]=[a("when progress = 1f")])),title1:e(({value:o,isActive:l})=>s[14]||(s[14]=[a("when progress = 0f")])),tab0:e(({value:o,isActive:l})=>s[15]||(s[15]=[n("p",null,"(0f , 1f — ((1f — progress) * 0.75f) = (0f , 1f — ((1f — 1f) * 0.75f)",-1),n("p",null,"(0f, 1f — 0f * 0.75f) = (0f, 1f)",-1),n("p",null,"which mean it will start from horizontal 0 to vertical 1.",-1)])),tab1:e(({value:o,isActive:l})=>s[16]||(s[16]=[n("p",null,"(0f , 1f — ((1f — progress) * 0.75f) = (0f , 1f — ((1f — 0f) * 0.75f)",-1),n("p",null,"(0f, 1f — 1f * 0.75f) = (0f, 1f-0.75f) = (0f, 0.25f)",-1)])),_:1}),s[30]||(s[30]=c(`<p><em>which mean it will start from horizontal 0 to vertical <code>0.25f</code> alignment of whole box size .</em></p><p><em>and alpga is changing with progress which means on <code>1f</code> it will be completely visible to get invisible on 0f progress value.</em></p><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_kOtEtv7iOY8rF_g-xz5I3g-1-300x153.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="now-let-s-add-all-these-element-without-any-sense-of-direction-for-now" tabindex="-1"><a class="header-anchor" href="#now-let-s-add-all-these-element-without-any-sense-of-direction-for-now"><span>Now let’s add all these element without any sense of direction for now.</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">//Inside card elements</span></span>
<span class="line"><span class="token function">Image</span><span class="token punctuation">(</span></span>
<span class="line">    painter <span class="token operator">=</span> <span class="token function">painterResource</span><span class="token punctuation">(</span>id <span class="token operator">=</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic\\_leo<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>logoPadding<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span>leoHeight<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span>leoHeight<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">    text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;LEO&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">    color <span class="token operator">=</span> Color<span class="token punctuation">.</span>White<span class="token punctuation">,</span></span>
<span class="line">    fontSize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>logoPadding<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">wrapContentWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">wrapContentSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    horizontalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span><span class="token function">spacedBy</span><span class="token punctuation">(</span>ContentPadding<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">IconButton</span><span class="token punctuation">(</span></span>
<span class="line">        onClick <span class="token operator">=</span> onPrivacyTipButtonClicked<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>ButtonSize<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span></span>
<span class="line">                color <span class="token operator">=</span> LocalContentColor<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                shape <span class="token operator">=</span> CircleShape</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Rounded<span class="token punctuation">.</span>Edit<span class="token punctuation">,</span></span>
<span class="line">            contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">IconButton</span><span class="token punctuation">(</span></span>
<span class="line">        onClick <span class="token operator">=</span> onSettingsButtonClicked<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>ButtonSize<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span></span>
<span class="line">                color <span class="token operator">=</span> LocalContentColor<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                shape <span class="token operator">=</span> CircleShape</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Rounded<span class="token punctuation">.</span>Share<span class="token punctuation">,</span></span>
<span class="line">            contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="arrange-them-dynamically-using-custom-layout" tabindex="-1"><a class="header-anchor" href="#arrange-them-dynamically-using-custom-layout"><span>Arrange them dynamically using custom layout</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">CollapsingToolbar</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token annotation builtin">@DrawableRes</span> backgroundImageResId<span class="token operator">:</span> Int<span class="token punctuation">,</span></span>
<span class="line">    progress<span class="token operator">:</span> Float<span class="token punctuation">,</span></span>
<span class="line">    onPrivacyTipButtonClicked<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    onSettingsButtonClicked<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> leoHeight <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>LocalDensity<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">lerp</span><span class="token punctuation">(</span>CollapsedLeoHeight<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExpandedLeoHeight<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">val</span> logoPadding <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>LocalDensity<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">lerp</span><span class="token punctuation">(</span>CollapsedPadding<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ExpandedPadding<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> progress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">Surface</span><span class="token punctuation">(</span></span>
<span class="line">        color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary<span class="token punctuation">,</span></span>
<span class="line">        elevation <span class="token operator">=</span> Elevation<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">==</span> <span class="token number">1f</span><span class="token punctuation">)</span> <span class="token number">200</span><span class="token punctuation">.</span>dp <span class="token keyword">else</span> leoHeight \\<span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// #Background Image</span></span>
<span class="line">            <span class="token function">Image</span><span class="token punctuation">(</span></span>
<span class="line">                painter <span class="token operator">=</span> <span class="token function">painterResource</span><span class="token punctuation">(</span>id <span class="token operator">=</span> backgroundImageResId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                contentScale <span class="token operator">=</span> ContentScale<span class="token punctuation">.</span>FillWidth<span class="token punctuation">,</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">graphicsLayer</span> <span class="token punctuation">{</span></span>
<span class="line">                        alpha <span class="token operator">=</span> progress \\<span class="token operator">*</span> Alpha</span>
<span class="line">                    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                alignment <span class="token operator">=</span> <span class="token function">BiasAlignment</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">1f</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> progress<span class="token punctuation">)</span> \\<span class="token operator">*</span> <span class="token number">0.75f</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">CollapsingToolbarLayout</span><span class="token punctuation">(</span>progress<span class="token punctuation">,</span> Modifier<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// Inside card elements </span></span>
<span class="line">                <span class="token comment">// ..............................</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">CollapsingToolbarLayout</span><span class="token punctuation">(</span></span>
<span class="line">    progress<span class="token operator">:</span> Float<span class="token punctuation">,</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"> <span class="token function">Layout</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier<span class="token punctuation">,</span></span>
<span class="line">        content <span class="token operator">=</span> content</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span> measurables<span class="token punctuation">,</span> constraints <span class="token operator">-&gt;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Repositioning of the elements</span></span>
<span class="line">        <span class="token comment">// ... </span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>now check element count is 3(1. cat image, 2. Text, 3. row of buttons) and get placables from that.</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token function">check</span><span class="token punctuation">(</span>measurables<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> placeables <span class="token operator">=</span> measurables<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span></span>
<span class="line">    it<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>constraints<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">layout</span><span class="token punctuation">(</span></span>
<span class="line">    width <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxWidth<span class="token punctuation">,</span></span>
<span class="line">    height <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxHeight</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> expandedHorizontalGuideline <span class="token operator">=</span> <span class="token punctuation">(</span>constraints<span class="token punctuation">.</span>maxHeight <span class="token operator">*</span> <span class="token number">0.4f</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> collapsedHorizontalGuideline <span class="token operator">=</span> <span class="token punctuation">(</span>constraints<span class="token punctuation">.</span>maxHeight <span class="token operator">*</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">val</span> leoImage <span class="token operator">=</span> placeables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">val</span> petName <span class="token operator">=</span> placeables<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">val</span> buttons <span class="token operator">=</span> placeables<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_xX5UTcG4BDF28jWqb-1B_w-300x77.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>We will check the positioning of each item in</p><h3 id="collapsed-state" tabindex="-1"><a class="header-anchor" href="#collapsed-state"><span>Collapsed state</span></a></h3>`,13)),t(d,{data:[{id:"Cat Image"},{id:"Text"},{id:"Buttons"}],active:0},{title0:e(({value:o,isActive:l})=>s[17]||(s[17]=[a("Cat Image")])),title1:e(({value:o,isActive:l})=>s[18]||(s[18]=[a("Text")])),title2:e(({value:o,isActive:l})=>s[19]||(s[19]=[a("Buttons")])),tab0:e(({value:o,isActive:l})=>s[20]||(s[20]=[n("p",null,"because content padding was already added. x cooridnate can start from 0 in this case. and y can be middle of collapsed card.",-1),n("div",{class:"language-kotlin line-numbers-mode","data-highlighter":"prismjs","data-ext":"kt"},[n("pre",null,[n("code",{class:"language-kotlin"},[n("span",{class:"line"},[a("x "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),a("  ")]),a(`
`),n("span",{class:"line"},[a("y "),n("span",{class:"token operator"},"="),a(" collapsedHorizontalGuideline"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:o,isActive:l})=>s[21]||(s[21]=[n("p",null,"x coordinate will start after cat image. and padding was already added.",-1),n("div",{class:"language-kotlin line-numbers-mode","data-highlighter":"prismjs","data-ext":"kt"},[n("pre",null,[n("code",{class:"language-kotlin"},[n("span",{class:"line"},[a("x "),n("span",{class:"token operator"},"="),a(" leoImage"),n("span",{class:"token punctuation"},"."),a("width  ")]),a(`
`),n("span",{class:"line"},[a("y "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),a("collapsedHorizontalGuideline — petName"),n("span",{class:"token punctuation"},"."),a("height"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),a("`")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab2:e(({value:o,isActive:l})=>s[22]||(s[22]=[n("div",{class:"language-kotlin line-numbers-mode","data-highlighter":"prismjs","data-ext":"kt"},[n("pre",null,[n("code",{class:"language-kotlin"},[n("span",{class:"line"},[a("x "),n("span",{class:"token operator"},"="),a(" constraints"),n("span",{class:"token punctuation"},"."),a("maxWidth "),n("span",{class:"token operator"},"-"),a(" buttons"),n("span",{class:"token punctuation"},"."),a("width")]),a(`
`),n("span",{class:"line"},[a("y "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),a("constraints"),n("span",{class:"token punctuation"},"."),a("maxHeight "),n("span",{class:"token operator"},"-"),a(" buttons"),n("span",{class:"token punctuation"},"."),a("height"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"/"),a(),n("span",{class:"token number"},"2")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),s[31]||(s[31]=c(`<p>Same way place expanded content. whole code will look something like this.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">CollapsingToolbarLayout</span><span class="token punctuation">(</span></span>
<span class="line">    progress<span class="token operator">:</span> Float<span class="token punctuation">,</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Layout</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier<span class="token punctuation">,</span></span>
<span class="line">        content <span class="token operator">=</span> content</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span> measurables<span class="token punctuation">,</span> constraints <span class="token operator">-&gt;</span></span>
<span class="line">        <span class="token function">check</span><span class="token punctuation">(</span>measurables<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> placeables <span class="token operator">=</span> measurables<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span></span>
<span class="line">            it<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>constraints<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">layout</span><span class="token punctuation">(</span></span>
<span class="line">            width <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxWidth<span class="token punctuation">,</span></span>
<span class="line">            height <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxHeight</span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> expandedHorizontalGuideline <span class="token operator">=</span> <span class="token punctuation">(</span>constraints<span class="token punctuation">.</span>maxHeight <span class="token operator">*</span> <span class="token number">0.4f</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> collapsedHorizontalGuideline <span class="token operator">=</span> <span class="token punctuation">(</span>constraints<span class="token punctuation">.</span>maxHeight <span class="token operator">*</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">val</span> leoImage <span class="token operator">=</span> placeables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token keyword">val</span> petName <span class="token operator">=</span> placeables<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token keyword">val</span> buttons <span class="token operator">=</span> placeables<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">            leoImage<span class="token punctuation">.</span><span class="token function">placeRelative</span><span class="token punctuation">(</span></span>
<span class="line">                x <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">                    start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">                    stop <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> leoImage<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                    fraction <span class="token operator">=</span> progress</span>
<span class="line">                <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                y <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">                    start <span class="token operator">=</span> collapsedHorizontalGuideline <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                    stop <span class="token operator">=</span> expandedHorizontalGuideline <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                    fraction <span class="token operator">=</span> progress</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            petName<span class="token punctuation">.</span><span class="token function">placeRelative</span><span class="token punctuation">(</span></span>
<span class="line">                x <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">                    start <span class="token operator">=</span> leoImage<span class="token punctuation">.</span>width <span class="token punctuation">,</span></span>
<span class="line">                    stop <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> petName<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                    fraction <span class="token operator">=</span> progress</span>
<span class="line">                <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                y <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">                    start <span class="token operator">=</span> <span class="token punctuation">(</span>collapsedHorizontalGuideline <span class="token operator">-</span> petName<span class="token punctuation">.</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    stop <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxHeight <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> leoImage<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">                    fraction <span class="token operator">=</span> progress</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            buttons<span class="token punctuation">.</span><span class="token function">placeRelative</span><span class="token punctuation">(</span></span>
<span class="line">                x <span class="token operator">=</span> constraints<span class="token punctuation">.</span>maxWidth <span class="token operator">-</span> buttons<span class="token punctuation">.</span>width<span class="token punctuation">,</span></span>
<span class="line">                y <span class="token operator">=</span> <span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">                    start <span class="token operator">=</span> <span class="token punctuation">(</span>constraints<span class="token punctuation">.</span>maxHeight <span class="token operator">-</span> buttons<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                    stop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">                    fraction <span class="token operator">=</span> progress</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Here placeRelative function takes x, y, z coordinates. and to set x, y we will again use lerp function we defines linear path for these cooridinates, where start being collapsed state and stop being expanded state.</em></p><p>I hope it was pretty clean till now.</p>`,4)),h(" TODO: add ARTICLE CARD "),t(r,k(m({title:"Collapsing Toolbar in Compose— PART 2",desc:"Introduction Creating smooth, responsive user experiences in modern UI development often involves complex scrolling interactions. One common requirement is nested scrolling, where a scrollable component is embedded within another. Jetpack Compose, with its declarative approach, provides an elegant way to handle such interactions.",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/collapsing-toolbar-in-compose-part-2.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const M=g(x,[["render",P]]),S=JSON.parse('{"path":"/droidcon.com/collapsing-toolbar-in-compose-part-2.html","title":"Collapsing Toolbar in Compose— PART 2","lang":"en-US","frontmatter":{"lang":"en-US","title":"Collapsing Toolbar in Compose— PART 2","description":"Article(s) > Collapsing Toolbar in Compose— PART 2","icon":"fa-brands fa-android","category":["Java","Kotlin","Android","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Collapsing Toolbar in Compose— PART 2\\",\\"image\\":[\\"https://miro.medium.com/v2/resize:fit:534/format:webp/1*34u8WkQ0VrbHyRLdxbFABQ.gif\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_kOtEtv7iOY8rF_g-xz5I3g-300x153.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_TnfLbpiXo0KjusNnl_GiRw-300x73.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_kOtEtv7iOY8rF_g-xz5I3g-1-300x153.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_xX5UTcG4BDF28jWqb-1B_w-300x77.webp\\"],\\"datePublished\\":\\"2024-11-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Karishma Agrawal\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/collapsing-toolbar-in-compose-part-2.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Collapsing Toolbar in Compose— PART 2"}],["meta",{"property":"og:description","content":"Article(s) > Collapsing Toolbar in Compose— PART 2"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/11/1_khPFw1H7giplcH42MXQfFw-1024x256.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/11/1_khPFw1H7giplcH42MXQfFw-1024x256.webp"}],["meta",{"name":"twitter:image:alt","content":"Collapsing Toolbar in Compose— PART 2"}],["meta",{"property":"article:author","content":"Karishma Agrawal"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-26T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Collapsing Toolbar in Compose— PART 2"},{"property":"og:description","content":"Collapsing Toolbar in Compose— PART 2"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/collapsing-toolbar-in-compose-part-2.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-11-26T00:00:00.000Z","isOriginal":false,"author":"Karishma Agrawal","cover":"https://droidcon.com/wp-content/uploads/2024/11/1_khPFw1H7giplcH42MXQfFw-1024x256.webp"},"git":{},"readingTime":{"minutes":4.75,"words":1424},"filePathRelative":"droidcon.com/collapsing-toolbar-in-compose-part-2.md","copyright":{"author":"Karishma Agrawal"}}');export{M as comp,S as data};
