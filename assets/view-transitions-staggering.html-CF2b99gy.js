import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as s,f as t,b as l,a as b,t as w,n as d,g as k,w as e,e as a,r as o,o as y}from"./app-BVguHYKu.js";const f={},q={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},S={class:"table-of-contents"},C={href:"https://caniuse.com/view-transitions",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/w3c/csswg-drafts/issues/8320#issuecomment-2023077559",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/w3c/csswg-drafts/issues/8320#issuecomment-2344208387",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/w3c/csswg-drafts/issues/4559#issuecomment-1642880894",target:"_blank",rel:"noopener noreferrer"};function j(i,n){const r=o("VPCard"),p=o("router-link"),g=o("SiteInfo"),m=o("RouteLink"),c=o("CodePen"),u=o("VPIcon");return y(),h("div",null,[s("h1",q,[s("a",x,[s("span",null,w(i.$frontmatter.title)+" 관련",1)])]),t(r,d(k({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",S,[s("ul",null,[s("li",null,[t(p,{to:"#example"},{default:e(()=>n[0]||(n[0]=[a("Example")])),_:1,__:[0]})]),s("li",null,[t(p,{to:"#unique-view-transition-names"},{default:e(()=>n[1]||(n[1]=[a("Unique View Transition Names")])),_:1,__:[1]})]),s("li",null,[t(p,{to:"#customizing-the-animation"},{default:e(()=>n[2]||(n[2]=[a("Customizing the Animation")])),_:1,__:[2]}),s("ul",null,[s("li",null,[t(p,{to:"#making-our-own-sibling-indexes-with-custom-properties"},{default:e(()=>n[3]||(n[3]=[a("Making Our Own Sibling Indexes with Custom Properties")])),_:1,__:[3]})]),s("li",null,[t(p,{to:"#but-does-that-actually-help-us"},{default:e(()=>n[4]||(n[4]=[a("… but does that actually help us?")])),_:1,__:[4]})])])]),s("li",null,[t(p,{to:"#enter-view-transition-class"},{default:e(()=>n[5]||(n[5]=[a("Enter view-transition-class")])),_:1,__:[5]})]),s("li",null,[t(p,{to:"#real-sibling-index-in-css"},{default:e(()=>n[6]||(n[6]=[a("Real Sibling Index in CSS")])),_:1,__:[6]}),s("ul",null,[s("li",null,[t(p,{to:"#random-stagger"},{default:e(()=>n[7]||(n[7]=[a("Random Stagger")])),_:1,__:[7]})]),s("li",null,[t(p,{to:"#sibling-count-is-useful-too"},{default:e(()=>n[8]||(n[8]=[a("Sibling Count is Useful Too")])),_:1,__:[8]})])])]),s("li",null,[t(p,{to:"#overflow-is-a-small-bummer"},{default:e(()=>n[9]||(n[9]=[a("Overflow is a small bummer")])),_:1,__:[9]})]),s("li",null,[t(p,{to:"#p-s-devtools-can-inspect-this-stuff"},{default:e(()=>n[10]||(n[10]=[a("p.s. DevTools Can Inspect This Stuff")])),_:1,__:[10]})])])]),n[33]||(n[33]=s("hr",null,null,-1)),t(g,{name:"View Transitions Staggering",desc:"When you use View Transitions on multiple elements, it can be a very nice look to stagger them out a little bit. It's possible now, but a bit finicky. Let's take a look at some code, present and future, that will help. ",url:"https://frontendmasters.com/blog/view-transitions-staggering/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4232"}),s("p",null,[n[12]||(n[12]=a("I love view transitions. When you’re using view transitions to move ")),n[13]||(n[13]=s("em",null,"multiple items",-1)),n[14]||(n[14]=a(", I think staggering them is cool effect and a reasonable ask for doing so succinctly. While I was playing with this recently I learned a lot and a number of different related tech and syntax came up, so I thought I’d document it. Blogging y’all, it’s cool. ")),t(m,{to:"/frontendmasters.com/guest-writing-for-boost.html"},{default:e(()=>n[11]||(n[11]=[s("strong",null,"You should.",-1)])),_:1,__:[11]})]),n[34]||(n[34]=s("hr",null,null,-1)),n[35]||(n[35]=s("h2",{id:"example",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#example"},[s("span",null,"Example")])],-1)),n[36]||(n[36]=s("p",null,"So let’s say we have a menu kinda thing that can open & close. It’s just an example, feel free to use your imagination to consider two states of any UI with multiple elements. Here’s ours:",-1)),n[37]||(n[37]=s("figure",null,[s("img",{src:"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/cdpn.io_pen_debug_GRVvgLR.png?resize=551%2C1024&ssl=1",alt:"Closed",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Closed")],-1)),n[38]||(n[38]=s("figure",null,[s("img",{src:"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/cdpn.io_pen_debug_GRVvgLR-1.png?resize=551%2C1024&ssl=1",alt:"Open",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Open")],-1)),n[39]||(n[39]=s("p",null,"View Transitions is a great way to handle animating this menu open. I won’t beat around the bush with a working example. Here’s that:",-1)),t(c,{user:"chriscoyier","slug-hash":"GRVvgLR",title:"View Transition Staggers with Sass","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),s("p",null,[n[16]||(n[16]=a("That works in all browsers (")),s("a",C,[t(u,{icon:"fas fa-globe"}),n[15]||(n[15]=a("see support"))]),n[17]||(n[17]=a("). It animates (with staggering) in Chrome and Safari, and at this time of this writing, just instantly opens and closes in Firefox (which is fine, just less fancy)."))]),n[40]||(n[40]=l(`<hr><h2 id="unique-view-transition-names" tabindex="-1"><a class="header-anchor" href="#unique-view-transition-names"><span>Unique View Transition Names</span></a></h2><p>In order to make the view transition work at all, every single item needs a unique <code>view-transition-name</code>. Otherwise the items will not animate on their own. If you ever seen a view transition that has a simple fade-out-fade-in, when you were trying to see movement, it’s probably a problem with unique <code>view-transition-name</code>s.</p><p>This brings me to my first point. Generating unique <code>view-transition-name</code>s is a bit cumbersome. In a “real world” application, it’s probably not <em>that</em> big of a deal as you’ll likely be using some kind of templating that could add it. Some variation of this:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span></span>
<span class="line">     <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> card-&lt;%= card.id %&gt;</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- turns into --&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> </span>
<span class="line">     <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> card-987adf87aodfasd<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>But… you don’t <em>always</em> have access to something like that, and even when you do, isn’t it a bit weird that the only real practical way to apply these is from the HTML and not the CSS? Don’t love it. In my simple example, I use Pug to create a loop to do it.</p><div class="language-pug line-numbers-mode" data-highlighter="prismjs" data-ext="pug"><pre><code class="language-pug"><span class="line"><span class="token tag"><span class="token attr-id">#grid</span></span></span>
<span class="line">  <span class="token punctuation">-</span><span class="token code"> <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span></span>
<span class="line">  <span class="token punctuation">-</span><span class="token code"> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span></span>
<span class="line">    <span class="token tag">div<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">style</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">view-transition-name: item-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">\`</span></span></span><span class="token punctuation">)</span></span></span>\`</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That Pug code turns into:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-0<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-1<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-2<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-3<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-4<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-5<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-6<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-7<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-8<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-9<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),s("p",null,[n[21]||(n[21]=a("Jen Simmons ")),s("a",T,[n[18]||(n[18]=a("made the point about how odd this is (")),t(u,{icon:"iconfont icon-github"}),n[19]||(n[19]=s("code",null,"w3c/csswg-drafts",-1)),n[20]||(n[20]=a(")"))]),n[22]||(n[22]=a("."))]),s("p",null,[n[26]||(n[26]=a("This is being improved, I hear. ")),s("a",I,[n[23]||(n[23]=a("The CSSWG has resolved to (")),t(u,{icon:"iconfont icon-github"}),n[24]||(n[24]=s("code",null,"w3c/csswg-drafts",-1)),n[25]||(n[25]=a(")"))]),n[27]||(n[27]=a("…"))]),n[41]||(n[41]=l(`<blockquote><p>Add three keywords, one for ID attribute, one for element identity, and one that does fallback between the two.</p></blockquote><p>Which sounds likely we’ll be able to do something like:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">#grid</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">&gt; div</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">view-transition-name</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This makes me think that it could break in cross-document view transitions, but… I don’t think it actually will if you use the <code>id</code> attribute on elements and the <code>view-transition-name</code> ends up being based on that. Should be sweet.</p><hr><h2 id="customizing-the-animation" tabindex="-1"><a class="header-anchor" href="#customizing-the-animation"><span>Customizing the Animation</span></a></h2><p>We’ve got another issue here. It wasn’t just a Pug loop need to pull of the view transition staggering, it’s a Sass loop as well. That’s because in order to control the animation (applying an <code>animation-delay</code> which will achieve the staggering), we need to give a pseudo class selector the <code>view-transition-name</code>, which are all unique. So…</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">::view-transition-group(item-0)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">::view-transition-group(item-1)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.01s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">::view-transition-group(item-0)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.02s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">/* etc. */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That’s just as cumbersome as the HTML part, except maybe even more-so, as it’s less and less common we even have a CSS processor like Sass to help. If we do, we can do it like this:</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 0 <span class="token keyword">through</span> <span class="token selector">9 </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>item-<span class="token variable">#{$i}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token variable">$i</span> <span class="token operator">*</span> 0.01s<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="making-our-own-sibling-indexes-with-custom-properties" tabindex="-1"><a class="header-anchor" href="#making-our-own-sibling-indexes-with-custom-properties"><span>Making Our Own Sibling Indexes with Custom Properties</span></a></h3><p>How much do we need to delay each animation in order to stagger it? Well it should be a different timing, probably increasing slightly for each element.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="outptu"><span>outptu</span></div><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext"><pre><code class="language-plaintext"><span class="line">1st element = 0s delay  </span>
<span class="line">2nd element = 0.01s delay  </span>
<span class="line">3rd element - 0.02s delay  </span>
<span class="line">etc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>How do we know which element is the 1st, 2nd, 3rd, etc? Well we could use <code>:nth-child(1)</code>, <code>:nth-child(2)</code> etc, but that saves us nothing. We still have super repetitive CSS that all but requires a CSS processor to manage.</p><p>Since we’re already applying unique <code>view-transition-name</code>s at the HTML level, we could apply the element’s “index” at that level too, like:</p><div class="language-pug line-numbers-mode" data-highlighter="prismjs" data-ext="pug"><pre><code class="language-pug"><span class="line"><span class="token tag"><span class="token attr-id">#grid</span></span></span>
<span class="line">  <span class="token punctuation">-</span><span class="token code"> <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span></span>
<span class="line">  <span class="token punctuation">-</span><span class="token code"> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span></span>
<span class="line">    <span class="token tag">div<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">style</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">view-transition-name: item-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; --sibling-index: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">\`</span></span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">#{icons[i]}\`</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Which gets us that index as a custom property:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-0<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-1<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-2<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-3<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-4<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-5<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 5<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-6<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 6<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-7<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 7<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-8<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 8<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">view-transition-name</span><span class="token punctuation">:</span> item-9<span class="token punctuation">;</span> <span class="token property">--sibling-index</span><span class="token punctuation">:</span> 9<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="but-does-that-actually-help-us" tabindex="-1"><a class="header-anchor" href="#but-does-that-actually-help-us"><span>… but does that actually help us?</span></a></h3><p>Not really?</p><p>It seems like we should be able to use that value <em>rather</em> than the CSS processor value, like…</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 0 <span class="token keyword">through</span> <span class="token selector">9 </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>item-<span class="token variable">#{$i}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--sibling-index<span class="token punctuation">)</span> <span class="token operator">*</span> 0.01s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>But there are two problems with this:</p><ol><li>We need the Sass loop anyway for the view transition names</li><li>It doesn’t work</li></ol><p>Lolz. There is something about the CSS custom property that doesn’t get applied do the <code>::view-transition-group</code> like you would expect it to. Or at least <em>*I*</em> would expect it to. 🤷</p><hr><h2 id="enter-view-transition-class" tabindex="-1"><a class="header-anchor" href="#enter-view-transition-class"><span>Enter <code>view-transition-class</code></span></a></h2><p>There is a way to target and control the CSS animation of <em>a selected bunch</em> of elements at once, without having to apply a <code>::view-transition-group</code> to <em>individual</em> elements. That’s like this:</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token selector">#grid </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">&gt; div </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">view-transition-class</span><span class="token punctuation">:</span> item<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice that’s <em>class</em> not <em>name</em> in the property name. Now we can use that to select all the elements rather than using a loop.</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token comment">/* Matches a single element with \`view-transition-name: item-5\` */</span></span>
<span class="line"><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>item-5<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.05s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* Matches all elements with \`view-transition-class: item\` */</span></span>
<span class="line"><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>*.item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.05s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That <code>*.</code> syntax is what makes it use the class instead of the name. That’s how I understand it at least!</p><p>So with this, we’re <em>getting closer</em> to having staggering working without needing a CSS processor:</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>*.item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--sibling-index<span class="token punctuation">)</span> <span class="token operator">*</span> 0.01s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Except: that doesn’t work. It doesn’t work because <code>--sibling-index</code> doesn’t seem available to the pseudo class selector we’re using there. I have no idea if that is a bug or not, but it feels like it is to me.</p><hr><h2 id="real-sibling-index-in-css" tabindex="-1"><a class="header-anchor" href="#real-sibling-index-in-css"><span>Real Sibling Index in CSS</span></a></h2>`,37)),s("p",null,[n[31]||(n[31]=a("We’re kinda “faking” sibling index with custom properties here, but we wouldn’t have to do that forever. The ")),s("a",V,[n[28]||(n[28]=a("CSSWG has resolved (")),t(u,{icon:"iconfont icon-github"}),n[29]||(n[29]=s("code",null,"w3c/csswg-drafts",-1)),n[30]||(n[30]=a(")"))]),n[32]||(n[32]=a(":"))]),n[42]||(n[42]=l(`<blockquote><p><code>sibling-count()</code> and <code>sibling-index()</code> to css-values-5 ED</p></blockquote><p>I’m told Chrome is going to throw engineering at it in Q4 2024, so we should see an implementation soon.</p><p>So then mayyyyybe we’d see this working:</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>*.item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">sibling-index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> 0.01s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now that’s enabling view transitions staggering beautifully easily, so I’m going to cross my fingers there.</p><h3 id="random-stagger" tabindex="-1"><a class="header-anchor" href="#random-stagger"><span>Random Stagger</span></a></h3><p>And speaking of newfangled CSS, <code>random()</code> should be coming to native CSS at some point somewhat soon as well as I belive that’s been given the thumbs up. So rather than perfectly even staggering, we could do like…</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">view-transition-group</span><span class="token punctuation">(</span>*.item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> 0.01s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Faking that with Sass if fun!</p>`,9)),t(c,{user:"chriscoyier","slug-hash":"JjgrNLx",title:"View Transition Staggers with Sass + Random","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),n[43]||(n[43]=s("h3",{id:"sibling-count-is-useful-too",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#sibling-count-is-useful-too"},[s("span",null,"Sibling Count is Useful Too")])],-1)),n[44]||(n[44]=s("p",null,[a("Sometimes you need to know "),s("em",null,"how many"),a(" items there are also, so you can control timing and delays such that, for example, the last animation can end when the first one starts again. Here’s an example from Stephen Shaw with fakes values as Custom Properties showing how that would be used.")],-1)),t(c,{user:"shshaw","slug-hash":"LYEEKMQ",title:"sibling-count() and sibling-index() fade example","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),n[45]||(n[45]=l(`<p>One line above could be written removing the need for custom properties:</p><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss"><pre><code class="language-scss"><span class="line"><span class="token comment">/* before */</span></span>
<span class="line"><span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>2s <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--sibling-index<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">var</span><span class="token punctuation">(</span>--sibling-count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* after */</span></span>
<span class="line"><span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>2s <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">sibling-index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">sibling-count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="overflow-is-a-small-bummer" tabindex="-1"><a class="header-anchor" href="#overflow-is-a-small-bummer"><span>Overflow is a small bummer</span></a></h2><p>I just noticed while working on this particular demo that during a view transition, the elements that are animating are moved to something like a “top layer” in the document, meaning they do not respect the <code>overflow</code> of parent elements and whatnot. See example:</p>`,5)),t(c,{user:"chriscoyier","slug-hash":"XWveRxx",title:"View Transition Staggers with Sass Overflow Issue","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),n[46]||(n[46]=l('<p>Don’t love that, but I’m sure there are huge tradeoffs that I’m just not aware of. I’ve been told this is actually a desirable trait of view transitions 🤷.</p><hr><h2 id="p-s-devtools-can-inspect-this-stuff" tabindex="-1"><a class="header-anchor" href="#p-s-devtools-can-inspect-this-stuff"><span>p.s. DevTools Can Inspect This Stuff</span></a></h2><p>In Chrome-based browsers, open the Animations tab and slow down the animations way down.</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/Screenshot-2024-10-22-at-9.36.15 AM.png?resize=1012%2C790&amp;ssl=1" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>The mid-animation, you can use that Pause icon to literally stop them. It’s just easier to see everything when it’s stopped. Then you’ll see a <code>:view-transition</code> element at the top of the DOM and you can drill into it an inspect what’s going on.</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/Screenshot-2024-10-22-at-9.37.56 AM.png?resize=810%2C416&amp;ssl=1" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',7)),b(" TODO: add ARTICLE CARD "),t(r,d(k({title:"View Transitions Staggering",desc:"When you use View Transitions on multiple elements, it can be a very nice look to stagger them out a little bit. It's possible now, but a bit finicky. Let's take a look at some code, present and future, that will help. ",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/view-transitions-staggering.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const z=v(f,[["render",j]]),P=JSON.parse('{"path":"/frontendmasters.com/view-transitions-staggering.html","title":"View Transitions Staggering","lang":"en-US","frontmatter":{"lang":"en-US","title":"View Transitions Staggering","description":"Article(s) > View Transitions Staggering","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","frontendmasters.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"View Transitions Staggering\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/cdpn.io_pen_debug_GRVvgLR.png?resize=551%2C1024&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/cdpn.io_pen_debug_GRVvgLR-1.png?resize=551%2C1024&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/Screenshot-2024-10-22-at-9.36.15%E2%80%AFAM.png?resize=1012%2C790&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/Screenshot-2024-10-22-at-9.37.56%E2%80%AFAM.png?resize=810%2C416&ssl=1\\"],\\"datePublished\\":\\"2024-10-22T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/view-transitions-staggering.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"View Transitions Staggering"}],["meta",{"property":"og:description","content":"Article(s) > View Transitions Staggering"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4232"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4232"}],["meta",{"name":"twitter:image:alt","content":"View Transitions Staggering"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-10-22T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > View Transitions Staggering"},{"property":"og:description","content":"View Transitions Staggering"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/view-transitions-staggering.html"}]],"prev":"/programming/css/articles/README.md","date":"2024-10-22T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4232"},"git":{},"readingTime":{"minutes":7.07,"words":2121},"filePathRelative":"frontendmasters.com/view-transitions-staggering.md","copyright":{"author":"Chris Coyier"}}');export{z as comp,P as data};
