import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as s,f as e,b as l,a as y,t as f,n as d,g as k,w as t,e as a,r,o as w}from"./app-BVguHYKu.js";const S={},C={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},D={class:"table-of-contents"},A={id:"_1-configure-sqldelight-in-build-gradle-kts",tabindex:"-1"},M={class:"header-anchor",href:"#_1-configure-sqldelight-in-build-gradle-kts"},q={id:"common-interface-commonmain-data-local-databasedriverfactory-kt",tabindex:"-1"},_={class:"header-anchor",href:"#common-interface-commonmain-data-local-databasedriverfactory-kt"},T={id:"android-implementation-androidmain-data-local-databasedriverfactory-android-kt",tabindex:"-1"},O={class:"header-anchor",href:"#android-implementation-androidmain-data-local-databasedriverfactory-android-kt"},E={id:"ios-implementation-iosmain-data-local-databasedriverfactory-ios-kt",tabindex:"-1"},I={class:"header-anchor",href:"#ios-implementation-iosmain-data-local-databasedriverfactory-ios-kt"},N={id:"repository-interface-domain-repository-subscriptionrepository-kt",tabindex:"-1"},L={class:"header-anchor",href:"#repository-interface-domain-repository-subscriptionrepository-kt"},F={id:"use-case-example-domain-usecase-getsubscriptionsusecase-kt",tabindex:"-1"},R={class:"header-anchor",href:"#use-case-example-domain-usecase-getsubscriptionsusecase-kt"},P={href:"https://github.com/tomriddle25/kyklos",target:"_blank",rel:"noopener noreferrer"};function K(m,n){const u=r("VPCard"),p=r("router-link"),i=r("VPIcon"),v=r("SiteInfo"),b=r("Tabs");return w(),h("div",null,[s("h1",C,[s("a",x,[s("span",null,f(m.$frontmatter.title)+" 관련",1)])]),e(u,d(k({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",D,[s("ul",null,[s("li",null,[e(p,{to:"#🎯-introduction"},{default:t(()=>n[0]||(n[0]=[a("🎯 Introduction")])),_:1,__:[0]})]),s("li",null,[e(p,{to:"#🛠️-setting-up-the-development-environment"},{default:t(()=>n[1]||(n[1]=[a("🛠️ Setting Up the Development Environment")])),_:1,__:[1]}),s("ul",null,[s("li",null,[e(p,{to:"#creating-the-project"},{default:t(()=>n[2]||(n[2]=[a("Creating the Project")])),_:1,__:[2]})])])]),s("li",null,[e(p,{to:"#📦-dependencies-and-project-structure"},{default:t(()=>n[3]||(n[3]=[a("📦 Dependencies and Project Structure")])),_:1,__:[3]}),s("ul",null,[s("li",null,[e(p,{to:"#core-dependencies"},{default:t(()=>n[4]||(n[4]=[a("Core Dependencies")])),_:1,__:[4]})]),s("li",null,[e(p,{to:"#project-architecture"},{default:t(()=>n[5]||(n[5]=[a("Project Architecture")])),_:1,__:[5]})])])]),s("li",null,[e(p,{to:"#🗄️-setting-up-sqldelight-database"},{default:t(()=>n[6]||(n[6]=[a("🗄️ Setting Up SQLDelight Database")])),_:1,__:[6]}),s("ul",null,[s("li",null,[e(p,{to:"#_1-configure-sqldelight-in-build-gradle-kts"},{default:t(()=>[n[7]||(n[7]=a("1. Configure SQLDelight in ")),e(i,{icon:"iconfont icon-kotlin"}),n[8]||(n[8]=a("build.gradle.kts"))]),_:1,__:[7,8]})]),s("li",null,[e(p,{to:"#_2-create-database-schema"},{default:t(()=>n[9]||(n[9]=[a("2. Create Database Schema")])),_:1,__:[9]})]),s("li",null,[e(p,{to:"#_3-cross-platform-database-drivers"},{default:t(()=>n[10]||(n[10]=[a("3. Cross-Platform Database Drivers")])),_:1,__:[10]})])])]),s("li",null,[e(p,{to:"#🏛️-implementing-clean-architecture"},{default:t(()=>n[11]||(n[11]=[a("🏛️ Implementing Clean Architecture")])),_:1,__:[11]}),s("ul",null,[s("li",null,[e(p,{to:"#_1-domain-layer-business-logic"},{default:t(()=>n[12]||(n[12]=[a("1. Domain Layer - Business Logic")])),_:1,__:[12]})]),s("li",null,[e(p,{to:"#_2-data-layer-repository-implementation"},{default:t(()=>n[13]||(n[13]=[a("2. Data Layer - Repository Implementation")])),_:1,__:[13]})]),s("li",null,[e(p,{to:"#_3-data-models-with-business-logic"},{default:t(()=>n[14]||(n[14]=[a("3. Data Models with Business Logic")])),_:1,__:[14]})])])]),s("li",null,[e(p,{to:"#🎨-building-the-ui-with-compose-multiplatform"},{default:t(()=>n[15]||(n[15]=[a("🎨 Building the UI with Compose Multiplatform")])),_:1,__:[15]}),s("ul",null,[s("li",null,[e(p,{to:"#_1-material-design-3-theme"},{default:t(()=>n[16]||(n[16]=[a("1. Material Design 3 Theme")])),_:1,__:[16]})]),s("li",null,[e(p,{to:"#_2-reusable-ui-components"},{default:t(()=>n[17]||(n[17]=[a("2. Reusable UI Components")])),_:1,__:[17]})]),s("li",null,[e(p,{to:"#_3-screen-level-composables"},{default:t(()=>n[18]||(n[18]=[a("3. Screen-Level Composables")])),_:1,__:[18]})])])]),s("li",null,[e(p,{to:"#⚠️-ios-compatibility-critical-gotchas"},{default:t(()=>n[19]||(n[19]=[a("⚠️ iOS Compatibility: Critical Gotchas")])),_:1,__:[19]}),s("ul",null,[s("li",null,[e(p,{to:"#_1-string-formatting"},{default:t(()=>n[20]||(n[20]=[a("1. String Formatting")])),_:1,__:[20]})]),s("li",null,[e(p,{to:"#_2-uuid-generation"},{default:t(()=>n[21]||(n[21]=[a("2. UUID Generation")])),_:1,__:[21]})])])]),s("li",null,[e(p,{to:"#🚀-building-and-running"},{default:t(()=>n[22]||(n[22]=[a("🚀 Building and Running")])),_:1,__:[22]}),s("ul",null,[s("li",null,[e(p,{to:"#build-commands"},{default:t(()=>n[23]||(n[23]=[a("Build Commands")])),_:1,__:[23]})])])]),s("li",null,[e(p,{to:"#📱-running-on-ios-simulator"},{default:t(()=>n[24]||(n[24]=[a("📱 Running on iOS Simulator")])),_:1,__:[24]}),s("ul",null,[s("li",null,[e(p,{to:"#_1-generate-ios-framework"},{default:t(()=>n[25]||(n[25]=[a("1. Generate iOS Framework")])),_:1,__:[25]})]),s("li",null,[e(p,{to:"#_2-open-ios-project-in-xcode"},{default:t(()=>n[26]||(n[26]=[a("2. Open iOS Project in Xcode")])),_:1,__:[26]})]),s("li",null,[e(p,{to:"#_3-configure-and-run"},{default:t(()=>n[27]||(n[27]=[a("3. Configure and Run")])),_:1,__:[27]})]),s("li",null,[e(p,{to:"#_4-development-workflow"},{default:t(()=>n[28]||(n[28]=[a("4. Development Workflow")])),_:1,__:[28]})]),s("li",null,[e(p,{to:"#_5-troubleshooting-ios-issues"},{default:t(()=>n[29]||(n[29]=[a("5. Troubleshooting iOS Issues")])),_:1,__:[29]})])])]),s("li",null,[e(p,{to:"#🎯-advanced-features-and-next-steps"},{default:t(()=>n[30]||(n[30]=[a("🎯 Advanced Features and Next Steps")])),_:1,__:[30]}),s("ul",null,[s("li",null,[e(p,{to:"#current-implementation-status"},{default:t(()=>n[31]||(n[31]=[a("Current Implementation Status")])),_:1,__:[31]})]),s("li",null,[e(p,{to:"#immediate-next-steps"},{default:t(()=>n[32]||(n[32]=[a("Immediate Next Steps")])),_:1,__:[32]})]),s("li",null,[e(p,{to:"#future-roadmap"},{default:t(()=>n[33]||(n[33]=[a("Future Roadmap")])),_:1,__:[33]})])])]),s("li",null,[e(p,{to:"#🎯-conclusion"},{default:t(()=>n[34]||(n[34]=[a("🎯 Conclusion")])),_:1,__:[34]})])])]),n[73]||(n[73]=s("hr",null,null,-1)),e(v,{name:"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)",desc:"A comprehensive guide to building your first Kotlin Multiplatform app using Compose Multiplatform, covering setup, development, and deployment",url:"https://kt.academy/kmp-to-compose-guide",logo:"https://kt.academy/logo.png",preview:"https://marcinmoskala.com/kt-academy-articles/promotion/building_first_kmm_app.png"}),n[74]||(n[74]=l(`<div class="hint-container info"><p class="hint-container-title">Info</p><p><strong>🎯 What You&#39;ll Learn:</strong></p><p>Build a production-ready subscription tracker that runs natively on Android and iOS with 95% shared code, including database, business logic, and UI.</p><p><strong>⏱️ Time Investment:</strong></p><p>~3-4 hours for complete implementation</p><p><strong>🎯 Target Audience:</strong></p><p>Android developers exploring KMP, iOS developers curious about Kotlin</p></div><hr><h2 id="🎯-introduction" tabindex="-1"><a class="header-anchor" href="#🎯-introduction"><span>🎯 Introduction</span></a></h2><p>Remember when building for both Android and iOS meant writing everything twice? Those days are over.</p><p>With Compose Multiplatform for iOS now stable (May 2025), you can build truly native apps with 95% shared code. No more maintaining two codebases, no more feature parity issues, no more &quot;it works on Android but breaks on iOS.&quot;</p><p>In this comprehensive guide, we&#39;ll build <strong>Kyklos</strong>—a subscription management app that proves KMP is ready for production. We&#39;ll tackle real challenges like cross-platform databases, Material Design on iOS, and the gotchas that can trip up new KMP developers.</p><p>By the end of this tutorial, you&#39;ll have created a fully functional app with:</p><ul><li>✅ Shared business logic and UI between Android and iOS</li><li>✅ Clean Architecture with proper separation of concerns</li><li>✅ Type-safe database using SQLDelight</li><li>✅ Material Design 3 theming that works on iOS</li><li>✅ Production-ready iOS support with real device testing</li></ul><div class="hint-container info"><p class="hint-container-title">🏗️ What We&#39;re Building</p><p><strong>Kyklos</strong> (Greek for &quot;cycle&quot;) is a subscription management app that helps users track their recurring payments. The app features:</p><ul><li>📱 Cross-platform native UI with shared Compose code</li><li>💰 Subscription tracking with intelligent cost calculations</li><li>🌍 Multi-currency support (USD, EUR, GBP, CAD, AUD, INR)</li><li>📊 Monthly spending summaries and analytics</li><li>🎨 Modern Material Design 3 interface</li><li>🔄 Real-time sync across platforms</li></ul></div><hr><h2 id="🛠️-setting-up-the-development-environment" tabindex="-1"><a class="header-anchor" href="#🛠️-setting-up-the-development-environment"><span>🛠️ Setting Up the Development Environment</span></a></h2><div class="hint-container note"><p class="hint-container-title">Prerequisites</p><ul><li><strong>Android Studio</strong> with the latest KMP plugin</li><li><strong>Xcode 14+</strong> (for iOS development and simulator)</li><li><strong>JDK 11+</strong></li><li><strong>Kotlin 2.1.21+</strong></li></ul></div><h3 id="creating-the-project" tabindex="-1"><a class="header-anchor" href="#creating-the-project"><span>Creating the Project</span></a></h3><p>Start by creating a new Kotlin Multiplatform project:</p><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext"><pre><code class="language-plaintext"><span class="line"># Option 1: Using the KMP wizard (Recommended)</span>
<span class="line"># Visit: https://kmp.jetbrains.com/</span>
<span class="line"># Configure: Android + iOS + Compose Multiplatform</span>
<span class="line"></span>
<span class="line"># Option 2: Android Studio</span>
<span class="line"># New Project &gt; Kotlin Multiplatform &gt; Mobile Application</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🏗️-architecture-decision" tabindex="-1"><a class="header-anchor" href="#🏗️-architecture-decision"><span>🏗️ Architecture Decision</span></a></h4><p>Why start with the official wizard? It sets up the proper expect/actual structure and configures Compose Multiplatform correctly for both platforms.</p><hr><h2 id="📦-dependencies-and-project-structure" tabindex="-1"><a class="header-anchor" href="#📦-dependencies-and-project-structure"><span>📦 Dependencies and Project Structure</span></a></h2><h3 id="core-dependencies" tabindex="-1"><a class="header-anchor" href="#core-dependencies"><span>Core Dependencies</span></a></h3><p>Let&#39;s set up our <code>gradle/libs.versions.toml</code> with production-ready versions:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="gradle/libs.versions.toml"><span>gradle/libs.versions.toml</span></div><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">versions</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">kotlin</span> <span class="token punctuation">=</span> <span class="token string">&quot;2.1.21&quot;</span></span>
<span class="line"><span class="token key property">composeMultiplatform</span> <span class="token punctuation">=</span> <span class="token string">&quot;1.8.2&quot;</span></span>
<span class="line"><span class="token key property">sqlDelight</span> <span class="token punctuation">=</span> <span class="token string">&quot;2.0.2&quot;</span></span>
<span class="line"><span class="token key property">kotlinx-datetime</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.6.0&quot;</span></span>
<span class="line"><span class="token key property">uuid</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.8.4&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token table class-name">libraries</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># SQLDelight for cross-platform database</span></span>
<span class="line"><span class="token key property">sqlDelight-driver-android</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">module</span> <span class="token punctuation">=</span> <span class="token string">&quot;app.cash.sqldelight:android-driver&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;sqlDelight&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token key property">sqlDelight-driver-native</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">module</span> <span class="token punctuation">=</span> <span class="token string">&quot;app.cash.sqldelight:native-driver&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;sqlDelight&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token key property">sqlDelight-runtime</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">module</span> <span class="token punctuation">=</span> <span class="token string">&quot;app.cash.sqldelight:runtime&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;sqlDelight&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token key property">sqlDelight-coroutines</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">module</span> <span class="token punctuation">=</span> <span class="token string">&quot;app.cash.sqldelight:coroutines-extensions&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;sqlDelight&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Cross-platform utilities</span></span>
<span class="line"><span class="token key property">kotlinx-datetime</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">module</span> <span class="token punctuation">=</span> <span class="token string">&quot;org.jetbrains.kotlinx:kotlinx-datetime&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;kotlinx-datetime&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token key property">uuid</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">module</span> <span class="token punctuation">=</span> <span class="token string">&quot;com.benasher44:uuid&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;uuid&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token table class-name">plugins</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">sqlDelight</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">id</span> <span class="token punctuation">=</span> <span class="token string">&quot;app.cash.sqldelight&quot;</span><span class="token punctuation">,</span> <span class="token key property">version.ref</span> <span class="token punctuation">=</span> <span class="token string">&quot;sqlDelight&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="project-architecture" tabindex="-1"><a class="header-anchor" href="#project-architecture"><span>Project Architecture</span></a></h3><p>We&#39;ll implement <strong>Clean Architecture</strong> with clear layer separation:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="file structure"><span>file structure</span></div><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext"><pre><code class="language-plaintext"><span class="line">📱 Presentation Layer (UI)</span>
<span class="line">├── 🎨 components/     # Reusable UI components</span>
<span class="line">├── 📄 screens/        # Screen-level composables  </span>
<span class="line">└── 🎭 theme/          # Material Design theme</span>
<span class="line"></span>
<span class="line">💼 Domain Layer (Business Logic)</span>
<span class="line">├── 📋 usecase/        # Business use cases</span>
<span class="line">└── 📄 repository/     # Repository interfaces</span>
<span class="line"></span>
<span class="line">💾 Data Layer (Data Management)  </span>
<span class="line">├── 🗄️ local/          # SQLDelight database</span>
<span class="line">├── 📊 repository/     # Repository implementations</span>
<span class="line">└── 🔄 model/          # Data models</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container info"><p class="hint-container-title">🏗️ Architecture Decision:</p><p>Clean Architecture separates platform code from business logic, making testing easier and code more maintainable across Android and iOS.</p></div><hr><h2 id="🗄️-setting-up-sqldelight-database" tabindex="-1"><a class="header-anchor" href="#🗄️-setting-up-sqldelight-database"><span>🗄️ Setting Up SQLDelight Database</span></a></h2>`,28)),s("h3",A,[s("a",M,[s("span",null,[n[35]||(n[35]=a("1. Configure SQLDelight in ")),e(i,{icon:"iconfont icon-kotlin"}),n[36]||(n[36]=s("code",null,"build.gradle.kts",-1))])])]),n[75]||(n[75]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="build.gradle.kts"><span>build.gradle.kts</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">sqldelight <span class="token punctuation">{</span></span>
<span class="line">    databases <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">create</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;KyklosDatabase&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            packageName<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;dev.faisalahmed.kyklos.db&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">srcDirs</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;src/commonMain/sqldelight&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_2-create-database-schema" tabindex="-1"><a class="header-anchor" href="#_2-create-database-schema"><span>2. Create Database Schema</span></a></h3>`,2)),s("p",null,[n[37]||(n[37]=a("Create ")),e(i,{icon:"fas fa-folder-open"}),n[38]||(n[38]=s("code",null,"composeApp/src/commonMain/sqldelight/database/",-1)),e(i,{icon:"fas fa-file-lines"}),n[39]||(n[39]=s("code",null,"Subscription.sq",-1)),n[40]||(n[40]=a(":"))]),n[76]||(n[76]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="composeApp/src/commonMain/sqldelight/database/Subscription.sq"><span>composeApp/src/commonMain/sqldelight/database/Subscription.sq</span></div><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token comment">-- Subscription table with proper indexing for performance</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> subscription <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    name <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    cost <span class="token keyword">REAL</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    currency_code <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    billing_cycle <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    next_payment_date <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    is_active <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    created_at <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    updated_at <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    notes <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>currency_code<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> currency<span class="token punctuation">(</span>code<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Performance indexes for common queries</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_subscription_active <span class="token keyword">ON</span> subscription<span class="token punctuation">(</span>is_active<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_subscription_next_payment <span class="token keyword">ON</span> subscription<span class="token punctuation">(</span>next_payment_date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Query: Get all subscriptions with currency info</span></span>
<span class="line">selectAll:</span>
<span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">    s<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>symbol <span class="token keyword">AS</span> currency_symbol<span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>name <span class="token keyword">AS</span> currency_name<span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>exchange_rate_to_usd</span>
<span class="line"><span class="token keyword">FROM</span> subscription s</span>
<span class="line"><span class="token keyword">JOIN</span> currency c <span class="token keyword">ON</span> s<span class="token punctuation">.</span>currency_code <span class="token operator">=</span> c<span class="token punctuation">.</span>code</span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> s<span class="token punctuation">.</span>next_payment_date <span class="token keyword">ASC</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Query: Get only active subscriptions</span></span>
<span class="line">selectActive:</span>
<span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">    s<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>symbol <span class="token keyword">AS</span> currency_symbol<span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>name <span class="token keyword">AS</span> currency_name<span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>exchange_rate_to_usd</span>
<span class="line"><span class="token keyword">FROM</span> subscription s</span>
<span class="line"><span class="token keyword">JOIN</span> currency c <span class="token keyword">ON</span> s<span class="token punctuation">.</span>currency_code <span class="token operator">=</span> c<span class="token punctuation">.</span>code</span>
<span class="line"><span class="token keyword">WHERE</span> s<span class="token punctuation">.</span>is_active <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> s<span class="token punctuation">.</span>next_payment_date <span class="token keyword">ASC</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Insert new subscription</span></span>
<span class="line">insertSubscription:</span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> subscription <span class="token punctuation">(</span></span>
<span class="line">    id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> cost<span class="token punctuation">,</span> currency_code<span class="token punctuation">,</span> billing_cycle<span class="token punctuation">,</span></span>
<span class="line">    next_payment_date<span class="token punctuation">,</span> is_active<span class="token punctuation">,</span> created_at<span class="token punctuation">,</span> updated_at<span class="token punctuation">,</span> notes</span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Analytics query for monthly cost calculations</span></span>
<span class="line">selectTotalMonthlyCostByActive:</span>
<span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">    s<span class="token punctuation">.</span>currency_code<span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>symbol <span class="token keyword">AS</span> currency_symbol<span class="token punctuation">,</span></span>
<span class="line">    c<span class="token punctuation">.</span>exchange_rate_to_usd<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">SUM</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token keyword">CASE</span></span>
<span class="line">            <span class="token keyword">WHEN</span> s<span class="token punctuation">.</span>billing_cycle <span class="token operator">=</span> <span class="token string">&#39;WEEKLY&#39;</span> <span class="token keyword">THEN</span> s<span class="token punctuation">.</span>cost <span class="token operator">*</span> <span class="token number">4.33</span></span>
<span class="line">            <span class="token keyword">WHEN</span> s<span class="token punctuation">.</span>billing_cycle <span class="token operator">=</span> <span class="token string">&#39;MONTHLY&#39;</span> <span class="token keyword">THEN</span> s<span class="token punctuation">.</span>cost</span>
<span class="line">            <span class="token keyword">WHEN</span> s<span class="token punctuation">.</span>billing_cycle <span class="token operator">=</span> <span class="token string">&#39;QUARTERLY&#39;</span> <span class="token keyword">THEN</span> s<span class="token punctuation">.</span>cost <span class="token operator">/</span> <span class="token number">3.0</span></span>
<span class="line">            <span class="token keyword">WHEN</span> s<span class="token punctuation">.</span>billing_cycle <span class="token operator">=</span> <span class="token string">&#39;SEMI_ANNUALLY&#39;</span> <span class="token keyword">THEN</span> s<span class="token punctuation">.</span>cost <span class="token operator">/</span> <span class="token number">6.0</span></span>
<span class="line">            <span class="token keyword">WHEN</span> s<span class="token punctuation">.</span>billing_cycle <span class="token operator">=</span> <span class="token string">&#39;ANNUALLY&#39;</span> <span class="token keyword">THEN</span> s<span class="token punctuation">.</span>cost <span class="token operator">/</span> <span class="token number">12.0</span></span>
<span class="line">            <span class="token keyword">ELSE</span> s<span class="token punctuation">.</span>cost</span>
<span class="line">        <span class="token keyword">END</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token keyword">AS</span> monthly_cost</span>
<span class="line"><span class="token keyword">FROM</span> subscription s</span>
<span class="line"><span class="token keyword">JOIN</span> currency c <span class="token keyword">ON</span> s<span class="token punctuation">.</span>currency_code <span class="token operator">=</span> c<span class="token punctuation">.</span>code</span>
<span class="line"><span class="token keyword">WHERE</span> s<span class="token punctuation">.</span>is_active <span class="token operator">=</span> ?</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> s<span class="token punctuation">.</span>currency_code<span class="token punctuation">,</span> c<span class="token punctuation">.</span>symbol<span class="token punctuation">,</span> c<span class="token punctuation">.</span>exchange_rate_to_usd<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_3-cross-platform-database-drivers" tabindex="-1"><a class="header-anchor" href="#_3-cross-platform-database-drivers"><span>3. Cross-Platform Database Drivers</span></a></h3><p>The key to SQLDelight&#39;s cross-platform magic is the <strong>expect/actual</strong> pattern:</p>`,3)),s("h4",q,[s("a",_,[s("span",null,[n[41]||(n[41]=a("Common interface (")),e(i,{icon:"fas fa-folder-open"}),n[42]||(n[42]=s("code",null,"commonMain/data/local/",-1)),e(i,{icon:"iconfont icon-kotlin"}),n[43]||(n[43]=s("code",null,"DatabaseDriverFactory.kt",-1)),n[44]||(n[44]=a(")"))])])]),n[77]||(n[77]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="commonMain/data/local/DatabaseDriverFactory.kt"><span>commonMain/data/local/DatabaseDriverFactory.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> app<span class="token punctuation">.</span>cash<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>db<span class="token punctuation">.</span>SqlDriver</span>
<span class="line">​</span>
<span class="line"><span class="token keyword">expect</span> <span class="token keyword">class</span> DatabaseDriverFactory <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">createDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> SqlDriver</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("h4",T,[s("a",O,[s("span",null,[n[45]||(n[45]=a("Android implementation** (")),e(i,{icon:"fas fa-folder-open"}),n[46]||(n[46]=s("code",null,"androidMain/data/local/",-1)),e(i,{icon:"iconfont icon-kotlin"}),n[47]||(n[47]=s("code",null,"DatabaseDriverFactory.android.kt",-1)),n[48]||(n[48]=a(")"))])])]),n[78]||(n[78]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="androidMain/data/local/DatabaseDriverFactory.android.kt"><span>androidMain/data/local/DatabaseDriverFactory.android.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> app<span class="token punctuation">.</span>cash<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>db<span class="token punctuation">.</span>SqlDriver</span>
<span class="line"><span class="token keyword">import</span> app<span class="token punctuation">.</span>cash<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>android<span class="token punctuation">.</span>AndroidSqliteDriver</span>
<span class="line"><span class="token keyword">import</span> dev<span class="token punctuation">.</span>faisalahmed<span class="token punctuation">.</span>kyklos<span class="token punctuation">.</span>db<span class="token punctuation">.</span>KyklosDatabase</span>
<span class="line">​</span>
<span class="line"><span class="token keyword">actual</span> <span class="token keyword">class</span> <span class="token function">DatabaseDriverFactory</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">val</span> context<span class="token operator">:</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">actual</span> <span class="token keyword">fun</span> <span class="token function">createDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> SqlDriver <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">AndroidSqliteDriver</span><span class="token punctuation">(</span></span>
<span class="line">            schema <span class="token operator">=</span> KyklosDatabase<span class="token punctuation">.</span>Schema<span class="token punctuation">,</span></span>
<span class="line">            context <span class="token operator">=</span> context<span class="token punctuation">,</span></span>
<span class="line">            name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;kyklos.db&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("h4",E,[s("a",I,[s("span",null,[n[49]||(n[49]=a("iOS implementation (")),e(i,{icon:"fas fa-folder-open"}),n[50]||(n[50]=s("code",null,"iosMain/data/local/",-1)),e(i,{icon:"iconfont icon-kotlin"}),n[51]||(n[51]=s("code",null,"DatabaseDriverFactory.ios.kt",-1)),n[52]||(n[52]=a("):"))])])]),n[79]||(n[79]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="iosMain/data/local/DatabaseDriverFactory.ios.kt"><span>iosMain/data/local/DatabaseDriverFactory.ios.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> app<span class="token punctuation">.</span>cash<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>db<span class="token punctuation">.</span>SqlDriver</span>
<span class="line"><span class="token keyword">import</span> app<span class="token punctuation">.</span>cash<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>native<span class="token punctuation">.</span>NativeSqliteDriver</span>
<span class="line"><span class="token keyword">import</span> dev<span class="token punctuation">.</span>faisalahmed<span class="token punctuation">.</span>kyklos<span class="token punctuation">.</span>db<span class="token punctuation">.</span>KyklosDatabase</span>
<span class="line">​</span>
<span class="line"><span class="token keyword">actual</span> <span class="token keyword">class</span> DatabaseDriverFactory <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">actual</span> <span class="token keyword">fun</span> <span class="token function">createDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> SqlDriver <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">NativeSqliteDriver</span><span class="token punctuation">(</span></span>
<span class="line">           schema <span class="token operator">=</span> KyklosDatabase<span class="token punctuation">.</span>Schema<span class="token punctuation">,</span></span>
<span class="line">           name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;kyklos.db&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><hr><h2 id="🏛️-implementing-clean-architecture" tabindex="-1"><a class="header-anchor" href="#🏛️-implementing-clean-architecture"><span>🏛️ Implementing Clean Architecture</span></a></h2><h3 id="_1-domain-layer-business-logic" tabindex="-1"><a class="header-anchor" href="#_1-domain-layer-business-logic"><span>1. Domain Layer - Business Logic</span></a></h3>`,4)),s("h4",N,[s("a",L,[s("span",null,[n[53]||(n[53]=a("Repository Interface (")),e(i,{icon:"fas fa-folder-open"}),n[54]||(n[54]=s("code",null,"domain/repository/",-1)),e(i,{icon:"iconfont icon-kotlin"}),n[55]||(n[55]=s("code",null,"SubscriptionRepository.kt",-1)),n[56]||(n[56]=a("):"))])])]),n[80]||(n[80]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="domain/repository/SubscriptionRepository.kt"><span>domain/repository/SubscriptionRepository.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> dev<span class="token punctuation">.</span>faisalahmed<span class="token punctuation">.</span>kyklos<span class="token punctuation">.</span>data<span class="token punctuation">.</span>model<span class="token punctuation">.</span>Subscription</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>flow<span class="token punctuation">.</span>Flow</span>
<span class="line">​</span>
<span class="line"><span class="token keyword">interface</span> SubscriptionRepository <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">getAllSubscriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Subscription<span class="token operator">&gt;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">getActiveSubscriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Subscription<span class="token operator">&gt;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">getSubscriptionById</span><span class="token punctuation">(</span>id<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> Subscription<span class="token operator">?</span></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">insertSubscription</span><span class="token punctuation">(</span>subscription<span class="token operator">:</span> Subscription<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">updateSubscription</span><span class="token punctuation">(</span>subscription<span class="token operator">:</span> Subscription<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">deleteSubscription</span><span class="token punctuation">(</span>id<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">toggleSubscriptionStatus</span><span class="token punctuation">(</span>id<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("h4",F,[s("a",R,[s("span",null,[n[57]||(n[57]=a("Use Case Example (")),n[58]||(n[58]=s("code",null,"domain/usecase/",-1)),e(i,{icon:"iconfont icon-kotlin"}),n[59]||(n[59]=s("code",null,"GetSubscriptionsUseCase.kt",-1)),n[60]||(n[60]=a("):"))])])]),n[81]||(n[81]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="domain/usecase/GetSubscriptionsUseCase.kt"><span>domain/usecase/GetSubscriptionsUseCase.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> <span class="token function">GetSubscriptionsUseCase</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> repository<span class="token operator">:</span> SubscriptionRepository</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">operator</span> <span class="token keyword">fun</span> <span class="token function">invoke</span><span class="token punctuation">(</span>activeOnly<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Subscription<span class="token operator">&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>activeOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            repository<span class="token punctuation">.</span><span class="token function">getActiveSubscriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            repository<span class="token punctuation">.</span><span class="token function">getAllSubscriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_2-data-layer-repository-implementation" tabindex="-1"><a class="header-anchor" href="#_2-data-layer-repository-implementation"><span>2. Data Layer - Repository Implementation</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> <span class="token function">SubscriptionRepositoryImpl</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> database<span class="token operator">:</span> KyklosDatabase</span>
<span class="line"><span class="token punctuation">)</span> <span class="token operator">:</span> SubscriptionRepository <span class="token punctuation">{</span></span>
<span class="line">​</span>
<span class="line">    <span class="token comment">// Convert SQLDelight query results to domain models</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">getAllSubscriptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Subscription<span class="token operator">&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> database<span class="token punctuation">.</span>subscriptionQueries</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">mapToList</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>IO<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> rows <span class="token operator">-&gt;</span></span>
<span class="line">                rows<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> row <span class="token operator">-&gt;</span> row<span class="token punctuation">.</span><span class="token function">toSubscription</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">​</span>
<span class="line">    <span class="token comment">// Insert subscription with proper error handling</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">insertSubscription</span><span class="token punctuation">(</span>subscription<span class="token operator">:</span> Subscription<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            database<span class="token punctuation">.</span>subscriptionQueries<span class="token punctuation">.</span><span class="token function">insertSubscription</span><span class="token punctuation">(</span></span>
<span class="line">                id <span class="token operator">=</span> subscription<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">                name <span class="token operator">=</span> subscription<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">                cost <span class="token operator">=</span> subscription<span class="token punctuation">.</span>cost<span class="token punctuation">,</span></span>
<span class="line">                currency_code <span class="token operator">=</span> subscription<span class="token punctuation">.</span>currency<span class="token punctuation">.</span>code<span class="token punctuation">,</span></span>
<span class="line">                billing_cycle <span class="token operator">=</span> subscription<span class="token punctuation">.</span>billingCycle<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">                next_payment_date <span class="token operator">=</span> subscription<span class="token punctuation">.</span>nextPaymentDate<span class="token punctuation">.</span><span class="token function">toEpochMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                is_active <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>subscription<span class="token punctuation">.</span>isActive<span class="token punctuation">)</span> <span class="token number">1L</span> <span class="token keyword">else</span> <span class="token number">0L</span><span class="token punctuation">,</span></span>
<span class="line">                created_at <span class="token operator">=</span> subscription<span class="token punctuation">.</span>createdAt<span class="token punctuation">.</span><span class="token function">toEpochMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                updated_at <span class="token operator">=</span> subscription<span class="token punctuation">.</span>updatedAt<span class="token punctuation">.</span><span class="token function">toEpochMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                notes <span class="token operator">=</span> subscription<span class="token punctuation">.</span>notes</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Exception<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Handle database errors appropriately</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token function">DatabaseException</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Failed to insert subscription: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">e<span class="token punctuation">.</span>message</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-data-models-with-business-logic" tabindex="-1"><a class="header-anchor" href="#_3-data-models-with-business-logic"><span>3. Data Models with Business Logic</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Subscription</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token keyword">val</span> id<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> cost<span class="token operator">:</span> Double<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> currency<span class="token operator">:</span> Currency<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> billingCycle<span class="token operator">:</span> BillingCycle<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> nextPaymentDate<span class="token operator">:</span> Instant<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> isActive<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> createdAt<span class="token operator">:</span> Instant<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> updatedAt<span class="token operator">:</span> Instant<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">val</span> notes<span class="token operator">:</span> String<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Business logic: Calculate monthly cost based on billing cycle</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">calculateMonthlyCost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Double <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> billingCycle<span class="token punctuation">.</span><span class="token function">calculateMonthlyCost</span><span class="token punctuation">(</span>cost<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">​</span>
<span class="line">    <span class="token comment">// Business logic: Convert to USD for unified calculations</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">calculateMonthlyCostInUsd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Double <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> monthlyCost <span class="token operator">=</span> <span class="token function">calculateMonthlyCost</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> currency<span class="token punctuation">.</span><span class="token function">convertToUsd</span><span class="token punctuation">(</span>monthlyCost<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">​</span>
<span class="line">    <span class="token comment">// Formatting for display</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">formatCost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> currency<span class="token punctuation">.</span><span class="token function">formatAmount</span><span class="token punctuation">(</span>cost<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">​</span>
<span class="line">    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Factory method for creating new subscriptions</span></span>
<span class="line">        <span class="token keyword">fun</span> <span class="token function">create</span><span class="token punctuation">(</span></span>
<span class="line">            name<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="line">            cost<span class="token operator">:</span> Double<span class="token punctuation">,</span></span>
<span class="line">            currency<span class="token operator">:</span> Currency<span class="token punctuation">,</span></span>
<span class="line">            billingCycle<span class="token operator">:</span> BillingCycle<span class="token punctuation">,</span></span>
<span class="line">            nextPaymentDate<span class="token operator">:</span> Instant<span class="token punctuation">,</span></span>
<span class="line">            notes<span class="token operator">:</span> String<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">            now<span class="token operator">:</span> Instant <span class="token operator">=</span> Clock<span class="token punctuation">.</span>System<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token operator">:</span> Subscription <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> id <span class="token operator">=</span> <span class="token function">uuid4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token function">Subscription</span><span class="token punctuation">(</span></span>
<span class="line">                id <span class="token operator">=</span> id<span class="token punctuation">,</span></span>
<span class="line">                name <span class="token operator">=</span> name<span class="token punctuation">,</span></span>
<span class="line">                cost <span class="token operator">=</span> cost<span class="token punctuation">,</span></span>
<span class="line">                currency <span class="token operator">=</span> currency<span class="token punctuation">,</span></span>
<span class="line">                billingCycle <span class="token operator">=</span> billingCycle<span class="token punctuation">,</span></span>
<span class="line">                nextPaymentDate <span class="token operator">=</span> nextPaymentDate<span class="token punctuation">,</span></span>
<span class="line">                createdAt <span class="token operator">=</span> now<span class="token punctuation">,</span></span>
<span class="line">                updatedAt <span class="token operator">=</span> now<span class="token punctuation">,</span></span>
<span class="line">                notes <span class="token operator">=</span> notes</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🎨-building-the-ui-with-compose-multiplatform" tabindex="-1"><a class="header-anchor" href="#🎨-building-the-ui-with-compose-multiplatform"><span>🎨 Building the UI with Compose Multiplatform</span></a></h2><h3 id="_1-material-design-3-theme" tabindex="-1"><a class="header-anchor" href="#_1-material-design-3-theme"><span>1. Material Design 3 Theme</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">KyklosTheme</span><span class="token punctuation">(</span></span>
<span class="line">    darkTheme<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token function">isSystemInDarkTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> colorScheme <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>darkTheme<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        DarkColorScheme</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        LightColorScheme<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span></span>
<span class="line">            primary <span class="token operator">=</span> KyklosColors<span class="token punctuation">.</span>KyklosPrimary<span class="token punctuation">,</span></span>
<span class="line">            onPrimary <span class="token operator">=</span> KyklosColors<span class="token punctuation">.</span>KyklosOnPrimary<span class="token punctuation">,</span></span>
<span class="line">            primaryContainer <span class="token operator">=</span> KyklosColors<span class="token punctuation">.</span>KyklosPrimaryContainer<span class="token punctuation">,</span></span>
<span class="line">            onPrimaryContainer <span class="token operator">=</span> KyklosColors<span class="token punctuation">.</span>KyklosOnPrimaryContainer<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">​</span>
<span class="line">    <span class="token comment">// Modern rounded shapes that work well on both platforms</span></span>
<span class="line">    <span class="token keyword">val</span> modernShapes <span class="token operator">=</span> <span class="token function">Shapes</span><span class="token punctuation">(</span></span>
<span class="line">        extraSmall <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        small <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        medium <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        large <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        extraLarge <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">​</span>
<span class="line">    <span class="token function">MaterialTheme</span><span class="token punctuation">(</span></span>
<span class="line">        colorScheme <span class="token operator">=</span> colorScheme<span class="token punctuation">,</span></span>
<span class="line">        shapes <span class="token operator">=</span> modernShapes<span class="token punctuation">,</span></span>
<span class="line">        typography <span class="token operator">=</span> KyklosTypography<span class="token punctuation">,</span></span>
<span class="line">        content <span class="token operator">=</span> content</span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-reusable-ui-components" tabindex="-1"><a class="header-anchor" href="#_2-reusable-ui-components"><span>2. Reusable UI Components</span></a></h3><h4 id="subscription-card-component" tabindex="-1"><a class="header-anchor" href="#subscription-card-component"><span>Subscription Card Component</span></a></h4><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@OptIn</span><span class="token punctuation">(</span>ExperimentalMaterial3Api<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">SubscriptionCard</span><span class="token punctuation">(</span></span>
<span class="line">    subscription<span class="token operator">:</span> Subscription<span class="token punctuation">,</span></span>
<span class="line">    onClick<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">        onClick <span class="token operator">=</span> onClick<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        elevation <span class="token operator">=</span> CardDefaults<span class="token punctuation">.</span><span class="token function">cardElevation</span><span class="token punctuation">(</span>defaultElevation <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        colors <span class="token operator">=</span> CardDefaults<span class="token punctuation">.</span><span class="token function">cardColors</span><span class="token punctuation">(</span></span>
<span class="line">            containerColor <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>surfaceVariant</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        \`    <span class="token comment">// Header row with name and cost</span></span>
<span class="line">            <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                horizontalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>SpaceBetween<span class="token punctuation">,</span></span>
<span class="line">                verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                    text <span class="token operator">=</span> subscription<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">                    style <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>typography<span class="token punctuation">.</span>titleMedium<span class="token punctuation">,</span></span>
<span class="line">                    fontWeight <span class="token operator">=</span> FontWeight<span class="token punctuation">.</span>SemiBold<span class="token punctuation">,</span></span>
<span class="line">                    maxLines <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                    overflow <span class="token operator">=</span> TextOverflow<span class="token punctuation">.</span>Ellipsis<span class="token punctuation">,</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">    ​</span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                    text <span class="token operator">=</span> subscription<span class="token punctuation">.</span><span class="token function">formatCost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    style <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>typography<span class="token punctuation">.</span>titleMedium<span class="token punctuation">,</span></span>
<span class="line">                    fontWeight <span class="token operator">=</span> FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">,</span></span>
<span class="line">                    color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>primary</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    ​</span>
<span class="line">            <span class="token function">Spacer</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    ​</span>
<span class="line">            <span class="token comment">// Footer row with next payment and billing cycle</span></span>
<span class="line">            <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                horizontalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>SpaceBetween<span class="token punctuation">,</span></span>
<span class="line">                verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                    text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Next payment: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">subscription<span class="token punctuation">.</span>nextPaymentDate<span class="token punctuation">.</span><span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    style <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>typography<span class="token punctuation">.</span>bodyMedium<span class="token punctuation">,</span></span>
<span class="line">                    color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>onSurfaceVariant</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">    ​</span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                    text <span class="token operator">=</span> subscription<span class="token punctuation">.</span>billingCycle<span class="token punctuation">.</span>displayName<span class="token punctuation">,</span></span>
<span class="line">                    style <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>typography<span class="token punctuation">.</span>labelMedium<span class="token punctuation">,</span></span>
<span class="line">                    color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>secondary</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span>\`</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-screen-level-composables" tabindex="-1"><a class="header-anchor" href="#_3-screen-level-composables"><span>3. Screen-Level Composables</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@OptIn</span><span class="token punctuation">(</span>ExperimentalMaterial3Api<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">SubscriptionListScreen</span><span class="token punctuation">(</span></span>
<span class="line">    subscriptions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Subscription<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    totalMonthlyCost<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;$0.00&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">    onAddSubscription<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    onSubscriptionClick<span class="token operator">:</span> <span class="token punctuation">(</span>Subscription<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Scaffold</span><span class="token punctuation">(</span></span>
<span class="line">        topBar <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">TopAppBar</span><span class="token punctuation">(</span></span>
<span class="line">                title <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Kyklos&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        style <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>typography<span class="token punctuation">.</span>headlineMedium<span class="token punctuation">,</span></span>
<span class="line">                        fontWeight <span class="token operator">=</span> FontWeight<span class="token punctuation">.</span>Bold</span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                colors <span class="token operator">=</span> TopAppBarDefaults<span class="token punctuation">.</span><span class="token function">topAppBarColors</span><span class="token punctuation">(</span></span>
<span class="line">                    containerColor <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>primaryContainer<span class="token punctuation">,</span></span>
<span class="line">                    titleContentColor <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>onPrimaryContainer</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        floatingActionButton <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ExtendedFloatingActionButton</span><span class="token punctuation">(</span></span>
<span class="line">                onClick <span class="token operator">=</span> onAddSubscription<span class="token punctuation">,</span></span>
<span class="line">                icon <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                        imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Add<span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                text <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Add Subscription&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                containerColor <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>primary<span class="token punctuation">,</span></span>
<span class="line">                contentColor <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>onPrimary</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span> paddingValues <span class="token operator">-&gt;</span></span>
<span class="line">        <span class="token function">LazyColumn</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>paddingValues<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            contentPadding <span class="token operator">=</span> <span class="token function">PaddingValues</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            verticalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span><span class="token function">spacedBy</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Monthly summary card</span></span>
<span class="line">            item <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">MonthlySummaryCard</span><span class="token punctuation">(</span></span>
<span class="line">                    totalMonthlyCost <span class="token operator">=</span> totalMonthlyCost<span class="token punctuation">,</span></span>
<span class="line">                    subscriptionCount <span class="token operator">=</span> subscriptions<span class="token punctuation">.</span>size</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    ​</span>
<span class="line">            <span class="token comment">// Subscription list</span></span>
<span class="line">            <span class="token function">items</span><span class="token punctuation">(</span>subscriptions<span class="token punctuation">)</span> <span class="token punctuation">{</span> subscription <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token function">SubscriptionCard</span><span class="token punctuation">(</span></span>
<span class="line">                    subscription <span class="token operator">=</span> subscription<span class="token punctuation">,</span></span>
<span class="line">                    onClick <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function">onSubscriptionClick</span><span class="token punctuation">(</span>subscription<span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    ​</span>
<span class="line">            <span class="token comment">// Empty state</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>subscriptions<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                item <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">EmptyStateComponent</span><span class="token punctuation">(</span></span>
<span class="line">                        message <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;No subscriptions yet&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        actionText <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Add your first subscription&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        onActionClick <span class="token operator">=</span> onAddSubscription</span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="⚠️-ios-compatibility-critical-gotchas" tabindex="-1"><a class="header-anchor" href="#⚠️-ios-compatibility-critical-gotchas"><span>⚠️ iOS Compatibility: Critical Gotchas</span></a></h2><p>When developing for iOS with Kotlin Multiplatform, there are several compatibility gotchas to watch out for:</p><div class="hint-container tip"><p class="hint-container-title">💡 Pro Tip</p><p>These gotchas cost me hours of debugging. Learning them upfront will save you significant development time.</p></div><h3 id="_1-string-formatting" tabindex="-1"><a class="header-anchor" href="#_1-string-formatting"><span>1. String Formatting</span></a></h3><h4 id="❌-don-t-use" tabindex="-1"><a class="header-anchor" href="#❌-don-t-use"><span>❌ Don&#39;t use:</span></a></h4><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;%.2f&quot;</span></span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>  <span class="token comment">// Not available on iOS/KMP</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="✅-use-instead" tabindex="-1"><a class="header-anchor" href="#✅-use-instead"><span>✅ Use instead:</span></a></h4><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// Option 1: String templates for simple cases</span></span>
<span class="line"><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">currency<span class="token punctuation">.</span>symbol</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">cost</span></span><span class="token string">&quot;</span></span></span>
<span class="line">​</span>
<span class="line"><span class="token comment">// Option 2: Expect/actual pattern for complex formatting</span></span>
<span class="line"><span class="token keyword">expect</span> <span class="token keyword">fun</span> Double<span class="token punctuation">.</span><span class="token function">formatCurrency</span><span class="token punctuation">(</span>symbol<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> String</span>
<span class="line">​</span>
<span class="line"><span class="token comment">// Android actual</span></span>
<span class="line"><span class="token keyword">actual</span> <span class="token keyword">fun</span> Double<span class="token punctuation">.</span><span class="token function">formatCurrency</span><span class="token punctuation">(</span>symbol<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token operator">=</span></span>
<span class="line">    <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">symbol</span></span><span class="token string">%.2f&quot;</span></span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span>
<span class="line">​</span>
<span class="line"><span class="token comment">// iOS actual (using NSString)</span></span>
<span class="line"><span class="token keyword">actual</span> <span class="token keyword">fun</span> Double<span class="token punctuation">.</span><span class="token function">formatCurrency</span><span class="token punctuation">(</span>symbol<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token operator">=</span></span>
<span class="line">    NSString<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>format <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">symbol</span></span><span class="token string">%.2f&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">​</span>
<span class="line"><span class="token comment">// Option 3: Manual precision handling (less preferred)</span></span>
<span class="line"><span class="token keyword">fun</span> Double<span class="token punctuation">.</span><span class="token function">toCurrencyString</span><span class="token punctuation">(</span>symbol<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> rounded <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span> \\<span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100.0</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">symbol</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">rounded</span></span><span class="token string">&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-uuid-generation" tabindex="-1"><a class="header-anchor" href="#_2-uuid-generation"><span>2. UUID Generation</span></a></h3><h4 id="❌-don-t-use-1" tabindex="-1"><a class="header-anchor" href="#❌-don-t-use-1"><span>❌ Don&#39;t use:</span></a></h4><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// Java UUID not available on iOS</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="✅-use-instead-1" tabindex="-1"><a class="header-anchor" href="#✅-use-instead-1"><span>✅ Use instead:</span></a></h4><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>benasher44<span class="token punctuation">.</span>uuid<span class="token punctuation">.</span>uuid4</span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> id <span class="token operator">=</span> <span class="token function">uuid4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// Cross-platform UUID</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🚀-building-and-running" tabindex="-1"><a class="header-anchor" href="#🚀-building-and-running"><span>🚀 Building and Running</span></a></h2><h3 id="build-commands" tabindex="-1"><a class="header-anchor" href="#build-commands"><span>Build Commands</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Android</span></span>
<span class="line">./gradlew compileDebugKotlinAndroid    <span class="token comment"># Compile Android code</span></span>
<span class="line">./gradlew installDebug                 <span class="token comment"># Install on device/emulator</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># iOS (compilation check)</span></span>
<span class="line">./gradlew compileKotlinIosX64         <span class="token comment"># Compile iOS code</span></span>
<span class="line">./gradlew linkDebugFrameworkIosX64    <span class="token comment"># Link iOS framework</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># All platforms</span></span>
<span class="line">./gradlew build                       <span class="token comment"># Build all targets</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># SQLDelight</span></span>
<span class="line">./gradlew generateCommonMainKyklosDatabaseInterface</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Clean build</span></span>
<span class="line">./gradlew clean build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📱-running-on-ios-simulator" tabindex="-1"><a class="header-anchor" href="#📱-running-on-ios-simulator"><span>📱 Running on iOS Simulator</span></a></h2><p>To run your Kotlin Multiplatform app on the iOS Simulator:</p><h3 id="_1-generate-ios-framework" tabindex="-1"><a class="header-anchor" href="#_1-generate-ios-framework"><span>1. Generate iOS Framework</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Build the iOS framework</span></span>
<span class="line">./gradlew linkDebugFrameworkIosX64</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-open-ios-project-in-xcode" tabindex="-1"><a class="header-anchor" href="#_2-open-ios-project-in-xcode"><span>2. Open iOS Project in Xcode</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Navigate to iOS app directory</span></span>
<span class="line"><span class="token builtin class-name">cd</span> iosApp</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Open in Xcode</span></span>
<span class="line"><span class="token function">open</span> iosApp.xcodeproj</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-configure-and-run" tabindex="-1"><a class="header-anchor" href="#_3-configure-and-run"><span>3. Configure and Run</span></a></h3><ul><li><strong>Select Target Device:</strong><ul><li>In Xcode, click on the device selection dropdown</li><li>Choose your preferred iOS Simulator (e.g., iPhone 15, iPad Pro)</li></ul></li><li><strong>Build and Run:</strong><ul><li>Press <kbd>Cmd</kbd>+<kbd>R</kbd> or click the Run button</li><li>Xcode will build the project and launch the iOS Simulator</li></ul></li></ul><h3 id="_4-development-workflow" tabindex="-1"><a class="header-anchor" href="#_4-development-workflow"><span>4. Development Workflow</span></a></h3><p>For efficient development:</p><ul><li>Make Kotlin changes in your shared code</li><li>Rebuild framework: <code>./gradlew linkDebugFrameworkIosX64</code></li><li>Run from Xcode to test changes on iOS Simulator</li><li>Use Compose Hot Reload when available for UI changes</li></ul><h3 id="_5-troubleshooting-ios-issues" tabindex="-1"><a class="header-anchor" href="#_5-troubleshooting-ios-issues"><span>5. Troubleshooting iOS Issues</span></a></h3><h4 id="common-issues" tabindex="-1"><a class="header-anchor" href="#common-issues"><span>Common Issues:</span></a></h4>`,46)),e(b,{data:[{id:"1. Framework Not Found:"},{id:"2. Simulator Not Starting:"},{id:"3. Build Errors in Xcode:"}],active:0},{title0:t(({value:o,isActive:c})=>n[61]||(n[61]=[a("1. Framework Not Found:")])),title1:t(({value:o,isActive:c})=>n[62]||(n[62]=[a("2. Simulator Not Starting:")])),title2:t(({value:o,isActive:c})=>n[63]||(n[63]=[a("3. Build Errors in Xcode:")])),tab0:t(({value:o,isActive:c})=>n[64]||(n[64]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},[s("span",{class:"token comment"},"# Clean and rebuild framework")]),a(`
`),s("span",{class:"line"},"./gradlew clean"),a(`
`),s("span",{class:"line"},"./gradlew linkDebugFrameworkIosX64"),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:t(({value:o,isActive:c})=>n[65]||(n[65]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},[s("span",{class:"token comment"},"# Reset simulator")]),a(`
`),s("span",{class:"line"},"xcrun simctl erase all"),a(`
`),s("span",{class:"line"},[a("xcrun simctl boot "),s("span",{class:"token string"},'"iPhone 15"')]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:t(({value:o,isActive:c})=>n[66]||(n[66]=[s("ul",null,[s("li",null,"Ensure your iOS deployment target matches your KMP project settings"),s("li",null,"Check that the framework is properly linked in Xcode project settings"),s("li",null,"Verify the framework search paths in Build Settings")],-1)])),_:1}),n[82]||(n[82]=l('<hr><h2 id="🎯-advanced-features-and-next-steps" tabindex="-1"><a class="header-anchor" href="#🎯-advanced-features-and-next-steps"><span>🎯 Advanced Features and Next Steps</span></a></h2><h3 id="current-implementation-status" tabindex="-1"><a class="header-anchor" href="#current-implementation-status"><span>Current Implementation Status</span></a></h3><p>Based on the current Kyklos codebase, we have successfully implemented:</p><div class="hint-container info"><p class="hint-container-title">✅ Core Features:</p><ul><li>Cross-platform project setup with KMP</li><li>SQLDelight database configuration</li><li>Material Design 3 theming</li><li>Clean Architecture foundation</li><li>Basic UI components and screens</li></ul></div><h3 id="immediate-next-steps" tabindex="-1"><a class="header-anchor" href="#immediate-next-steps"><span>Immediate Next Steps</span></a></h3><ul><li><strong>Complete CRUD Operations</strong> - Full subscription management</li><li><strong>State Management</strong> - Add StateFlow and ViewModel integration</li><li><strong>Dependency Injection</strong> - Implement Koin for DI</li><li><strong>Navigation</strong> - Add Compose Navigation with type safety</li><li><strong>Error Handling</strong> - Comprehensive error states and recovery</li></ul><h3 id="future-roadmap" tabindex="-1"><a class="header-anchor" href="#future-roadmap"><span>Future Roadmap</span></a></h3><ul><li><strong>Networking</strong> - Add Ktor for API calls and sync</li><li><strong>Testing Suite</strong> - Comprehensive test coverage (planned for Part 5 of this series)</li><li><strong>CI/CD</strong> - GitHub Actions for automated builds and testing</li><li><strong>Platform Expansion</strong> - Web and Desktop support with Compose Multiplatform</li></ul><div class="hint-container important"><p class="hint-container-title">📚 Key Takeaways</p><p>Building a Kotlin Multiplatform app teaches several valuable lessons:</p><ul><li><strong>Architecture Matters</strong> - Clean Architecture provides excellent separation of concerns across platforms</li><li><strong>SQLDelight is Powerful</strong> - Type-safe SQL with excellent cross-platform support makes data management a breeze</li><li><strong>iOS Compatibility</strong> - Be mindful of platform-specific APIs and always test on both platforms early and often</li><li><strong>Compose Multiplatform</strong> - With iOS stable support, truly shared UI is now production-ready</li><li><strong>expect/actual Pattern</strong> - Elegant solution for platform-specific implementations when needed</li></ul></div><hr><h2 id="🎯-conclusion" tabindex="-1"><a class="header-anchor" href="#🎯-conclusion"><span>🎯 Conclusion</span></a></h2><p>Kotlin Multiplatform Mobile has matured into a production-ready solution for cross-platform development. With Compose Multiplatform for iOS now stable, developers can share both business logic and UI code while maintaining native performance and platform-specific optimizations.</p><p>The <strong>Kyklos</strong> subscription management app demonstrates how to build a real-world application using modern KMP practices. By following Clean Architecture principles and leveraging powerful libraries like SQLDelight, you can create maintainable, testable, and scalable cross-platform applications.</p>',14)),s("p",null,[n[70]||(n[70]=s("strong",null,"Ready to start your KMP journey?",-1)),n[71]||(n[71]=a(" The complete source code for this tutorial is available on ")),s("a",P,[n[67]||(n[67]=a("GitHub (")),e(i,{icon:"iconfont icon-github"}),n[68]||(n[68]=s("code",null,"tomriddle25/kyklos",-1)),n[69]||(n[69]=a(")"))]),n[72]||(n[72]=a(", showcasing the foundation we've built together. While we're still implementing the full feature set, the architecture and setup demonstrate production-ready KMP practices you can use as a reference for your own projects."))]),n[83]||(n[83]=l('<div class="hint-container info"><p class="hint-container-title">Coming Next in This Series:</p><p>📝 <strong>Part 2:</strong> &quot;KMP Reality Check: 5 Gotchas That Almost Killed My Project&quot;<br> 📝 <strong>Part 3:</strong> &quot;Material 3 on iOS: What Works, What Doesn&#39;t, What&#39;s Coming&quot;<br> 📝 <strong>Part 4:</strong> &quot;State Management in KMP: Beyond ViewModel&quot;<br> 📝 <strong>Part 5:</strong> &quot;Adding Comprehensive Testing to Your KMP Project&quot;</p><p><strong>Follow me for updates on the Kyklos development journey!</strong></p></div><p>Have questions about Kotlin Multiplatform development? Found this tutorial helpful? Share your thoughts and experiences in the comments below!</p>',2)),y(" TODO: add ARTICLE CARD "),e(u,d(k({title:"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)",desc:"A comprehensive guide to building your first Kotlin Multiplatform app using Compose Multiplatform, covering setup, development, and deployment",link:"https://chanhi2000.github.io/bookshelf/kt.academy/kmp-to-compose-guide.html",logo:"https://kt.academy/logo.png",background:"rgba(243,139,49,0.2)"})),null,16)])}const j=g(S,[["render",K]]),G=JSON.parse('{"path":"/kt.academy/kmp-to-compose-guide.html","title":"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)","lang":"en-US","frontmatter":{"lang":"en-US","title":"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)","description":"Article(s) > Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)","icon":"iconfont icon-kotlin","category":["Java","Kotlin","Android","Jetpack Compose","Article(s)"],"tag":["blog","kt.academy","java","kotlin"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)\\",\\"image\\":[\\"https://marcinmoskala.com/kt-academy-articles/promotion/building_first_kmm_app.png\\"],\\"datePublished\\":\\"2025-07-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Faisal Ahmed\\",\\"url\\":\\"https://kt.academy/user/faisalahmed\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/kt.academy/kmp-to-compose-guide.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)"}],["meta",{"property":"og:description","content":"Article(s) > Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://marcinmoskala.com/kt-academy-articles/promotion/building_first_kmm_app.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://marcinmoskala.com/kt-academy-articles/promotion/building_first_kmm_app.png"}],["meta",{"name":"twitter:image:alt","content":"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)"}],["meta",{"property":"article:author","content":"Faisal Ahmed"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"kt.academy"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-07-28T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)"},{"property":"og:description","content":"Building Your First Kotlin Multiplatform App: From Setup to iOS App Store with Compose Multiplatform (2025 Guide)"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/kt.academy/kmp-to-compose-guide.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2025-07-28T00:00:00.000Z","isOriginal":false,"author":[{"name":"Faisal Ahmed","url":"https://kt.academy/user/faisalahmed"}],"cover":"https://marcinmoskala.com/kt-academy-articles/promotion/building_first_kmm_app.png"},"git":{},"readingTime":{"minutes":8.81,"words":2643},"filePathRelative":"kt.academy/kmp-to-compose-guide.md","copyright":{"author":"Faisal Ahmed"}}');export{j as comp,G as data};
