import{_ as w}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as e,f as o,b as t,a as v,t as b,n as c,g as u,w as r,e as s,r as l,o as h}from"./app-BVguHYKu.js";const f={},y={id:"frontmatter-title-관련",tabindex:"-1"},W={class:"header-anchor",href:"#frontmatter-title-관련"},D={class:"table-of-contents"},S={href:"https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.docker.com/docker-for-windows/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://download.docker.com/win/beta/InstallDocker.msi",target:"_blank",rel:"noopener noreferrer"},M={href:"https://stefanscherer.github.io/run-linux-and-windows-containers-on-windows-10/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://microsoft.com/en-us/evalcenter/evaluate-windows-server-2016",target:"_blank",rel:"noopener noreferrer"},P={href:"https://msdn.microsoft.com/en-us/virtualization/windowscontainers/containers_welcome",target:"_blank",rel:"noopener noreferrer"},R={href:"https://cloud.docker.com/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://docs.docker.com/engine/reference/commandline/build/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://cloud.docker.com/app/friism/repository/list",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/docker-library/python/blob/855b85c8309e925814dfa97d61310080dcd08db6/3.6/windows/windowsservercore/Dockerfile",target:"_blank",rel:"noopener noreferrer"},I={href:"https://twitter.com/docker",target:"_blank",rel:"noopener noreferrer"};function N(m,n){const d=l("VPCard"),i=l("router-link"),k=l("SiteInfo"),p=l("RouteLink"),a=l("VPIcon");return h(),g("div",null,[e("h1",y,[e("a",W,[e("span",null,b(m.$frontmatter.title)+" 관련",1)])]),o(d,c(u({title:"Docker > Article(s)",desc:"Article(s)",link:"/devops/docker/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",D,[e("ul",null,[e("li",null,[o(i,{to:"#windows-10-with-anniversary-update"},{default:r(()=>n[0]||(n[0]=[s("Windows 10 with Anniversary Update")])),_:1,__:[0]})]),e("li",null,[o(i,{to:"#windows-server-2016"},{default:r(()=>n[1]||(n[1]=[s("Windows Server 2016")])),_:1,__:[1]})]),e("li",null,[o(i,{to:"#running-windows-containers"},{default:r(()=>n[2]||(n[2]=[s("Running Windows containers")])),_:1,__:[2]})]),e("li",null,[o(i,{to:"#building-and-pushing-windows-container-images"},{default:r(()=>n[3]||(n[3]=[s("Building and pushing Windows container images")])),_:1,__:[3]})]),e("li",null,[o(i,{to:"#using-docker-compose-on-windows"},{default:r(()=>n[4]||(n[4]=[s("Using docker-compose on Windows")])),_:1,__:[4]})]),e("li",null,[o(i,{to:"#summary"},{default:r(()=>n[5]||(n[5]=[s("Summary")])),_:1,__:[5]})])])]),n[51]||(n[51]=e("hr",null,null,-1)),o(k,{name:"Build and Run Your First Docker Windows Server Container",desc:"Learn how to build and run a Docker container image on your Windows Server. Setup and run Docker Windows Containers on Windows 10 or using a Windows VM.",url:"https://docker.com/blog/build-your-first-docker-windows-server-container",logo:"https://docker.com/app/uploads/2024/02/cropped-docker-logo-favicon-192x192.png",preview:"https://docker.com/app/uploads/docker-for-windows-switch.gif"}),e("p",null,[n[8]||(n[8]=s("Today, Microsoft announced the general availability of Windows Server 2016, and with it, Docker engine running containers natively on Windows. This blog post describes how to get setup to run Docker Windows Containers on Windows 10 or using a Windows Server 2016 VM. Check out the companion ")),o(p,{to:"/docker.com/dockerforws2016.html"},{default:r(()=>n[6]||(n[6]=[e("strong",null,"blog posts on the technical improvements",-1)])),_:1,__:[6]}),n[9]||(n[9]=s(" that have made Docker containers on Windows possible and the ")),o(p,{to:"/docker.com/docker-microsoft-partnership.html"},{default:r(()=>n[7]||(n[7]=[e("strong",null,"post announcing the Docker Inc. and Microsoft partnership",-1)])),_:1,__:[7]}),n[10]||(n[10]=s("."))]),n[52]||(n[52]=e("p",null,"Before getting started, It’s important to understand that Windows Containers run Windows executables compiled for the Windows Server kernel and userland (either windowsservercore or nanoserver). To build and run Windows containers, a Windows system with container support is required.",-1)),n[53]||(n[53]=e("hr",null,null,-1)),n[54]||(n[54]=e("h2",{id:"windows-10-with-anniversary-update",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-10-with-anniversary-update"},[e("span",null,"Windows 10 with Anniversary Update")])],-1)),e("p",null,[n[12]||(n[12]=s("For developers, Windows 10 is a great place to run Docker Windows containers and containerization support was added to the the Windows 10 kernel with the ")),e("a",S,[o(a,{icon:"fa-brands fa-windows"}),n[11]||(n[11]=s("Anniversary Update"))]),n[13]||(n[13]=s(" (note that container images can only be based on Windows Server Core and Nanoserver, not Windows 10). All that’s missing is the Windows-native Docker Engine and some image base layers."))]),e("p",null,[n[16]||(n[16]=s("The simplest way to get a Windows Docker Engine is by installing the ")),e("a",x,[o(a,{icon:"fa-brands fa-docker"}),n[14]||(n[14]=s("Docker for Windows"))]),n[17]||(n[17]=s(" public beta (")),e("a",C,[o(a,{icon:"fa-brands fa-docker"}),n[15]||(n[15]=s("direct download link"))]),n[18]||(n[18]=s("). Docker for Windows used to only setup a Linux-based Docker development environment (slightly confusing, we know), but the public beta version now sets up both Linux and Windows Docker development environments, and we’re working on improving Windows container support and Linux/Windows container interoperability."))]),e("p",null,[n[20]||(n[20]=s("With the public beta installed, the Docker for Windows tray icon has an option to switch between Linux and Windows container development. For details on this new feature, check out ")),e("a",M,[o(a,{icon:"fas fa-globe"}),n[19]||(n[19]=s("Stefan Scherers blog post"))]),n[21]||(n[21]=s("."))]),n[55]||(n[55]=e("p",null,"Switch to Windows containers and skip the next section.",-1)),n[56]||(n[56]=e("figure",null,[e("img",{src:"https://docker.com/app/uploads/docker-for-windows-switch.gif",alt:"switching to windows containers",tabindex:"0",loading:"lazy"}),e("figcaption",null,"switching to windows containers")],-1)),n[57]||(n[57]=e("hr",null,null,-1)),n[58]||(n[58]=e("h2",{id:"windows-server-2016",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-server-2016"},[e("span",null,"Windows Server 2016")])],-1)),n[59]||(n[59]=e("p",null,"Windows Server 2016 is the where Docker Windows containers should be deployed for production. For developers planning to do lots of Docker Windows container development, it may also be worth setting up a Windows Server 2016 dev system (in a VM, for example), at least until Windows 10 and Docker for Windows support for Windows containers matures.",-1)),e("p",null,[n[23]||(n[23]=s("For Microsoft Ignite 2016 conference attendees, USB flash drives with Windows Server 2016 preloaded are available at the expo. Not at ignite? ")),e("a",F,[o(a,{icon:"fa-brands fa-microsoft"}),n[22]||(n[22]=s("Download a free evaluation version"))]),n[24]||(n[24]=s(" and install it on bare metal or in a VM running on Hyper-V, VirtualBox or similar. Running a VM with Windows Server 2016 is also a great way to do Docker Windows container development on macOS and older Windows versions."))]),n[60]||(n[60]=t(`<p>Once Windows Server 2016 is running, log in, run <em>Windows Update to ensure you have all the latest updates</em> and install the Windows-native Docker Engine directly (that is, not using “Docker for Windows”). Run the following in an Administrative PowerShell prompt:</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line"><span class="token function">Install-PackageProvider</span> <span class="token operator">-</span>Name NuGet <span class="token operator">-</span>MinimumVersion 2<span class="token punctuation">.</span>8<span class="token punctuation">.</span>5<span class="token punctuation">.</span>201 <span class="token operator">-</span>Force</span>
<span class="line"><span class="token function">Install-Module</span> <span class="token operator">-</span>Name DockerMsftProvider <span class="token operator">-</span>Force</span>
<span class="line"><span class="token function">Install-Package</span> <span class="token operator">-</span>Name docker <span class="token operator">-</span>ProviderName DockerMsftProvider <span class="token operator">-</span>Force</span>
<span class="line"><span class="token function">Restart-Computer</span> <span class="token operator">-</span>Force</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Docker Engine is now running as a Windows service, listening on the default Docker named pipe. For development VMs running (for example) in a Hyper-V VM on Windows 10, it might be advantageous to make the Docker Engine running in the Windows Server 2016 VM available to the Windows 10 host:</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line"><span class="token comment"># Open firewall port 2375</span></span>
<span class="line">netsh advfirewall firewall add rule name=<span class="token string">&quot;docker engine&quot;</span> <span class="token function">dir</span>=in action=allow protocol=TCP localport=2375</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Configure Docker daemon to listen on both pipe and TCP (replaces docker --register-service invocation above)</span></span>
<span class="line"><span class="token function">Stop-Service</span> docker</span>
<span class="line">dockerd <span class="token operator">--</span><span class="token function">unregister-service</span></span>
<span class="line">dockerd <span class="token operator">-</span>H npipe:<span class="token operator">/</span><span class="token operator">/</span> <span class="token operator">-</span>H 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:2375 <span class="token operator">--</span><span class="token function">register-service</span></span>
<span class="line"><span class="token function">Start-Service</span> docker</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The Windows Server 2016 Docker engine can now be used from the VM host by setting <code>DOCKER_HOST</code>:</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line"><span class="token variable">$env</span>:DOCKER_HOST = <span class="token string">&quot;&lt;ip-address-of-vm&gt;:2375&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,6)),e("p",null,[n[26]||(n[26]=s("See the ")),e("a",P,[o(a,{icon:"fa-brands fa-microsoft"}),n[25]||(n[25]=s("Microsoft documentation for more comprehensive instructions"))]),n[27]||(n[27]=s("."))]),n[61]||(n[61]=t(`<hr><h2 id="running-windows-containers" tabindex="-1"><a class="header-anchor" href="#running-windows-containers"><span>Running Windows containers</span></a></h2><p>First, make sure the Docker installation is working:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> version</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Client:</span></span>
<span class="line"><span class="token comment"># Version:      1.12.1</span></span>
<span class="line"><span class="token comment"># API version:  1.24</span></span>
<span class="line"><span class="token comment"># Go version:   go1.6.3</span></span>
<span class="line"><span class="token comment"># Git commit:   23cf638</span></span>
<span class="line"><span class="token comment"># Built:        Thu Aug 18 17:32:24 2016</span></span>
<span class="line"><span class="token comment"># OS/Arch:      windows/amd64</span></span>
<span class="line"><span class="token comment"># Experimental: true</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Server:</span></span>
<span class="line"><span class="token comment"># Version:      1.12.2-cs2-ws-beta</span></span>
<span class="line"><span class="token comment"># API version:  1.25</span></span>
<span class="line"><span class="token comment"># Go version:   go1.7.1</span></span>
<span class="line"><span class="token comment"># Git commit:   62d9ff9</span></span>
<span class="line"><span class="token comment"># Built:        Fri Sep 23 20:50:29 2016</span></span>
<span class="line"><span class="token comment"># OS/Arch:      windows/amd64</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, pull a base image that’s compatible with the evaluation build, re-tag it and to a test-run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> pull microsoft/windowsservercore</span>
<span class="line"><span class="token function">docker</span> run microsoft/windowsservercore <span class="token function">hostname</span></span>
<span class="line">69c7de26ea48</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="building-and-pushing-windows-container-images" tabindex="-1"><a class="header-anchor" href="#building-and-pushing-windows-container-images"><span>Building and pushing Windows container images</span></a></h2>`,8)),e("p",null,[n[29]||(n[29]=s("Pushing images to Docker Cloud requires a ")),e("a",R,[o(a,{icon:"fa-brands fa-docker"}),n[28]||(n[28]=s("free Docker ID"))]),n[30]||(n[30]=s(". Storing images on Docker Cloud is a great way to save build artifacts for later user, to share base images with co-workers or to create build-pipelines that move apps from development to production with Docker."))]),e("p",null,[n[33]||(n[33]=s("Docker images are typically built with ")),e("a",V,[o(a,{icon:"fa-brands fa-docker"}),n[31]||(n[31]=s("docker build"))]),n[34]||(n[34]=s(" from a ")),e("a",A,[o(a,{icon:"fa-brands fa-docker"}),n[32]||(n[32]=s("Dockerfile"))]),n[35]||(n[35]=s(" recipe, but for this example, we’re going to just create an image on the fly in PowerShell."))]),n[62]||(n[62]=t(`<div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line"><span class="token string">&quot;FROM microsoft/windowsservercore \`n CMD echo Hello World!&quot;</span> <span class="token punctuation">|</span> docker build <span class="token operator">-</span>t &lt;docker-id&gt;<span class="token operator">/</span>windows-<span class="token function">test-image</span> <span class="token operator">-</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Test the image:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token operator">&lt;</span>docker-id<span class="token operator">&gt;</span>/windows-test-image</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># Hello World!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Login with <code>docker login</code> and then push the image:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> push <span class="token operator">&lt;</span>docker-id<span class="token operator">&gt;</span>/windows-test-image</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,5)),e("p",null,[n[37]||(n[37]=s("Images stored on Docker Cloud available in the ")),e("a",T,[o(a,{icon:"fa-brands fa-docker"}),n[36]||(n[36]=s("web interface"))]),n[38]||(n[38]=s(" and public images can be pulled by other Docker users."))]),n[63]||(n[63]=t(`<hr><h2 id="using-docker-compose-on-windows" tabindex="-1"><a class="header-anchor" href="#using-docker-compose-on-windows"><span>Using docker-compose on Windows</span></a></h2><p>Docker Compose is a great way develop complex multi-container consisting of databases, queues and web frontends. Compose support for Windows is still a little patchy and only works on Windows Server 2016 at the time of writing (i.e. not on Windows 10).</p><p>To develop with Docker Compose on a Windows Server 2016 system, install compose too (this is not required on Windows 10 with Docker for Windows installed):</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line"><span class="token function">Invoke-WebRequest</span> https:<span class="token operator">/</span><span class="token operator">/</span>dl<span class="token punctuation">.</span>bintray<span class="token punctuation">.</span>com/docker-compose/master/docker-compose-Windows-x86_64<span class="token punctuation">.</span>exe <span class="token operator">-</span>UseBasicParsing <span class="token operator">-</span>OutFile <span class="token variable">$env</span>:ProgramFiles\\docker\\docker-compose<span class="token punctuation">.</span>exe</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,5)),e("p",null,[n[39]||(n[39]=s("To try out Compose on Windows, clone a variant of the ASP.NET Core MVC MusicStore app, backed by a SQL Server Express 2016 database. A correctly tagged ")),o(a,{icon:"fa-brands fa-docker"}),n[40]||(n[40]=e("code",null,"microsoft/windowsservercore",-1)),n[41]||(n[41]=s(" image is required before starting."))]),n[64]||(n[64]=t(`<div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line">git clone https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com/friism/Musicstore</span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">cd Musicstore</span>
<span class="line">docker-compose <span class="token operator">-</span>f <span class="token punctuation">.</span>\\docker-compose<span class="token punctuation">.</span>windows<span class="token punctuation">.</span>yml build</span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">docker-compose <span class="token operator">-</span>f <span class="token punctuation">.</span>\\docker-compose<span class="token punctuation">.</span>windows<span class="token punctuation">.</span>yml up</span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To access the running app from the host running the containers (for example when running on Windows 10 or if opening browser on Windows Server 2016 system running Docker engine) use the container IP and port 5000. <code>localhost</code> will not work:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> inspect <span class="token parameter variable">-f</span> <span class="token string">&quot;{{ .NetworkSettings.Networks.nat.IPAddress }}&quot;</span> musicstore_web_1</span>
<span class="line"><span class="token number">172.21</span>.124.54</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If using Windows Server 2016 and accessing from outside the VM or host, simply use the VM or host IP and port 5000. ---</p><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2>`,5)),e("p",null,[n[46]||(n[46]=s("This post described how to get setup to build and run native Docker Windows containers on both Windows 10 and using the recently published Windows Server 2016 evaluation release. To see more example Windows Dockerfiles, check out the Golang, MongoDB and ")),e("a",B,[n[42]||(n[42]=s("Python (")),o(a,{icon:"iconfont icon-github"}),n[43]||(n[43]=e("code",null,"docker-library/python",-1)),n[44]||(n[44]=s(")"))]),n[47]||(n[47]=s(" Docker Library images.")),n[48]||(n[48]=e("br",null,null,-1)),n[49]||(n[49]=s(" Please share any Windows Dockerfiles or Docker Compose examples your build with ")),e("a",I,[o(a,{icon:"fa-brands fa-x-twitter"}),n[45]||(n[45]=e("code",null,"@docker",-1))]),n[50]||(n[50]=s(" on Twitter using the tag #windows. And don’t hesitate to reach on the Docker Forums if you have questions."))]),v(" TODO: add ARTICLE CARD "),o(d,c(u({title:"Build and Run Your First Docker Windows Server Container",desc:"Learn how to build and run a Docker container image on your Windows Server. Setup and run Docker Windows Containers on Windows 10 or using a Windows VM.",link:"https://chanhi2000.github.io/bookshelf/docker.com/build-your-first-docker-windows-server-container.html",logo:"https://docker.com/app/uploads/2024/02/cropped-docker-logo-favicon-192x192.png",background:"rgba(29,99,237,0.2)"})),null,16)])}const q=w(f,[["render",N]]),j=JSON.parse('{"path":"/docker.com/build-your-first-docker-windows-server-container.html","title":"Build and Run Your First Docker Windows Server Container","lang":"en-US","frontmatter":{"lang":"en-US","title":"Build and Run Your First Docker Windows Server Container","description":"Article(s) > Build and Run Your First Docker Windows Server Container","icon":"fa-brands fa-docker","category":["DevOps","Docker","Article(s)"],"tag":["blog","docker.com","devops","docker"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Build and Run Your First Docker Windows Server Container\\",\\"image\\":[\\"https://docker.com/app/uploads/docker-for-windows-switch.gif\\"],\\"datePublished\\":\\"2016-09-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Michael Friis\\",\\"url\\":\\"https://docker.com/author/friism/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/docker.com/build-your-first-docker-windows-server-container.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Build and Run Your First Docker Windows Server Container"}],["meta",{"property":"og:description","content":"Article(s) > Build and Run Your First Docker Windows Server Container"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docker.com/app/uploads/docker-for-windows-switch.gif"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://docker.com/app/uploads/docker-for-windows-switch.gif"}],["meta",{"name":"twitter:image:alt","content":"Build and Run Your First Docker Windows Server Container"}],["meta",{"property":"article:author","content":"Michael Friis"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"docker.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2016-09-27T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Build and Run Your First Docker Windows Server Container"},{"property":"og:description","content":"Build and Run Your First Docker Windows Server Container"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/docker.com/build-your-first-docker-windows-server-container.html"}]],"prev":"/devops/docker/articles/README.md","date":"2016-09-27T00:00:00.000Z","isOriginal":false,"author":[{"name":"Michael Friis","url":"https://docker.com/author/friism/"}],"cover":"https://docker.com/app/uploads/docker-for-windows-switch.gif"},"git":{},"readingTime":{"minutes":5.23,"words":1570},"filePathRelative":"docker.com/build-your-first-docker-windows-server-container.md","copyright":{"author":"Michael Friis"}}');export{q as comp,j as data};
