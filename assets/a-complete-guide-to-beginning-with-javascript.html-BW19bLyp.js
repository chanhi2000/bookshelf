import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as a,f as e,b as r,t as v,n as u,g as c,w as i,e as s,a as k,r as l,o as b}from"./app-BVguHYKu.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},S={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"},J={class:"hint-container info"},j={href:"https://developer.mozilla.org/en-US/docs/Glossary/computer_programming",target:"_blank",rel:"noopener noreferrer"},x={href:"https://amazon.com/gp/product/1893115232?ie=UTF8&SubscriptionId=1MGPYB6YW3HWK55XCGG2&linkCode=ll1&tag=frontendma0da-20&linkId=0dbce68cc369c480aca733198727ec06&language=en_US&ref_=as_li_ss_tl",target:"_blank",rel:"noopener noreferrer"},A={href:"https://thecrashcourse.com/topic/computerscience/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://internetfundamentals.com/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://frontendmasters.com/bootcamp/introduction-html/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://frontendmasters.com/bootcamp/introduction-css/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://en.wikipedia.org/wiki/Command-line_interface",target:"_blank",rel:"noopener noreferrer"},M={href:"https://thecrashcourse.com/courses/keyboards-command-line-interfaces-crash-course-computer-science-22/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://en.wikipedia.org/wiki/Graphical_user_interface",target:"_blank",rel:"noopener noreferrer"},N={href:"https://thecrashcourse.com/courses/graphical-user-interfaces-crash-course-computer-science-26/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://react.dev/",target:"_blank",rel:"noopener noreferrer"},P={href:"http://expressjs.com/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://mongodb.com/",target:"_blank",rel:"noopener noreferrer"},U={href:"https://en.wikipedia.org/wiki/Scripting_language",target:"_blank",rel:"noopener noreferrer"},O={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/JavaScript_technologies_overview#introduction",target:"_blank",rel:"noopener noreferrer"},L={href:"https://developer.mozilla.org/en-US/docs/Web/API/Window",target:"_blank",rel:"noopener noreferrer"},D={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"},B={href:"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model",target:"_blank",rel:"noopener noreferrer"},R={href:"https://nodejs.org/en",target:"_blank",rel:"noopener noreferrer"},G={href:"https://en.wikipedia.org/wiki/JavaScript_engine",target:"_blank",rel:"noopener noreferrer"},H={href:"https://en.wikipedia.org/wiki/JavaScript_engine",target:"_blank",rel:"noopener noreferrer"},V={href:"https://exploringjs.com/impatient-js/ch_history.html#timeline-of-ecmascript-versions",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/tc39/proposals/blob/HEAD/finished-proposals.md",target:"_blank",rel:"noopener noreferrer"},F={href:"https://exploringjs.com/impatient-js/ch_history.html#timeline-of-ecmascript-versions",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://v8.dev/docs/feature-launch-process",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://kangax.github.io/compat-table/es2016plus/",target:"_blank",rel:"noopener noreferrer"},K={href:"https://262.ecma-international.org/",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://timothygu.me/es-howto/",target:"_blank",rel:"noopener noreferrer"},X={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/JavaScript_technologies_overview#javascript_the_core_language_ecmascript",target:"_blank",rel:"noopener noreferrer"},_={href:"https://en.wikipedia.org/wiki/Strong_and_weak_typing",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://en.wikipedia.org/wiki/Strong_and_weak_typing",target:"_blank",rel:"noopener noreferrer"},an={href:"https://typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"},en={href:"https://typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://en.wikipedia.org/wiki/Modular_programming",target:"_blank",rel:"noopener noreferrer"},on={href:"https://en.wikipedia.org/wiki/CommonJS",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://en.wikipedia.org/wiki/CommonJS",target:"_blank",rel:"noopener noreferrer"},un={href:"https://github.com/umdjs/umd",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://npmjs.com/",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://json.org/json-en.html",target:"_blank",rel:"noopener noreferrer"},gn={href:"http://json-schema.org/",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://codesandbox.io/s/condescending-chatterjee-l73scj?file=/index.html",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/alert",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://developer.mozilla.org/en-US/docs/Web/API/setTimeout",target:"_blank",rel:"noopener noreferrer"},Sn={href:"http://expressjs.com/",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://nodejs.org/api/http.html#httpcreateserveroptions-requestlistener",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://stackblitz.com/edit/node-eby9e1?embed=1&file=index.js",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://developer.chrome.com/docs/devtools/console/#javascript",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software",target:"_blank",rel:"noopener noreferrer"},An={href:"https://frontendmasters.com/bootcamp/introduction-html/",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://jsfiddle.net/",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://frontendmasters.com/courses/node-js-v2/",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://survey.stackoverflow.co/2022/#most-loved-dreaded-and-wanted-new-collab-tools-want",target:"_blank",rel:"noopener noreferrer"},En={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference",target:"_blank",rel:"noopener noreferrer"},Mn={class:"hint-container details"};function In(d,n){const p=l("VPCard"),o=l("router-link"),g=l("SiteInfo"),t=l("VPIcon");return b(),f("div",null,[a("h1",w,[a("a",S,[a("span",null,v(d.$frontmatter.title)+" 관련",1)])]),e(p,u(c({title:"JavaScript > Article(s)",desc:"Article(s)",link:"/programming/js/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),a("nav",y,[a("ul",null,[a("li",null,[e(o,{to:"#helpful-background"},{default:i(()=>n[0]||(n[0]=[s("Helpful Background")])),_:1,__:[0]})]),a("li",null,[e(o,{to:"#getting-started-obstacles"},{default:i(()=>n[1]||(n[1]=[s("Getting Started Obstacles")])),_:1,__:[1]})]),a("li",null,[e(o,{to:"#why-learn-use-javascript"},{default:i(()=>n[2]||(n[2]=[s("Why Learn/Use JavaScript?")])),_:1,__:[2]})]),a("li",null,[e(o,{to:"#top-use-cases-of-javascript"},{default:i(()=>n[3]||(n[3]=[s("Top Use Cases of JavaScript")])),_:1,__:[3]}),a("ul",null,[a("li",null,[e(o,{to:"#the-web-platform-runtime"},{default:i(()=>n[4]||(n[4]=[s("The Web Platform Runtime")])),_:1,__:[4]})]),a("li",null,[e(o,{to:"#node-js-runtime"},{default:i(()=>n[5]||(n[5]=[s("Node.js Runtime")])),_:1,__:[5]})]),a("li",null,[e(o,{to:"#javascript-engines"},{default:i(()=>n[6]||(n[6]=[s("JavaScript Engines")])),_:1,__:[6]})])])]),a("li",null,[e(o,{to:"#before-learning-javascript"},{default:i(()=>n[7]||(n[7]=[s("Before Learning JavaScript")])),_:1,__:[7]}),a("ul",null,[a("li",null,[e(o,{to:"#authoring-tool"},{default:i(()=>n[8]||(n[8]=[s("Authoring Tool")])),_:1,__:[8]})]),a("li",null,[e(o,{to:"#runtime"},{default:i(()=>n[9]||(n[9]=[s("Runtime")])),_:1,__:[9]})]),a("li",null,[e(o,{to:"#reference"},{default:i(()=>n[10]||(n[10]=[s("Reference")])),_:1,__:[10]})])])]),a("li",null,[e(o,{to:"#start-learning-javascript"},{default:i(()=>n[11]||(n[11]=[s("Start Learning JavaScript")])),_:1,__:[11]}),a("ul",null,[a("li",null,[e(o,{to:"#step-1-learn-programming-fundamentals"},{default:i(()=>n[12]||(n[12]=[s("Step 1 - Learn Programming fundamentals")])),_:1,__:[12]})]),a("li",null,[e(o,{to:"#step-2-learn-intermediate-advanced-programming-paradigms"},{default:i(()=>n[13]||(n[13]=[s("Step 2 - Learn Intermediate & Advanced Programming Paradigms")])),_:1,__:[13]})]),a("li",null,[e(o,{to:"#step-3-learn-es-modules"},{default:i(()=>n[14]||(n[14]=[s("Step 3 - Learn ES Modules")])),_:1,__:[14]})])])]),a("li",null,[e(o,{to:"#commonly-asked-javascript-questions"},{default:i(()=>n[15]||(n[15]=[s("Commonly Asked JavaScript Questions")])),_:1,__:[15]})])])]),n[195]||(n[195]=a("hr",null,null,-1)),e(g,{name:"A Complete Guide to Beginning with JavaScript",desc:"This guide serves as an introduction to learning JavaScript, covering necessary prerequisite knowledge and addressing common obstacles. It highlights JavaScript’s origins, essential concepts, and practical applications across different environments.",url:"https://frontendmasters.com/blog/a-complete-guide-to-beginning-with-javascript/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3539"}),n[196]||(n[196]=a("p",null,"This guide is not itself the means to learn JavaScript. This guide addresses issues around getting started (obstacles, preliminary knowledge, etc.) and then points you to curated resources to start learning.",-1)),n[197]||(n[197]=a("p",null,"Consider this material a prologue or an introduction to the learning process itself so, you have the needed background and context before beginning the learning process.",-1)),a("div",J,[n[39]||(n[39]=a("p",{class:"hint-container-title"},"Required Prerequisite Knowledge",-1)),n[40]||(n[40]=a("p",null,"The list below entails the knowledge required before attempting to learn JavaScript:",-1)),a("ul",null,[a("li",null,[n[19]||(n[19]=s("A necessary step to learning any programming language is first to understand how ")),a("a",j,[e(t,{icon:"fa-brands fa-firefox"}),n[16]||(n[16]=s("computer programming languages"))]),n[20]||(n[20]=s(" work in general (i.e., the conceptual mechanics of any programming language). We’ve yet to find a better book for this than “")),a("a",x,[e(t,{icon:"fa-brands fa-amazon"}),n[17]||(n[17]=s("How Computer Programming Works"))]),n[21]||(n[21]=s("” by Daniel Appleman. The book is old, and the language used isn’t JavaScript, but the mechanics it teaches are relevant to all languages. If you prefer to learn by instruction and want a lot more details, look at the ")),a("a",A,[e(t,{icon:"fas fa-globe"}),n[18]||(n[18]=s("Crash Course on Computer Science"))]),n[22]||(n[22]=s(" (episodes: #11, #12, #13, #14, #16)."))]),a("li",null,[n[26]||(n[26]=s("A basic understanding of the ")),a("a",q,[e(t,{icon:"fas fa-globe"}),n[23]||(n[23]=s("internet"))]),n[27]||(n[27]=s(", web browsers, ")),a("a",C,[e(t,{icon:"fas fa-globe"}),n[24]||(n[24]=s("HTML"))]),n[28]||(n[28]=s(" (i.e. web pages), and ")),a("a",T,[e(t,{icon:"fas fa-globe"}),n[25]||(n[25]=s("CSS"))]),n[29]||(n[29]=s("."))]),a("li",null,[n[34]||(n[34]=s("A basic understanding of a ")),a("a",E,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[30]||(n[30]=s("command line interface"))]),n[35]||(n[35]=s(" (see ")),a("a",M,[e(t,{icon:"fas fa-globe"}),n[31]||(n[31]=s("Crash Course #22"))]),n[36]||(n[36]=s(") and a ")),a("a",I,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[32]||(n[32]=s("graphical user interface"))]),n[37]||(n[37]=s(" (see ")),a("a",N,[e(t,{icon:"fas fa-globe"}),n[33]||(n[33]=s("Crash Course #26"))]),n[38]||(n[38]=s(")."))])])]),n[198]||(n[198]=a("hr",null,null,-1)),n[199]||(n[199]=a("h2",{id:"helpful-background",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#helpful-background"},[a("span",null,"Helpful Background")])],-1)),a("ul",null,[a("li",null,[n[44]||(n[44]=s("In 1995 a programming language, which we call JavaScript today, was written in ten days and embedded into the Netscape web browser (i.e., a host environment) to validate user inputted data into HTML forms. That is the origin story of JavaScript in a nutshell. Fast forward 27 years, and today it is the most used programming language in the world and is not limited to web browser runtimes. JavaScript, today is used almost anywhere a programmer can prefer it. From the front-end (e.g., ")),a("a",W,[e(t,{icon:"fa-brands fa-react"}),n[41]||(n[41]=s("React"))]),n[45]||(n[45]=s(") and back-end (e.g., ")),a("a",P,[e(t,{icon:"iconfont icon-expressjs"}),n[42]||(n[42]=s("Express"))]),n[46]||(n[46]=s(") of a web application, to command CLI tools (e.g., ")),n[47]||(n[47]=a("a",{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},"ESlint",-1)),n[48]||(n[48]=s("), to a database (e.g., ")),a("a",z,[e(t,{icon:"iconfont icon-mongodb"}),n[43]||(n[43]=s("MongoDB"))]),n[49]||(n[49]=s("). JavaScript is everywhere, and professionals and as well as novices use it."))]),a("li",null,[n[56]||(n[56]=s("JavaScript is a ")),a("a",U,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[50]||(n[50]=s("scripted programming language"))]),n[57]||(n[57]=s(". It typically is found in a “host environment” where a programing language is required for scripting or programming something using an application programming interface (aka APIs). In the context of web browsers, ")),a("a",O,[e(t,{icon:"fa-brands fa-firefox"}),n[51]||(n[51]=s("JavaScript works along"))]),n[58]||(n[58]=s(" with web APIs like the ")),a("a",L,[e(t,{icon:"fa-brands fa-firefox"}),n[52]||(n[52]=s("BOM"))]),n[59]||(n[59]=s(" (i.e., Browser Object Model), ")),a("a",D,[e(t,{icon:"fa-brands fa-firefox"}),n[53]||(n[53]=s("DOM (i.e., Document Object Model)"))]),n[60]||(n[60]=s(", and ")),a("a",B,[e(t,{icon:"fa-brands fa-firefox"}),n[54]||(n[54]=s("CSSOM (i.e., CSS Object Model)"))]),n[61]||(n[61]=s("to script or program web browsers and web pages. In the context of ")),a("a",R,[e(t,{icon:"fa-brands fa-node"}),n[55]||(n[55]=s("Node.js"))]),n[62]||(n[62]=s(", JavaScript is the language used to produce applications and tools using Node.js APIs."))]),a("li",null,[a("a",G,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[63]||(n[63]=s("JavaScript requires an engine to execute JavaScript source code"))]),n[65]||(n[65]=s(". JavaScript is written using a text/code editor and then fed into an ")),a("a",H,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[64]||(n[64]=s("ECMAScript engine"))]),n[66]||(n[66]=s(" to be run/executed in the context of a host environment. The two most common host environments are a web browser and Node.js. The most well-known engine is ")),n[67]||(n[67]=a("a",{href:"https://v8.dev/",target:"_blank",rel:"noopener noreferrer"},"V8",-1)),n[68]||(n[68]=s(". The V8 engine is the engine used by the Edge and Chrome web browsers as well as Node.js."))]),a("li",null,[a("a",V,[e(t,{icon:"fas fa-globe"}),n[69]||(n[69]=s("JavaScript has undergone two historically significant"))]),n[70]||(n[70]=s(" language changes. The first occurred in 2009 when ES5 was released, and the second occurred in 2015 when ES6 was released (Note: ES6 today is called “ES2015”). I’m not going to list the language changes because, as of 2022, the details are not as important as they once were. Just beware that ES3 to ES5 and ES5 to ES6 was when the two most significant changes to the language occurred."))]),a("li",null,[n[75]||(n[75]=s("Today ")),a("a",$,[n[71]||(n[71]=s("small incremental changes to the JavaScript language occur yearly (")),e(t,{icon:"iconfont icon-github"}),n[72]||(n[72]=a("code",null,"tc39/proposals",-1)),n[73]||(n[73]=s(")"))]),n[76]||(n[76]=s(". Before 2015 changes to the language ")),a("a",F,[e(t,{icon:"fas fa-globe"}),n[74]||(n[74]=s("were sparse and often separated by several years"))]),n[77]||(n[77]=s(". The name/label given to these yearly changes is ES2015, ES2016, ES2017, ES2018, etc. This year, the language will have a set of changes known as ES2022. ---"))])]),n[200]||(n[200]=a("hr",null,null,-1)),n[201]||(n[201]=a("h2",{id:"getting-started-obstacles",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#getting-started-obstacles"},[a("span",null,"Getting Started Obstacles")])],-1)),a("ul",null,[n[133]||(n[133]=a("li",null,"Once upon a time, some perceived JavaScript as an inferior programming language for professional endeavors. While this is no longer the case today, you might still encounter this notion. One can mostly ignore this opinion as of today, given JavaScript is used in a wide variety of professional contexts today.",-1)),a("li",null,[n[80]||(n[80]=s("Newbies and even some veterans of the JavaScript language don’t realize that the word “JavaScript” is interchangeable with “ECMAScript.” JavaScript is the commercial name for ECMAScript and a historical relic. The actual name of the programming language in use today is ECMAScript. Anytime you hear JavaScript, you can mentally replace it with “ECMAScript.” ECMAScript is the programming language used by ")),a("a",Y,[e(t,{icon:"fas fa-globe"}),n[78]||(n[78]=s("ECMAScript engines like V8"))]),n[81]||(n[81]=s(". Consider that the module format used in JavaScript is called “ECMAScript Modules,” also known as “ES Modules” or “ESM.” And, consider that if you want to know which language features are available in a web browser or Node.js, you have to review which ")),a("a",Q,[e(t,{icon:"fas fa-globe"}),n[79]||(n[79]=s("ECMAScript specification is supported by the engine"))]),n[82]||(n[82]=s(" (e.g., ES3, ES5, ES6, ES2015 thru ES2023). As you learn JavaScript, be aware that the core language, commonly called “JavaScript,” is technically not “JavaScript”; it is ECMAScript. Knowing this will elevate several layers of indirection as you learn about the language."))]),a("li",null,[n[85]||(n[85]=s("You will be sorely disappointed if you think you can learn programming or JavaScript by reading the ")),a("a",K,[e(t,{icon:"fas fa-globe"}),n[83]||(n[83]=s("ECMAScript specification"))]),n[86]||(n[86]=s(". The ECMAScript specification does not exist with the intent of being a resource for learning programming or JavaScript. The ECMAScript specification defines the language details for engineers building an ECMAScript engine (e.g., V8). At times, however, advanced JavaScript programmers might ")),a("a",Z,[e(t,{icon:"fas fa-globe"}),n[84]||(n[84]=s("read up on the rules of the language by reading the language specification"))]),n[87]||(n[87]=s(". Regardless, you should know that the document is not written as a learning resource but to help engine authors develop JavaScript engines."))]),a("li",null,[n[89]||(n[89]=s("Focus on the language, alone, at first! Learning JavaScript does not have to come with the overhead of understanding the host environments in which JavaScript runs, regardless of what millions of tutorials on the web directly and indirectly assert. Learning JavaScript is more accessible when ")),a("a",X,[e(t,{icon:"fa-brands fa-firefox"}),n[88]||(n[88]=s("first focusing on the language and ignoring the runtimes"))]),n[90]||(n[90]=s(". If you are new to programming, focus on the language, not web or Node.js APIs (Yes, you’ll need to know enough about a JavaScript runtime to run JavaScript. But learn enough to run JavaScript and then focus on the language)."))]),a("li",null,[n[94]||(n[94]=s("JavaScript is not a ")),a("a",_,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[91]||(n[91]=s("strongly typed"))]),n[95]||(n[95]=s(" language. It is a ")),a("a",nn,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[92]||(n[92]=s("loosely typed"))]),n[96]||(n[96]=s(" language. I’m not going to get into what this means because if you are reading this guide, this distinction will either be lost on you or cause noise. ")),a("a",an,[e(t,{icon:"iconfont icon-typescript"}),n[93]||(n[93]=s("TypeScript"))]),n[97]||(n[97]=s(" exists to add a non-native strongly typed syntax to JavaScript. If you are new to programming and coming to JavaScript without programming experience, don’t learn TypeScript before learning JavaScript. Resist the urge to jump on the TypeScript bandwagon until you have an informed and experienced reason, which comes from knowing JavaScript first."))]),a("li",null,[n[100]||(n[100]=s("You’ll bump up against JavaScript compilers sooner than later while learning JavaScript. ")),a("a",sn,[e(t,{icon:"iconfont icon-babel"}),n[98]||(n[98]=s("Babel"))]),n[101]||(n[101]=s(", ")),a("a",en,[e(t,{icon:"iconfont icon-typescript"}),n[99]||(n[99]=s("Typescript"))]),n[102]||(n[102]=s(", ")),n[103]||(n[103]=a("a",{href:"https://swc.rs/",target:"_blank",rel:"noopener noreferrer"},"SWC",-1)),n[104]||(n[104]=s(", and ")),n[105]||(n[105]=a("a",{href:"https://github.com/alangpierce/sucrase#sucrase/",target:"_blank",rel:"noopener noreferrer"},"Surcase",-1)),n[106]||(n[106]=s(" all take ECMAScript and even TypeScript and compile it to a backward-compatible version of JavaScript (e.g. ES2022 to ES3). Using a compiler before understanding why you need one can be problematic. Don’t compile JavaScript until you know why you are compiling."))]),a("li",null,[n[110]||(n[110]=s("JavaScript had no ")),a("a",tn,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[107]||(n[107]=s("built-in module mechanism"))]),n[111]||(n[111]=s(" for a long time, and several bolt-on solutions stood up over the years to fill the void (e.g., ")),a("a",on,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[108]||(n[108]=s("CJS"))]),n[112]||(n[112]=s(" and ")),n[113]||(n[113]=a("a",{href:"https://github.com/amdjs/amdjs-api/blob/master/AMD.md",target:"_blank",rel:"noopener noreferrer"},"AMD",-1)),n[114]||(n[114]=s("). This period is coming to a close. Yippie! We’ve come a long way, and mass adoption of the official ")),a("a",rn,[e(t,{icon:"fa-brands fa-firefox"}),n[109]||(n[109]=s("ES module format"))]),n[115]||(n[115]=s(" is taking place. But the history of JavaScript modules is fragmented and comes with a long tail. Trying to understand modules before you understand JavaScript will cause indirection. Don’t focus on ES modules before you know the language. When you have a firm grasp of the language, your next learning stop should be ES Modules."))]),a("li",null,[n[122]||(n[122]=s("If you are new to installing and using packages, there is a lot of historical information and a complicated learning curve. JavaScript packages can use different module formats; ")),a("a",ln,[e(t,{icon:"fa-brands fa-firefox"}),n[116]||(n[116]=s("ESM"))]),n[123]||(n[123]=s(", ")),a("a",pn,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[117]||(n[117]=s("CJS"))]),n[124]||(n[124]=s(", or ")),n[125]||(n[125]=a("a",{href:"https://github.com/amdjs/amdjs-api/blob/master/AMD.md",target:"_blank",rel:"noopener noreferrer"},"AMD",-1)),n[126]||(n[126]=s(". Also, ")),a("a",un,[n[118]||(n[118]=s("the UMD (")),e(t,{icon:"iconfont icon-github"}),n[119]||(n[119]=a("code",null,"umdjs/umd",-1)),n[120]||(n[120]=s(")"))]),n[127]||(n[127]=s(" module format combines and abstracts other formats like ESM, CJS, and AMD. Due to the sorted and complicated history of JavaScript module formats, there is also a complex history around the formats found in the ")),a("a",cn,[e(t,{icon:"fa-brands fa-npm"}),n[121]||(n[121]=s("npm registry"))]),n[128]||(n[128]=s(", which is a public registry of JavaScript packages (a package is a set of JavaScript modules). Set all this aside while one learns JavaScript."))]),a("li",null,[a("a",dn,[e(t,{icon:"iconfont icon-json"}),n[129]||(n[129]=s("JavaScript Object Notation (aka JSON)"))]),n[131]||(n[131]=s(" is another topic that might not land with you until you understand JavaScript datatypes and some basic programming concepts. Note that the JSON syntax isn’t part of the ECMAScript specification, and the community ")),a("a",gn,[e(t,{icon:"iconfont icon-json"}),n[130]||(n[130]=s("conventionally"))]),n[132]||(n[132]=s(" drives any standardized usage. However, JavaScript does provide JSON methods to parse and stringify JSON. As a JavaScript neophyte, I would set aside trying to understand JSON until you understand JavaScript datatypes and JavaScript’s implementation of strings, objects, and arrays. If you need a mental model slot to place JSON into today, consider JSON a conventional way of writing data as text, and simultaneously valid JavaScript, in a universally understandable way so that other languages can transport and translate the data."))]),n[134]||(n[134]=a("li",null,"You might hear about JavaScript fatigue because the JavaScript development scene is massive and comes with an enormous spectrum of solutions, tools, and churn. It makes sense, given JavaScript is the most used programming language in the world. Set all this churning noise aside until you spend time learning the language. The language is solid.",-1))]),n[202]||(n[202]=r(`<hr><h2 id="why-learn-use-javascript" tabindex="-1"><a class="header-anchor" href="#why-learn-use-javascript"><span>Why Learn/Use JavaScript?</span></a></h2><p>One should learn JavaScript because:</p><ul><li>JavaScript is the most ubiquitous programming language in the world.</li><li>JavaScript is ideal for those new to programming.</li><li>To start running JavaScript is accessible and straightforward (i.e., open a web browser and start writing JavaScript immediately in the DevTools console).</li><li>The job market is vast for developers who know JavaScript.</li><li>A sea of instructional resources (i.e., Traditional Degree Programs, Boot Camps, Independent Learning).</li><li>JavaScript is very unlikely to become unpopular anytime soon.</li></ul><hr><h2 id="top-use-cases-of-javascript" tabindex="-1"><a class="header-anchor" href="#top-use-cases-of-javascript"><span>Top Use Cases of JavaScript</span></a></h2><p>The web platform (i.e., web browsers) and Node.js are the two most common runtimes that use JavaScript as their programming language. We’ll briefly review both runtimes and then discuss the commonality between the two runtimes (i.e., a JavaScript engine).</p><h3 id="the-web-platform-runtime" tabindex="-1"><a class="header-anchor" href="#the-web-platform-runtime"><span>The Web Platform Runtime</span></a></h3><p>As you might know, HTML or hypertext markup language is the foundational language used to construct a web page. When opened in a web browser, the following HTML file will render the text “Hello, I’m a webpage.”</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title of webpage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello, I&#39;m a webpage.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/08/javascript-webpage-1024x450-1.png?resize=1024%2C450&amp;ssl=1" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,11)),a("p",null,[n[136]||(n[136]=s("JavaScript is the scripting language used to add programmatic behavior to web browsers and web pages (i.e., ")),a("a",mn,[e(t,{icon:"fa-brands fa-firefox"}),n[135]||(n[135]=s("UI activities and interactions based on events"))]),n[137]||(n[137]=s(")."))]),n[203]||(n[203]=r(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Name of webpage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      Hello, I&#39;m a webpage.</span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">callThisFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Click this button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> <span class="token comment">// e.g. programming aspects of the web page</span></span>
<span class="line">      <span class="token keyword">const</span> <span class="token function-variable function">callThisFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        document</span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;afterend&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;JavaScript adds behavior to HTML and CSS (i.e. webpages)&quot;</span></span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// e.g. programming aspects of the browser</span></span>
<span class="line">        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;you change the web page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("p",null,[n[144]||(n[144]=s("In the HTML document above (")),a("a",fn,[e(t,{icon:"iconfont icon-codesandbox"}),n[138]||(n[138]=s("see live demo"))]),n[145]||(n[145]=s("), we are using JavaScript the language to call the runtime ")),a("a",vn,[e(t,{icon:"fa-brands fa-firefox"}),n[139]||(n[139]=s("DOM"))]),n[146]||(n[146]=s(" API’s ")),a("a",kn,[e(t,{icon:"fa-brands fa-firefox"}),n[140]||(n[140]=s("getElementById()"))]),n[147]||(n[147]=s(" and ")),a("a",bn,[e(t,{icon:"fa-brands fa-firefox"}),n[141]||(n[141]=s("insertAdjacentHTML()"))]),n[148]||(n[148]=s(" as well as the BOM API’s ")),a("a",hn,[e(t,{icon:"fa-brands fa-firefox"}),n[142]||(n[142]=s("alert()"))]),n[149]||(n[149]=s(" and ")),a("a",wn,[e(t,{icon:"fa-brands fa-firefox"}),n[143]||(n[143]=s("setTimeout()"))]),n[150]||(n[150]=s(". Using JavaScript runtime API’s, the webpage and browser window become scriptable."))]),n[204]||(n[204]=a("figure",null,[a("img",{src:"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/javascript-alert.png?resize=1024%2C581&ssl=1",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1)),n[205]||(n[205]=a("p",null,"This small webpage is just a tiny glimpse of what can be programmed on the web platform using the JavaScript programming language. Note that JavaScript is the scripting language used to program web browsers and webpages.",-1)),n[206]||(n[206]=a("h3",{id:"node-js-runtime",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#node-js-runtime"},[a("span",null,"Node.js Runtime")])],-1)),a("p",null,[n[152]||(n[152]=s("Node.js, loosely speaking, is a command line application that runs a standalone ECMAScript engine that runs Node.js applications. This JavaScript environment’s purpose is to author JavaScript applications like web servers (e.g., ")),a("a",Sn,[e(t,{icon:"iconfont icon-expressjs"}),n[151]||(n[151]=s("express.js"))]),n[153]||(n[153]=s(") and CLI tools (e.g., ")),n[154]||(n[154]=a("a",{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},"ESLint",-1)),n[155]||(n[155]=s(" and ")),n[156]||(n[156]=a("a",{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"},"Prettier",-1)),n[157]||(n[157]=s(") outside of the browser."))]),a("p",null,[n[159]||(n[159]=s("The following JavaScript code is a Node.js application that imports an ")),a("a",yn,[e(t,{icon:"fa-brands fa-node"}),n[158]||(n[158]=s("internal http node module"))]),n[160]||(n[160]=s(" to set up a basic web server."))]),n[207]||(n[207]=r(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> hostname <span class="token operator">=</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span></span>
<span class="line">  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> hostname<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Server running at http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\`</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Typically, Node gets installed on your local system or a server, but one can run the previous Node.js application online for demonstration purposes.</p>`,2)),a("p",null,[n[162]||(n[162]=s("Try opening ")),a("a",Jn,[e(t,{icon:"fas fa-globe"}),n[161]||(n[161]=s("this live demo"))]),n[163]||(n[163]=s(". When the link is open in a web browser, run the JavaScript source code from the terminal using the command ")),n[164]||(n[164]=a("code",null,"node index.js",-1)),n[165]||(n[165]=s("."))]),n[208]||(n[208]=a("figure",null,[a("img",{src:"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/javascript-serve-node.png?resize=754%2C273&ssl=1",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1)),n[209]||(n[209]=a("p",null,"Running the command will start the Node.js application and server the results to a browser view (i.e., “Hello World”).",-1)),n[210]||(n[210]=a("figure",null,[a("img",{src:"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/javascript-node-helloworld.png?resize=678%2C261&ssl=1",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1)),n[211]||(n[211]=a("p",null,"If you see “Hello World,” then you are using the Node.js CLI application to run the Node.js source code (i.e., “node index.js”), and this source code is a small application that servers a plain text document to a web browser from a web server.",-1)),n[212]||(n[212]=a("p",null,"Note that in the context of a Node.js application, JavaScript is viewed as a programming language to create Node.js applications.",-1)),n[213]||(n[213]=a("h3",{id:"javascript-engines",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#javascript-engines"},[a("span",null,"JavaScript Engines")])],-1)),a("p",null,[n[167]||(n[167]=s("Web browsers and Node.js have different runtime details, but both use a JavaScript engine. The context of what you are doing with the language differs, but JavaScript and the engine can be the same. So, for example, whether you open a ")),a("a",jn,[e(t,{icon:"fa-brands fa-chrome"}),n[166]||(n[166]=s("JavaScript console in the latest version of the Chrome web browser"))]),n[168]||(n[168]=s(" and execute some JavaScript or open a .js file and begin writing a Node.js application executed by the ")),n[169]||(n[169]=a("a",{href:"https://nodejs.dev/en/learn/how-to-use-the-nodejs-repl",target:"_blank",rel:"noopener noreferrer"},"Node REPL",-1)),n[170]||(n[170]=s(", both are being run by a version of the V8 ECMAScript engine."))]),n[214]||(n[214]=a("hr",null,null,-1)),n[215]||(n[215]=a("h2",{id:"before-learning-javascript",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#before-learning-javascript"},[a("span",null,"Before Learning JavaScript")])],-1)),n[216]||(n[216]=a("p",null,"We suggest selecting and becoming comfortable using the following before you begin learning JavaScript:",-1)),a("ul",null,[a("li",null,[n[172]||(n[172]=s("A JavaScript authoring tool (i.e., ")),a("a",xn,[e(t,{icon:"fa-brands fa-firefox"}),n[171]||(n[171]=s("a text or code editor, e.g., VS Code"))]),n[173]||(n[173]=s(")"))]),a("li",null,[n[177]||(n[177]=s("A JavaScript runtime (e.g., ")),a("a",An,[e(t,{icon:"fas fa-globe"}),n[174]||(n[174]=s("web pages"))]),n[178]||(n[178]=s(", ")),a("a",qn,[e(t,{icon:"fas fa-globe"}),n[175]||(n[175]=s("JSFiddle"))]),n[179]||(n[179]=s(", or ")),a("a",Cn,[e(t,{icon:"fas fa-globe"}),n[176]||(n[176]=s("Node.js"))]),n[180]||(n[180]=s(")"))]),n[181]||(n[181]=a("li",null,"A JavaScript reference (i.e., language and support documentation)",-1))]),n[217]||(n[217]=a("h3",{id:"authoring-tool",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#authoring-tool"},[a("span",null,"Authoring Tool")])],-1)),a("p",null,[n[183]||(n[183]=s("Today ")),a("a",Tn,[e(t,{icon:"fa-brands fa-stack-overflow"}),n[182]||(n[182]=s("most developers"))]),n[184]||(n[184]=s(" use ")),n[185]||(n[185]=a("a",{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},"VS Code",-1)),n[186]||(n[186]=s(" for authoring JavaScript. We recommend using VS Code but using a simple text editor will get the job done if you prefer not to add on the overhead of learning how to use a code editor. Alternatively, if you want to start ASAP, you can always just open ")),n[187]||(n[187]=a("a",{href:"https://jsfiddle.net/",target:"_blank",rel:"noopener noreferrer"},"JSFiddle",-1)),n[188]||(n[188]=s(" and start typing JavaScript into the JavaScript pane and then press the “Run” button."))]),n[218]||(n[218]=r('<h3 id="runtime" tabindex="-1"><a class="header-anchor" href="#runtime"><span>Runtime</span></a></h3><p>One will need to select a runtime in which they plan on learning JavaScript. We recommend starting with a <a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web" target="_blank" rel="noopener noreferrer">web browser and html (i.e., webpages)</a> instead of Node.js if you are new to programming (e.g., <a href="https://microsoft.com/en-us/edge" target="_blank" rel="noopener noreferrer">Edge</a> or <a href="https://google.com/chrome/" target="_blank" rel="noopener noreferrer">Chrome</a> will do).</p><h3 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h3>',3)),a("p",null,[n[190]||(n[190]=s("There is only one JavaScript reference we recommend using when studying the built-in parts of the language, the ")),a("a",En,[e(t,{icon:"fa-brands fa-firefox"}),n[189]||(n[189]=s("Mozilla JavaScript reference"))]),n[191]||(n[191]=s(" (aka MDN). We also recommend purposely savoiding all other reference sources while first learning JavaScript. When searching the web, focus on MDN resources by adding the “mdn” string to all of your searches (e.g., “")),n[192]||(n[192]=a("a",{href:"https://google.com/search?q=mdn+array+foreach",target:"_blank",rel:"noopener noreferrer"},"mdn array foreach",-1)),n[193]||(n[193]=s("”) so that MDN results show up first."))]),n[219]||(n[219]=r(`<hr><h2 id="start-learning-javascript" tabindex="-1"><a class="header-anchor" href="#start-learning-javascript"><span>Start Learning JavaScript</span></a></h2><h3 id="step-1-learn-programming-fundamentals" tabindex="-1"><a class="header-anchor" href="#step-1-learn-programming-fundamentals"><span>Step 1 - Learn Programming fundamentals</span></a></h3><ol><li>Programming Basics <ul><li>values</li><li>operations</li><li>variables</li><li>expressions and statements</li><li>decisions</li><li>loops</li><li>functions</li></ul></li><li>Types &amp; Coercion</li><li>Scope &amp; Closure</li></ol><h4 id="video-courses" tabindex="-1"><a class="header-anchor" href="#video-courses"><span>Video Courses</span></a></h4><ul><li><a href="https://frontendmasters.com/bootcamp/introduction-javascript/" target="_blank" rel="noopener noreferrer">Learn JavaScript</a> [free]</li><li><a href="https://frontendmasters.com/courses/getting-started-javascript-v2/" target="_blank" rel="noopener noreferrer">Getting Started with JavaScript, v2</a> [free]</li><li><a href="https://frontendmasters.com/learn/javascript/" target="_blank" rel="noopener noreferrer">Complete JavaScript Learning Path</a> [$] <ul><li><a href="https://frontendmasters.com/courses/javascript-first-steps/" target="_blank" rel="noopener noreferrer">JavaScript: From First Steps to Professional</a> [$]</li><li><a href="https://frontendmasters.com/courses/javascript-hard-parts-v2/" target="_blank" rel="noopener noreferrer">JavaScript: The Hard Parts</a> [$]</li><li><a href="https://frontendmasters.com/courses/deep-javascript-v3/" target="_blank" rel="noopener noreferrer">Deep JavaScript Foundations, v3</a> [$]</li><li><a href="https://frontendmasters.com/courses/js-recent-parts/" target="_blank" rel="noopener noreferrer">JavaScript: The Recent Parts</a> [$]</li></ul></li></ul><h4 id="reading-material" tabindex="-1"><a class="header-anchor" href="#reading-material"><span>Reading Material</span></a></h4><ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics" target="_blank" rel="noopener noreferrer">JavaScript basics</a> [free]</li><li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps" target="_blank" rel="noopener noreferrer">JavaScript First Steps</a> [free]</li><li><a href="https://github.com/getify/You-Dont-Know-JS/blob/2nd-ed/get-started/README.md" target="_blank" rel="noopener noreferrer">You Don’t Know JS Yet: Get Started - 2nd Edition</a> [free to $]</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript" target="_blank" rel="noopener noreferrer">MDN A re-introduction to JavaScript (JS tutorial)</a> [free]</li><li><a href="https://eloquentjavascript.net/" target="_blank" rel="noopener noreferrer">Eloquent JavaScript</a> [free to $] - Chapters 1 - 12</li></ul><h3 id="step-2-learn-intermediate-advanced-programming-paradigms" tabindex="-1"><a class="header-anchor" href="#step-2-learn-intermediate-advanced-programming-paradigms"><span>Step 2 - Learn Intermediate &amp; Advanced Programming Paradigms</span></a></h3><h4 id="classes" tabindex="-1"><a class="header-anchor" href="#classes"><span>Classes</span></a></h4><ul><li>Video Course: <a href="https://frontendmasters.com/courses/object-oriented-js/" target="_blank" rel="noopener noreferrer">The Hard Parts of Object Oriented JavaScript</a> [$]</li><li>Reading Material: <a href="https://nostarch.com/oojs" target="_blank" rel="noopener noreferrer">The Principles of Object-Oriented JavaScript 1st Edition</a> [$]</li></ul><h4 id="functional-programming-with-javascript" tabindex="-1"><a class="header-anchor" href="#functional-programming-with-javascript"><span>Functional Programming with JavaScript</span></a></h4><ul><li>Video Course: <a href="https://frontendmasters.com/courses/functional-first-steps/" target="_blank" rel="noopener noreferrer">Functional JavaScript First Steps</a> [$]</li><li><a href="https://frontendmasters.com/courses/functional-js-fundamentals/" target="_blank" rel="noopener noreferrer">The Hard Parts of Functional JavaScript</a> [$]</li></ul><h4 id="javascript-async-promises" tabindex="-1"><a class="header-anchor" href="#javascript-async-promises"><span>JavaScript Async/Promises</span></a></h4><ul><li>Video Course: <a href="https://frontendmasters.com/courses/javascript-new-hard-parts/" target="_blank" rel="noopener noreferrer">JavaScript: The New Hard Parts</a> [$]</li><li>Reading Material: <a href="https://amazon.com/Understanding-JavaScript-Promises-Nicholas-Zakas/dp/1678034150?&amp;linkCode=ll1&amp;tag=frontendma0da-20&amp;linkId=cbcbfc33e77fe8718446de6fa5d782ef&amp;language=en_US&amp;ref_=as_li_ss_tl" target="_blank" rel="noopener noreferrer">Understanding JavaScript Promises</a> [$]</li></ul><h3 id="step-3-learn-es-modules" tabindex="-1"><a class="header-anchor" href="#step-3-learn-es-modules"><span>Step 3 - Learn ES Modules</span></a></h3><h4 id="reading-material-1" tabindex="-1"><a class="header-anchor" href="#reading-material-1"><span>Reading Material</span></a></h4><ul><li><a href="https://frontendmasters.com/guides/javascript-enlightenment/#9" target="_blank" rel="noopener noreferrer">Chapter 9 : Using ES2015 Modules Today</a> [free]</li><li><a href="https://frontendmasters.com/guides/javascript-enlightenment/#10" target="_blank" rel="noopener noreferrer">Chapter 10 : Writing ES2015 Module Syntax</a> [free]</li><li><a href="https://exploringjs.com/impatient-js/ch_modules.html" target="_blank" rel="noopener noreferrer">Modules • JavaScript for impatient programmers</a> [free to $]</li></ul><hr><h2 id="commonly-asked-javascript-questions" tabindex="-1"><a class="header-anchor" href="#commonly-asked-javascript-questions"><span>Commonly Asked JavaScript Questions</span></a></h2><details class="hint-container details"><summary>Question: What is JavaScript?</summary><p><strong>Answer</strong></p><p>Simplistically expressed, JavaScript is a <a href="https://en.wikipedia.org/wiki/Programming_language" target="_blank" rel="noopener noreferrer">programming language</a> used to program runtimes like web browsers &amp; web pages as well as Node.js applications. If you are new to programming languages, that is about all you can understand at this point. If you’re a seasoned programmer, then what you need to know is:</p><blockquote><p><strong>JavaScript</strong> (often shortened to <strong>JS</strong>) is a lightweight, interpreted, object-oriented language with <a href="https://en.wikipedia.org/wiki/First-class_function" target="_blank" rel="noopener noreferrer">first-class functions</a>, and is best known as the scripting language for Web pages, but it’s <a href="https://en.wikipedia.org/wiki/JavaScript#Other_usage" target="_blank" rel="noopener noreferrer">used in many non-browser environments</a> as well. It is a <a href="https://en.wikipedia.org/wiki/Prototype-based_programming" target="_blank" rel="noopener noreferrer">prototype-based</a>, multi-paradigm scripting language that is dynamic, and supports object-oriented, imperative, and functional programming styles.”</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/About_JavaScript" target="_blank" rel="noopener noreferrer">MDN reference: About JavaScript</a></p></blockquote></details><details class="hint-container details"><summary>Question: What is a JavaScript Array?</summary><p><strong>Answer</strong></p><p>How would one store multiple usernames as a single value called “userNames” in JavaScript?</p><p>Doing this with one comma-separated JavaScript string wouldn’t be ideal.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> userNames <span class="token operator">=</span> <span class="token string">&quot;Pat Jones, Bob Riley, Cody Dallas&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>As a comma-separated string value, there isn’t an ideal way to operate on each value as a separate value.</p><p>A JavaScript Array is a value in JavaScript that holds multiple values that can be stored and accessed using a numeric index starting at zero. (i.e., separate values stored and accessed using a numeric order). A better solution would be to use a JavaScript Array so each value can be stored and accessed as an individual value.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// create an array with three string values</span></span>
<span class="line"><span class="token keyword">let</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Pat Jones&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bob Riley&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cody Dallas&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// short hand Array syntax</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// access each value in the array</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;Pat Jones&#39; at index 0 in the array</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userNames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;Bob Riley&#39; at index 1 in the array</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userNames<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;Cody Dallas&#39; at index 2 in the array</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userNames<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs 3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once you have a set of values in an Array, JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noopener noreferrer">provides built-in</a> properties (e.g., <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length" target="_blank" rel="noopener noreferrer"><code>.length</code></a>) and methods (e.g., <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreferrer"><code>.forEach()</code></a>) that are incredibly handy when working on Array values.</p></details><details class="hint-container details"><summary>Question: What is a JavaScript Loop?</summary><p><strong>Answer</strong></p><p>To output the numbers between 0 and 50 (i.e., 1 thru 49) using JavaScript we could log out one digit at a time using a <code>console.log()</code> method.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// ... so on, and so on</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// logs</span></span>
<span class="line"><span class="token comment">// 1</span></span>
<span class="line"><span class="token comment">// 2</span></span>
<span class="line"><span class="token comment">// 3</span></span>
<span class="line"><span class="token comment">// 4</span></span>
<span class="line"><span class="token comment">// ... to 49</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Logging each digit would be redundant and unnecessary, and given that programming languages offer a mechanism to repeat code, a better solution exists. A JavaScript loop to repeat code without manually writing out each iteration would be a better solution.</p><p>The code below uses JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for" target="_blank" rel="noopener noreferrer"><code>for</code></a> statement to loop over a <code>console.log()</code> method, calling the <code>.log()</code> method 49 times with the current value of <code>i</code> upon each iteration of the loop.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">/* </span>
<span class="line">  We can read the following JavaScript like so: </span>
<span class="line"></span>
<span class="line">     i is equal to 1, </span>
<span class="line">     if i is less than 50 do a loop </span>
<span class="line">     (i.e. run the code inside the loop) </span>
<span class="line">     with the current value of i</span>
<span class="line">     then increment the value of i by 1 and do another loop </span>
<span class="line">     as long as i is less than 50 </span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// stop looping when i is greater than 50</span></span>
<span class="line"><span class="token comment">// logs</span></span>
<span class="line"><span class="token comment">// 1</span></span>
<span class="line"><span class="token comment">// 2</span></span>
<span class="line"><span class="token comment">// 3</span></span>
<span class="line"><span class="token comment">// 4</span></span>
<span class="line"><span class="token comment">// ... to 49</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The result is the same as if we had written out 49 sequential <code>console.log()</code>’s, each with a numerical value.</p><p>JavaScript loops are simply a mechanism that will call code repeatedly until you tell it to stop (e.g., <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/break" target="_blank" rel="noopener noreferrer"><code>break</code></a>).</p><p>JavaScript has many different looping mechanisms, some generic and some value specific. Below is a list of these looping mechanisms:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for_statement" target="_blank" rel="noopener noreferrer">for statement</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#do...while_statement" target="_blank" rel="noopener noreferrer">do…while statement</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#while_statement" target="_blank" rel="noopener noreferrer">while statement</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...in_statement" target="_blank" rel="noopener noreferrer">for…in statement</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement" target="_blank" rel="noopener noreferrer">for…of statement</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#iterate_over_an_array" target="_blank" rel="noopener noreferrer">Array</a><ul><li><code>every()</code></li><li><code>filter()</code></li><li><code>flatMap()</code></li><li><code>forEach()</code></li><li><code>map()</code></li><li><code>reduce()</code></li><li><code>reduceRight()</code></li></ul></li></ul></details><details class="hint-container details"><summary>Question: How do I use the Array methods <code>.map()</code> and <code>.forEach()</code>?</summary><p><strong>Answer</strong></p><p>The <code>.forEach()</code> method defines a function that is called for each value in an Array (i.e., all the values from the array are sequentially passed into the function).</p><p>The task of looping over an Array of strings is made easy with the <code>.forEach()</code> method.</p><p>Below, the index and value from the animals array is log to the console using <code>.forEach()</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;dog&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;snake&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bird&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// loop over animals passing each value to a function, the function runs console.log()</span></span>
<span class="line">animals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>em<span class="token operator">&gt;</span><span class="token keyword">function</span><span class="token operator">&lt;</span><span class="token operator">/</span>em<span class="token operator">&gt;</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> valueIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">at index </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>valueIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> the value is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* </span>
<span class="line">  logs</span>
<span class="line">    &quot;at index 0 the value is dog&quot;</span>
<span class="line">    &quot;at index 1 the value is cat&quot;</span>
<span class="line">    &quot;at index 2 the value is rat&quot;</span>
<span class="line">    &quot;at index 3 the value is snake&quot;</span>
<span class="line">    &quot;at index 4 the value is bird&quot;</span>
<span class="line"> */</span>\`</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>.map()</code> Array method also loops over an Array of values, but it’s used to return a new augmented Array of values based on the Array the map method was called on.</p><p>Below the values from the animals’ Array are changed one by one to be a different value in a different Array.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;dog&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;snake&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bird&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> pluralAnimals <span class="token operator">=</span> animals<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>em<span class="token operator">&gt;</span><span class="token keyword">function</span><span class="token operator">&lt;</span><span class="token operator">/</span>em<span class="token operator">&gt;</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pluralAnimals<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// logs [&quot;dogs&quot;, &quot;cats&quot;, &quot;rats&quot;, &quot;snakes&quot;, &quot;birds&quot;]</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// logs [&quot;dog&quot;, &quot;cat&quot;, &quot;rat&quot;, &quot;snake&quot;, &quot;bird&quot;]</span></span>
<span class="line"><span class="token comment">// animals Array did not change, map() created a new array of values</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,24)),a("details",Mn,[n[194]||(n[194]=r(`<summary>Question: How do I find a substring in a string?</summary><p><strong>Answer</strong></p><p>If one means by “find” to verify that a substring is within another string, the String <code>.includes()</code> method can be used.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> myString <span class="token operator">=</span> <span class="token string">&quot;my favorite animal is a dog&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myString<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;dog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If one means by “find” is locating the starting index of a substring within a string, that can be accomplished using the <code>.indexOf()</code> method.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> myString <span class="token operator">=</span> <span class="token string">&quot;my favorite animal is a dog&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myString<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs 27,</span></span>
<span class="line"><span class="token comment">// which means the string has 27 characters starting at a zero index</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> indexOfDog <span class="token operator">=</span> myString<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;dog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// find starting index of substring &#39;dog&#39;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>indexOfDog<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs 24, meaning that the character &quot;d&quot; is at index 24</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myString<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &quot;d&quot;, can use .at() to verify</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// so we know that dog starts at index 24 and ends at 27</span></span>
<span class="line"><span class="token comment">// .substring() will pull the string &#39;dog&#39; from &#39;my favorite animal is a dog&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>indexOfDog<span class="token punctuation">,</span> indexOfDog <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;dog&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>indexOf()</code> method searches a string for a substring and returns the first index where the substring begins.</p><hr><h2 id="what-s-next" tabindex="-1"><a class="header-anchor" href="#what-s-next"><span>What’s Next?</span></a></h2><p>Make sure to checkout the <a href="https://frontendmasters.com/learn/javascript/" target="_blank" rel="noopener noreferrer">learning path on JavaScript</a> if you’re interested in learning JavaScript in the browser, or the <a href="https://frontendmasters.com/learn/node-js/" target="_blank" rel="noopener noreferrer">learning path on Node.js</a> if you want to use JavaScript on the server.</p>`,10)),k(" TODO: add ARTICLE CARD "),e(p,u(c({title:"A Complete Guide to Beginning with JavaScript",desc:"This guide serves as an introduction to learning JavaScript, covering necessary prerequisite knowledge and addressing common obstacles. It highlights JavaScript’s origins, essential concepts, and practical applications across different environments.",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/a-complete-guide-to-beginning-with-javascript.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])])}const Pn=m(h,[["render",In]]),zn=JSON.parse('{"path":"/frontendmasters.com/a-complete-guide-to-beginning-with-javascript.html","title":"A Complete Guide to Beginning with JavaScript","lang":"en-US","frontmatter":{"lang":"en-US","title":"A Complete Guide to Beginning with JavaScript","description":"Article(s) > A Complete Guide to Beginning with JavaScript","icon":"fa-brands fa-js","category":["JavaScript","Article(s)"],"tag":["blog","frontendmasters.com","js","javascript"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A Complete Guide to Beginning with JavaScript\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/08/javascript-webpage-1024x450-1.png?resize=1024%2C450&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/javascript-alert.png?resize=1024%2C581&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/javascript-serve-node.png?resize=754%2C273&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/javascript-node-helloworld.png?resize=678%2C261&ssl=1\\"],\\"datePublished\\":\\"2024-09-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cody Lindley\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/a-complete-guide-to-beginning-with-javascript.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"A Complete Guide to Beginning with JavaScript"}],["meta",{"property":"og:description","content":"Article(s) > A Complete Guide to Beginning with JavaScript"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3539"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3539"}],["meta",{"name":"twitter:image:alt","content":"A Complete Guide to Beginning with JavaScript"}],["meta",{"property":"article:author","content":"Cody Lindley"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-09-04T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > A Complete Guide to Beginning with JavaScript"},{"property":"og:description","content":"A Complete Guide to Beginning with JavaScript"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/a-complete-guide-to-beginning-with-javascript.html"}]],"prev":"/programming/js/articles/README.md","date":"2024-09-04T00:00:00.000Z","isOriginal":false,"author":"Cody Lindley","cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3539"},"git":{},"readingTime":{"minutes":16.33,"words":4898},"filePathRelative":"frontendmasters.com/a-complete-guide-to-beginning-with-javascript.md","copyright":{"author":"Cody Lindley"}}');export{Pn as comp,zn as data};
