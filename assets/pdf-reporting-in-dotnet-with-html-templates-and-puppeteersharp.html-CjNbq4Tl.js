import{_ as b}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as s,f as t,b as c,a as y,t as w,n as d,g,w as p,e as a,r as l,o as q}from"./app-BVguHYKu.js";const T={},P={id:"frontmatter-title-관련",tabindex:"-1"},S={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},D={href:"https://github.com/Handlebars-Net/Handlebars.Net",target:"_blank",rel:"noopener noreferrer"},F={class:"hint-container note"},H={href:"https://github.com/scriban/scriban",target:"_blank",rel:"noopener noreferrer"},A={href:"https://questpdf.com/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://ironpdf.com/",target:"_blank",rel:"noopener noreferrer"};function C(m,n){const r=l("VPCard"),e=l("router-link"),v=l("SiteInfo"),h=l("Tabs"),o=l("VPIcon"),k=l("RouteLink");return q(),f("div",null,[s("h1",P,[s("a",S,[s("span",null,w(m.$frontmatter.title)+" 관련",1)])]),t(r,d(g({title:"C# > Article(s)",desc:"Article(s)",link:"/programming/cs/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",x,[s("ul",null,[s("li",null,[t(e,{to:"#why-html-headless-browser"},{default:p(()=>n[0]||(n[0]=[a("Why HTML + Headless Browser?")])),_:1,__:[0]})]),s("li",null,[t(e,{to:"#setting-up-the-project"},{default:p(()=>n[1]||(n[1]=[a("Setting Up the Project")])),_:1,__:[1]})]),s("li",null,[t(e,{to:"#rendering-the-template-and-pdf"},{default:p(()=>n[2]||(n[2]=[a("Rendering the Template and PDF")])),_:1,__:[2]})]),s("li",null,[t(e,{to:"#enhancements-images-header-footer-styling"},{default:p(()=>n[3]||(n[3]=[a("Enhancements: Images, Header/Footer, Styling")])),_:1,__:[3]})]),s("li",null,[t(e,{to:"#downloading-binaries-at-application-start"},{default:p(()=>n[4]||(n[4]=[a("Downloading Binaries at Application Start")])),_:1,__:[4]})]),s("li",null,[t(e,{to:"#performance-considerations"},{default:p(()=>n[5]||(n[5]=[a("Performance Considerations")])),_:1,__:[5]})]),s("li",null,[t(e,{to:"#summary"},{default:p(()=>n[6]||(n[6]=[a("Summary")])),_:1,__:[6]})])])]),n[27]||(n[27]=s("hr",null,null,-1)),t(v,{name:"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)",desc:"Generate PDF reports in .NET using HTML templates and a headless browser. We'll explore Handlebars.NET and PuppeteerSharp, compare alternatives, and analyze performance tradeoffs.",url:"https://milanjovanovic.tech/blog/pdf-reporting-in-dotnet-with-html-templates-and-puppeteersharp",logo:"https://milanjovanovic.tech/profile_favicon.png",preview:"https://milanjovanovic.tech/blog-covers/mnw_151.png"}),n[28]||(n[28]=c('<p>Sooner or later, every .NET developer needs to generate PDF reports. And generating polished PDF reports in .NET doesn&#39;t have to be painful. Let me explain how.</p><p>My go-to method?</p><p><strong>HTML to PDF conversion</strong>. It&#39;s:</p><ul><li>Simple to implement</li><li>Very flexible</li><li>Ideal for stylized reports</li></ul><p>But many popular libraries require a commercial license. This post walks you through a completely free approach using:</p><ul><li><strong>Handlebars.NET</strong> for templating</li><li><strong>PuppeteerSharp</strong> for headless rendering</li></ul><p>This gives you full control over layout, styling, and content. It&#39;s perfect for invoices, dashboards, and exports.</p><p>We&#39;ll start from scratch and build up to a complex, dynamic invoice report with full styling, images, and even headers and footers.</p><hr><h2 id="why-html-headless-browser" tabindex="-1"><a class="header-anchor" href="#why-html-headless-browser"><span>Why HTML + Headless Browser?</span></a></h2>',10)),t(h,{data:[{id:"Pros"},{id:"Cons"}],active:0},{title0:p(({value:i,isActive:u})=>n[7]||(n[7]=[a("Pros")])),title1:p(({value:i,isActive:u})=>n[8]||(n[8]=[a("Cons")])),tab0:p(({value:i,isActive:u})=>n[9]||(n[9]=[s("ul",null,[s("li",null,"Rich styling with CSS"),s("li",null,"Easy to preview/debug in browser"),s("li",null,"Supports charts/images via JS/CSS"),s("li",null,"Full control over layout (media queries, page breaks, etc.)")],-1)])),tab1:p(({value:i,isActive:u})=>n[10]||(n[10]=[s("ul",null,[s("li",null,"Requires bundling a browser (e.g. Chromium)"),s("li",null,"Slower than native PDF libraries"),s("li",null,"Slightly more setup complexity")],-1)])),_:1}),n[29]||(n[29]=c(`<hr><h2 id="setting-up-the-project" tabindex="-1"><a class="header-anchor" href="#setting-up-the-project"><span>Setting Up the Project</span></a></h2><p>We&#39;ll start by installing the NuGet packages we need for Handlebars and PuppeteerSharp:</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code class="language-powershell"><span class="line"><span class="token function">Install-Package</span> Handlebars<span class="token punctuation">.</span>Net</span>
<span class="line"><span class="token function">Install-Package</span> PuppeteerSharp</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, we&#39;ll create our first template. It&#39;s a simple HTML document with some Handlebars placeholders. You&#39;ll notice them with the <code>{{variable}}</code> syntax. These placeholders will be replaced with actual data when rendering the template.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token comment">&lt;!-- Templates/InvoiceTemplate.html --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- The file extension doesn&#39;t really matter. --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">      <span class="token selector">body</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Invoice #{{Number}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Date: {{formatDate IssuedDate}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>From:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{SellerAddress.CompanyName}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{SellerAddress.Email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>To:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{CustomerAddress.CompanyName}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{CustomerAddress.Email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Items:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Price<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      {{#each LineItems}}</span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{Name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{formatCurrency Price}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      {{/each}}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>Total: {{formatCurrency Total}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The function calls, like <code>{{formatDate IssuedDate}}</code>, are custom helpers we can define in Handlebars. You register them like this:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line">Handlebars<span class="token punctuation">.</span><span class="token function">RegisterHelper</span><span class="token punctuation">(</span><span class="token string">&quot;formatDate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token class-name">DateOnly</span> date<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> date<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;dd/MM/yyyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This allows us to format dates, currencies, or any other data type as needed. You register these helpers before compiling the template, once per application start is enough.</p><hr><h2 id="rendering-the-template-and-pdf" tabindex="-1"><a class="header-anchor" href="#rendering-the-template-and-pdf"><span>Rendering the Template and PDF</span></a></h2>`,11)),s("p",null,[n[12]||(n[12]=a("How do we render this template and convert it to PDF? We'll use ")),s("a",D,[t(o,{icon:"iconfont icon-github"}),n[11]||(n[11]=s("code",null,"Handlebars-Net/Handlebars.Net",-1))]),n[13]||(n[13]=a(" to compile the template with data, then PuppeteerSharp to render it to PDF."))]),n[30]||(n[30]=c(`<p>First, we read the template file and compile it with <code>Handlebars</code>:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token class-name"><span class="token keyword">var</span></span> template <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">ReadAllText</span><span class="token punctuation">(</span><span class="token string">&quot;Templates/InvoiceTemplate.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">{</span></span>
<span class="line">    customer <span class="token operator">=</span> <span class="token string">&quot;Milan Jovanović&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    items <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token punctuation">{</span> description <span class="token operator">=</span> <span class="token string">&quot;Software License&quot;</span><span class="token punctuation">,</span> price <span class="token operator">=</span> <span class="token number">99</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token punctuation">{</span> description <span class="token operator">=</span> <span class="token string">&quot;Support Plan&quot;</span><span class="token punctuation">,</span> price <span class="token operator">=</span> <span class="token number">49</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> compiledTemplate <span class="token operator">=</span> Handlebars<span class="token punctuation">.</span><span class="token function">Compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name"><span class="token keyword">string</span></span> html <span class="token operator">=</span> <span class="token function">compiledTemplate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This gives us the final HTML with all placeholders replaced by actual data.</p>`,3)),s("div",F,[n[19]||(n[19]=s("p",{class:"hint-container-title"},"Note",-1)),s("p",null,[n[16]||(n[16]=a("You don't necessarily need to use Handlebars. You can use any templating engine that suits your needs, like ")),t(k,{to:"/milanjovanovic.tech/flexible-pdf-reporting-in-net-using-razor-views.html"},{default:p(()=>n[14]||(n[14]=[s("strong",null,"Razor",-1)])),_:1,__:[14]}),n[17]||(n[17]=a(" or ")),s("a",H,[t(o,{icon:"iconfont icon-github"}),n[15]||(n[15]=s("code",null,"scriban/scriban",-1))]),n[18]||(n[18]=a("."))])]),n[31]||(n[31]=c(`<p>Next, we need to convert this HTML to PDF using PuppeteerSharp. We&#39;ll launch a headless browser, set the content to our HTML, and then generate the PDF. Here&#39;s how we do it:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token comment">// Ensure PuppeteerSharp has the browser binaries</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> browserFetcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> browserFetcher<span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span>BrowserFetcher<span class="token punctuation">.</span>DefaultChromiumRevision<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Launch the browser and create a new page</span></span>
<span class="line"><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> Puppeteer<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchOptions</span> <span class="token punctuation">{</span> Headless <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Set the content of the page to our compiled HTML</span></span>
<span class="line"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Optional: wait for fonts to load if using custom fonts</span></span>
<span class="line"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateExpressionHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;document.fonts.ready&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> pdf <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PdfDataAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfOptions</span> <span class="token punctuation">{</span></span>
<span class="line">    Format <span class="token operator">=</span> PaperFormat<span class="token punctuation">.</span>A4<span class="token punctuation">,</span></span>
<span class="line">    PrintBackground <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    MarginOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MarginOptions</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        Top <span class="token operator">=</span> <span class="token string">&quot;50px&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        Right <span class="token operator">=</span> <span class="token string">&quot;20px&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        Bottom <span class="token operator">=</span> <span class="token string">&quot;50px&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        Left <span class="token operator">=</span> <span class="token string">&quot;20px&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This gives us a byte array containing the PDF data. You can then save it to a file or return it from an API endpoint.</p><p>Here&#39;s a simple example of returning it from a Minimal API endpoint:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">return</span> Results<span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span>pdf<span class="token punctuation">,</span> <span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;invoice.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Here&#39;s what the document looks like when rendered:</p><figure><img src="https://milanjovanovic.tech/blogs/mnw_151/simple_template.png?imwidth=3840" alt="Simple PDF Template example rendered as PDF" tabindex="0" loading="lazy"><figcaption>Simple PDF Template example rendered as PDF</figcaption></figure><p>This is a simple PDF template example with dynamic templated content.</p><hr><h2 id="enhancements-images-header-footer-styling" tabindex="-1"><a class="header-anchor" href="#enhancements-images-header-footer-styling"><span>Enhancements: Images, Header/Footer, Styling</span></a></h2><p>What are some improvements we can make to this basic setup?</p><p>For example, you can add images to your template using the <code>&lt;img&gt;</code> tag. A simple approach is to use a base64-encoded image directly in the HTML. Note that we&#39;re passing the image data using the <code>LogoBase64</code> variable.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data:image/png;base64,{{LogoBase64}}<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Logo<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span> <span class="token property">max-width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span> <span class="token property">object-fit</span><span class="token punctuation">:</span>contain<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span></span>
<span class="line"><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can also render dynamic headers and footers using PuppeteerSharp&#39;s built-in support. You can define these in the <code>PdfOptions</code> object when generating the PDF. Here&#39;s an example:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token class-name"><span class="token keyword">var</span></span> pdfOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfOptions</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    HeaderTemplate <span class="token operator">=</span></span>
<span class="line">        <span class="token string">@&quot;&quot;&quot;</span>
<span class="line">        &lt;div style=&#39;font-size: 14px; text-align: center; padding: 10px;&#39;&gt;</span>
<span class="line">            &lt;span style=&#39;margin-right: 20px;&#39;&gt;&lt;span class=&#39;title&#39;&gt;&lt;/span&gt;&lt;/span&gt;</span>
<span class="line">            &lt;span&gt;&lt;span class=&#39;date&#39;&gt;&lt;/span&gt;&lt;/span&gt;</span>
<span class="line">        &lt;/div&gt;</span>
<span class="line">        &quot;&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    FooterTemplate <span class="token operator">=</span></span>
<span class="line">        <span class="token string">@&quot;&quot;&quot;</span>
<span class="line">        &lt;div style=&#39;font-size: 14px; text-align: center; padding: 10px;&#39;&gt;</span>
<span class="line">            &lt;span style=&#39;margin-right: 20px;&#39;&gt;Generated on &lt;span class=&#39;date&#39;&gt;&lt;/span&gt;&lt;/span&gt;</span>
<span class="line">            &lt;span&gt;Page &lt;span class=&#39;pageNumber&#39;&gt;&lt;/span&gt; of &lt;span class=&#39;totalPages&#39;&gt;&lt;/span&gt;&lt;/span&gt;</span>
<span class="line">        &lt;/div&gt;</span>
<span class="line">        &quot;&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    DisplayHeaderFooter <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PuppeteerSharp uses CSS classes like <code>title</code>, <code>date</code>, <code>pageNumber</code>, and <code>totalPages</code> to inject dynamic values. This could be different for some other libraries, so check the documentation.</p><p>Lastly, I want to mention that you can use CSS for advanced styling. This can be inline in the HTML or in a separate CSS file. You can also reference external stylesheets if needed, using the <code>&lt;link&gt;</code> tag.</p><p>Here&#39;s a complete example of a more complex template with images, headers, and footers:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Invoice #{{Number}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">      <span class="token comment">/* Omitted for brevity */</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>invoice-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token comment">&lt;!-- Header with Logo --&gt;</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span></span>
<span class="line">        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span> <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span></span>
<span class="line">      <span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>invoice-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Invoice #{{Number}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>invoice-dates<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>Issued:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> {{formatDate IssuedDate}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>Due:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> {{formatDate DueDate}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          {{#if LogoBase64}}</span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data:image/png;base64,{{LogoBase64}}<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Logo<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span> <span class="token property">max-width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span> <span class="token property">object-fit</span><span class="token punctuation">:</span>contain<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span></span>
<span class="line">          <span class="token punctuation">/&gt;</span></span></span>
<span class="line">          {{/if}}</span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span></span>
<span class="line">        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e9ecef<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span></span>
<span class="line">      <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">&lt;!-- Addresses - Side by Side --&gt;</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addresses<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- Seller Address --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>From:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>company-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{SellerAddress.CompanyName}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{SellerAddress.Street}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{SellerAddress.City}}, {{SellerAddress.State}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{SellerAddress.Email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">&lt;!-- Customer Address --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Bill To:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>company-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{CustomerAddress.CompanyName}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{CustomerAddress.Street}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{CustomerAddress.City}}, {{CustomerAddress.State}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{CustomerAddress.Email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">&lt;!-- Items Table --&gt;</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items-section<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Items<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items-table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Price<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Qty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Total<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            {{#each LineItems}}</span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{@index}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{Name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{formatCurrency Price}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{formatNumber Quantity}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{formatCurrency (multiply Price Quantity)}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            {{/each}}</span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">&lt;!-- Totals --&gt;</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totals<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totals-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totals-row subtotal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Subtotal:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{formatCurrency Subtotal}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totals-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Tax:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{formatCurrency 0}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totals-row total<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Total:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{formatCurrency Total}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And the rendered PDF looks like this:</p><figure><img src="https://milanjovanovic.tech/blogs/mnw_151/complex_template.png?imwidth=3840" alt="Complex PDF Template example rendered as PDF with images, headers, and footers" tabindex="0" loading="lazy"><figcaption>Complex PDF Template example rendered as PDF with images, headers, and footers</figcaption></figure><p>This is a complex PDF template example with CSS stylization, tables, images, headers, and footers.</p><hr><h2 id="downloading-binaries-at-application-start" tabindex="-1"><a class="header-anchor" href="#downloading-binaries-at-application-start"><span>Downloading Binaries at Application Start</span></a></h2><p>Here&#39;s a small tip: PuppeteerSharp requires the Chromium browser binaries to be downloaded at runtime. You can do this by calling <code>BrowserFetcher.DownloadAsync()</code> before launching the browser. This ensures the required browser version is available when you run your application.</p><p>A simple way to do this is to add it to your application startup code or a background service:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BrowserSetupService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BackgroundService</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">ExecuteAsync</span><span class="token punctuation">(</span><span class="token class-name">CancellationToken</span> stoppingToken<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> browserFetcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">await</span> browserFetcher<span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then register this service in your <code>Program.cs</code>:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddHostedService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>BrowserSetupService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="performance-considerations" tabindex="-1"><a class="header-anchor" href="#performance-considerations"><span>Performance Considerations</span></a></h2><p>Let&#39;s talk about performance. How fast is this approach and can you use it at scale?</p><p>The first thing to consider is the use a headless browser like Chromium. This can be slower than native PDF libraries, especially for large documents or high concurrency. It also adds <strong>overhead at runtime</strong> since the browser binaries need to be <strong>downloaded</strong> and <strong>launched</strong>.</p><p>You should definitely consider moving this out of your main application. You can use a background service or a separate microservice to handle PDF generation. Event a cloud function can be a good fit if you need to scale.</p><p>But as with anything performance-related, it depends on your specific use case. So measure and profile your application to see if this approach meets your needs.</p><p>Here are some benchmarks I ran on a sample invoice template. It&#39;s nothing scientific, but it gives you an idea of the performance. I didn&#39;t test this with concurrent requests, but rather just the time it takes to generate a single PDF.</p><p><strong>Cold Start</strong>: ~12s spent downloading + launching Chromium</p><p><strong>Warm Run</strong>: ~580ms</p><ul><li>Template + HTML generation: ~13ms</li><li>Browser reuse + rendering: ~550ms</li></ul><hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>HTML + PuppeteerSharp is one of the most pragmatic approaches for PDF reporting in .NET.</p><p>It lets you:</p><ul><li>Design pixel-perfect layouts using familiar web technologies</li><li>Inject dynamic data cleanly with Handlebars.NET</li><li>Output high-quality PDFs with full styling, tables, and images</li></ul><p>And all of this without relying on commercial libraries.</p>`,45)),s("p",null,[n[23]||(n[23]=a("I've also written about ")),t(k,{to:"/milanjovanovic.tech/how-to-easily-create-pdf-documents-in-aspnetcore.html"},{default:p(()=>n[20]||(n[20]=[s("strong",null,"PDF generation",-1)])),_:1,__:[20]}),n[24]||(n[24]=a(" in the past, with libraries like ")),s("a",A,[t(o,{icon:"fas fa-globe"}),n[21]||(n[21]=a("QuestPdf"))]),n[25]||(n[25]=a(" or ")),s("a",N,[t(o,{icon:"fas fa-globe"}),n[22]||(n[22]=a("IronPdf"))]),n[26]||(n[26]=a(". You can take a look at those if you want to compare approaches."))]),n[32]||(n[32]=s("p",null,"The cold start can be expensive, but once warmed up, rendering is fast and reliable. You get total layout control, CSS styling, and even dynamic headers and footers with page numbers and timestamps.",-1)),n[33]||(n[33]=s("p",null,"If you're building internal dashboards, invoice generators, or export endpoints, this approach delivers excellent value.",-1)),n[34]||(n[34]=s("p",null,"If you need pixel-perfect PDF reports in .NET and want full design control, combining Handlebars.NET with PuppeteerSharp is a powerful approach.",-1)),n[35]||(n[35]=s("p",null,"You'll trade some performance and setup cost for flexibility, but for most internal tools, dashboards, or customer-facing reports, it's worth it.",-1)),n[36]||(n[36]=s("hr",null,null,-1)),y(" TODO: add ARTICLE CARD "),t(r,d(g({title:"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)",desc:"Generate PDF reports in .NET using HTML templates and a headless browser. We'll explore Handlebars.NET and PuppeteerSharp, compare alternatives, and analyze performance tradeoffs.",link:"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/pdf-reporting-in-dotnet-with-html-templates-and-puppeteersharp.html",logo:"https://milanjovanovic.tech/profile_favicon.png",background:"rgba(79,70,229,0.2)"})),null,16)])}const I=b(T,[["render",C]]),E=JSON.parse(`{"path":"/milanjovanovic.tech/pdf-reporting-in-dotnet-with-html-templates-and-puppeteersharp.html","title":"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)","lang":"en-US","frontmatter":{"lang":"en-US","title":"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)","description":"Article(s) > PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)","icon":"iconfont icon-csharp","category":["C#","DotNet","Article(s)"],"tag":["blog","milanjovanovic.tech","cs","c#","csharp","dotnet"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)\\",\\"image\\":[\\"https://milanjovanovic.tech/blogs/mnw_151/simple_template.png?imwidth=3840\\",\\"https://milanjovanovic.tech/blogs/mnw_151/complex_template.png?imwidth=3840\\"],\\"datePublished\\":\\"2025-07-19T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Milan Jovanović\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/pdf-reporting-in-dotnet-with-html-templates-and-puppeteersharp.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)"}],["meta",{"property":"og:description","content":"Article(s) > PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://milanjovanovic.tech/blog-covers/mnw_151.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://milanjovanovic.tech/blog-covers/mnw_151.png"}],["meta",{"name":"twitter:image:alt","content":"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)"}],["meta",{"property":"article:author","content":"Milan Jovanović"}],["meta",{"property":"article:tag","content":"dotnet"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:tag","content":"c#"}],["meta",{"property":"article:tag","content":"cs"}],["meta",{"property":"article:tag","content":"milanjovanovic.tech"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-07-19T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)"},{"property":"og:description","content":"PDF Reporting in .NET With HTML Templates and PuppeteerSharp (and it's free)"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/pdf-reporting-in-dotnet-with-html-templates-and-puppeteersharp.html"}]],"prev":"/programming/cs/articles/README.md","date":"2025-07-19T00:00:00.000Z","isOriginal":false,"author":"Milan Jovanović","cover":"https://milanjovanovic.tech/blog-covers/mnw_151.png"},"git":{},"readingTime":{"minutes":6.87,"words":2062},"filePathRelative":"milanjovanovic.tech/pdf-reporting-in-dotnet-with-html-templates-and-puppeteersharp.md","copyright":{"author":"Milan Jovanović"}}`);export{I as comp,E as data};
