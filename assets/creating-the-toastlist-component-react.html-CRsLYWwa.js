import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,d as n,f as t,b as o,t as d,n as k,g as m,e as a,r as e,o as v}from"./app-BVguHYKu.js";const g={},h={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},f={href:"https://github.com/c99rahul/react-toast/blob/main/src/components/ToastList/ToastList.jsx",target:"_blank",rel:"noopener noreferrer"};function y(p,s){const c=e("VPCard"),i=e("SiteInfo"),l=e("VPIcon");return v(),r("div",null,[n("h1",h,[n("a",b,[n("span",null,d(p.$frontmatter.title)+" 관련",1)])]),t(c,k(m({title:"How to create a custom toast component with React",desc:"Create a toast component in your React app that is capable of displaying multiple notifications, customizing their position, and deleting them.",link:"/blog.logrocket.com/how-to-create-custom-toast-component-react/README.md",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16),s[11]||(s[11]=n("nav",{class:"table-of-contents"},[n("ul")],-1)),s[12]||(s[12]=n("hr",null,null,-1)),t(i,{name:"How to create a custom toast component with React",desc:"Create a toast component in your React app that is capable of displaying multiple notifications, customizing their position, and deleting them.",url:"https://blog.logrocket.com/how-to-create-custom-toast-component-react#creating-toastlist-component-react",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"}),s[13]||(s[13]=o(`<p>Let’s define the list component now and add some props. The <code>ToastList</code> component takes in three props: <code>data</code>, <code>position</code>, and <code>removeToast</code>. The <code>data</code> prop represents an array that will contain objects, <code>position</code> determines the placement of the toast list on the page, and <code>removeToast</code> acts as a callback to be provided to the <code>onClose</code> attribute of the <code>Toast</code> component:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/toast/ToastList.jsx"><span>components/toast/ToastList.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Toast <span class="token keyword">from</span> <span class="token string">&quot;../Toast/Toast&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;./ToastList.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">ToastList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> position<span class="token punctuation">,</span> removeToast <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> ToastList<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>To use the <code>position</code> prop, add it to the element with a <code>className</code> of <code>toast-list</code> as shown below:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/toast/ToastList.jsx"><span>components/toast/ToastList.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">ToastList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> position<span class="token punctuation">,</span> removeToast <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span></span>
<span class="line">      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">toast-list toast-list--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>position<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">aria-live</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>assertive<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      ..</span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Whatever position prop is passed into the toast component, it will be added as a class to those elements (recall that we already set the CSS position properties in the CSS file). Because <code>data</code> is an array, we can loop through it directly in the JSX.</p><p>First, import the <code>useRef</code> and <code>useEffect</code> Hooks from React where the <code>useRef</code> will be used to get the reference of the toast list without relying on traditional Web API methods in JavaScript. The <code>useEffect</code> Hook will be called when re-rendering is required:</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Add this after the props destructuring:</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> listRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>As already discussed, the structure of our <code>ToastList</code> is a simple wrapper element with <code>Toast</code> components as its contents. The <code>position</code> prop determines the dynamic CSS classes, which dictate the position of the <code>ToastList</code> on the screen.</p><p>Within its contents, we can iterate over the <code>data</code> prop and include a <code>Toast</code> component for each item in <code>data</code>, ensuring that the appropriate props are passed. For instance, we will assign the <code>removeToast</code> callback to the <code>onClose</code> prop of each <code>Toast</code> component and decide the toast-removal logic later on in the app component:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/toast/ToastList.jsx"><span>components/toast/ToastList.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">ToastList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> position<span class="token punctuation">,</span> removeToast <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    data<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span></span>
<span class="line">        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">toast-list toast-list--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>position<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token attr-name">aria-live</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>assertive<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">toast</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toast</span></span></span>
<span class="line">            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toast<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">message</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toast<span class="token punctuation">.</span>message<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">type</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toast<span class="token punctuation">.</span>type<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">onClose</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">removeToast</span><span class="token punctuation">(</span>toast<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Before proceeding, it’s important to consider the correct ordering and scrolling of toast notifications based on the position of <code>ToastList</code>. While it may appear sufficient at first glance, there are some crucial aspects to address.</p><p>By default, toast notifications are added to the list from top to bottom. Each new notification is placed at the bottom, and if the list exceeds the maximum height limit, a scrollbar appears. However, the scrollbar currently doesn’t adjust and jumps to the latest notification. This can be improved for a better user experience.</p><p>Moreover, when the <code>ToastList</code> is positioned at the bottom-left or bottom-right, the flow of toast notifications should be reversed. In other words, the most recent toast should be displayed at the top rather than the bottom. This simple adjustment is crucial for creating a position-intuitive toast list that enhances the overall user experience.</p><p>To fix the scrolling issue, we can use the <code>Element.scrollTo</code> method from the JavaScript Web API. Additionally, we will use the <code>useRef</code> and <code>useEffect</code> Hooks from the React library. This will allow us to obtain a reference to the toast list without relying on <code>Document.getElementById</code>, and enable us to adjust the scroll whenever there are changes to the <code>position</code> or <code>data</code> props:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/toast/ToastList.jsx"><span>components/toast/ToastList.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">ToastList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> position<span class="token punctuation">,</span> removeToast <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> listRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">handleScrolling</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> isTopPosition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;top-left&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;top-right&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isTopPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      el<span class="token operator">?.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> el<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      el<span class="token operator">?.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">handleScrolling</span><span class="token punctuation">(</span>listRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>position<span class="token punctuation">,</span> data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Additionally, the data reversal process can be simplified by using the spread operator on the <code>data</code> array and subsequently applying the <code>reverse()</code> method. These steps should be performed after checking if the current position of the <code>ToastList</code> is either bottom-left or bottom-right:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/toast/ToastList.jsx"><span>components/toast/ToastList.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">ToastList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data<span class="token punctuation">,</span> position<span class="token punctuation">,</span> removeToast <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> sortedData <span class="token operator">=</span> position<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;bottom&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>data<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>data<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    sortedData<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span></span>
<span class="line">        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">toast-list toast-list--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>position<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token attr-name">aria-live</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>assertive<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>listRef<span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>sortedData<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">toast</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toast</span></span></span>
<span class="line">            <span class="token attr-name">...</span></span>
<span class="line">          <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,19)),n("p",null,[s[3]||(s[3]=a("This concludes our ")),s[4]||(s[4]=n("code",null,"ToastList",-1)),s[5]||(s[5]=a(" component. You can view its ")),n("a",f,[s[0]||(s[0]=a("full code here (")),t(l,{icon:"iconfont icon-github"}),s[1]||(s[1]=n("code",null,"c99rahul/react-toast",-1)),s[2]||(s[2]=a(")"))]),s[6]||(s[6]=a(". If you are wondering what kind of data would be passed to ")),s[7]||(s[7]=n("code",null,"ToastList",-1)),s[8]||(s[8]=a(", here’s the structure of the object array that will be provided to the ")),s[9]||(s[9]=n("code",null,"data",-1)),s[10]||(s[10]=a(" prop:"))]),s[14]||(s[14]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;This is a success toast component&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;This is a failure toast message.&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;failure&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;This is a warning toast message.&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;warning&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const j=u(g,[["render",y]]),x=JSON.parse('{"path":"/blog.logrocket.com/how-to-create-custom-toast-component-react/creating-the-toastlist-component-react.html","title":"Creating the `ToastList` component in React","lang":"en-US","frontmatter":{"lang":"en-US","title":"Creating the `ToastList` component in React","description":"Article(s) > (5/9) How to create a custom toast component with React","category":["Node.js","React.js","Article(s)"],"tag":["blog","blog.logrocket.com","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Creating the `ToastList` component in React\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png\\"],\\"datePublished\\":\\"2023-06-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Uzochukwu Eddie Odozi\\",\\"url\\":\\"https://blog.logrocket.com/author/uzochukwuodozi/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/how-to-create-custom-toast-component-react/creating-the-toastlist-component-react.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Creating the `ToastList` component in React"}],["meta",{"property":"og:description","content":"Article(s) > (5/9) How to create a custom toast component with React"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Creating the `ToastList` component in React"}],["meta",{"property":"article:author","content":"Uzochukwu Eddie Odozi"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2023-06-21T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > (5/9) How to create a custom toast component with React"},{"property":"og:description","content":"Creating the `ToastList` component in React"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/how-to-create-custom-toast-component-react/creating-the-toastlist-component-react.html"}]],"date":"2023-06-21T00:00:00.000Z","isOriginal":false,"author":[{"name":"Uzochukwu Eddie Odozi","url":"https://blog.logrocket.com/author/uzochukwuodozi/"}],"cover":"/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"},"git":{},"readingTime":{"minutes":3.36,"words":1007},"filePathRelative":"blog.logrocket.com/how-to-create-custom-toast-component-react/creating-the-toastlist-component-react.md","copyright":{"author":"Uzochukwu Eddie Odozi"}}');export{j as comp,x as data};
