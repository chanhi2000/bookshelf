import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as s,f as e,b as u,a as f,t as g,n as r,g as d,w as p,e as a,r as i,o as h}from"./app-BVguHYKu.js";const w={},y={id:"frontmatter-title-관련",tabindex:"-1"},S={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},T={href:"https://youtu.be/-L_d-0Emmwc",target:"_blank",rel:"noopener noreferrer"},D={href:"http://linkedin.com/in/stefano-natali-q21",target:"_blank",rel:"noopener noreferrer"},C={class:"hint-container info"},I={href:"https://proandroiddev.com/swipeto-explore-different-implementations-in-jetpack-compose-8c6cd59bbc3c",target:"_blank",rel:"noopener noreferrer"};function V(k,n){const l=i("VPCard"),t=i("router-link"),c=i("SiteInfo"),o=i("VPIcon"),m=i("VidStack");return h(),b("div",null,[s("h1",y,[s("a",S,[s("span",null,g(k.$frontmatter.title)+" 관련",1)])]),e(l,r(d({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",x,[s("ul",null,[s("li",null,[e(t,{to:"#base-implementation-withdetecthorizontaldraggestures"},{default:p(()=>n[0]||(n[0]=[a("Base Implementation withdetectHorizontalDragGestures")])),_:1,__:[0]})]),s("li",null,[e(t,{to:"#implementation-with-swipetodismissbox"},{default:p(()=>n[1]||(n[1]=[a("Implementation with SwipeToDismissBox")])),_:1,__:[1]})]),s("li",null,[e(t,{to:"#resetting-the-swipe-position"},{default:p(()=>n[2]||(n[2]=[a("Resetting the Swipe Position")])),_:1,__:[2]})]),s("li",null,[e(t,{to:"#implementing-swipetoreveal-with-anchoreddraggable"},{default:p(()=>n[3]||(n[3]=[a("Implementing SwipeToReveal with anchoredDraggable")])),_:1,__:[3]})]),s("li",null,[e(t,{to:"#conclusion"},{default:p(()=>n[4]||(n[4]=[a("Conclusion")])),_:1,__:[4]})])])]),n[19]||(n[19]=s("hr",null,null,-1)),e(c,{name:"SwipeTo explore different implementations in Jetpack Compose",desc:"Swipe gesturesprovide a natural way to interact with elements in an app, adding intuitive controls for actions like dismissing items or revealing options.Jetpack Composemakes it easy to implement in various ways. With recent updates of the Compose libraries, new APIs make swipe-based interactions simpler and more maintainable.",url:"https://droidcon.com/swipeto-explore-different-implementations-in-jetpack-compose",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/11/1_3-hO6gU5ICeTlolbGhSQLQ-1024x577.webp"}),n[20]||(n[20]=u(`<p><strong>Swipe gestures</strong>provide a natural way to interact with elements in an app, adding intuitive controls for actions like dismissing items or revealing options.<strong>Jetpack Compose</strong>makes it easy to implement in various ways. With recent updates of the Compose libraries, new APIs make swipe-based interactions simpler and more maintainable.</p><p>In this article, we’ll explore how to implement the<strong>SwipeToDismiss</strong>and<strong>SwipeToReveal</strong>functionality and customize them for various use cases, empowering you to create dynamic, responsive UIs.</p><hr><h2 id="base-implementation-withdetecthorizontaldraggestures" tabindex="-1"><a class="header-anchor" href="#base-implementation-withdetecthorizontaldraggestures"><span>Base Implementation with<code>detectHorizontalDragGestures</code></span></a></h2><p>The first approach for implementing swipe-based interactions is to use<code>detectHorizontalDragGestures</code>, a flexible and foundational solution that allows for full customization. This method enables both<code>SwipeToDismiss</code> and<code>SwipeToReveal</code> functionalities by managing the horizontal drag manually. Below is an example of how to implement this in a composable:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">LibraryBook</span><span class="token punctuation">(</span></span>
<span class="line">    onClickRead<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    onClickDelete<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> offsetX <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        modifier</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">pointerInput</span><span class="token punctuation">(</span>Unit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                detectHorizontalDragGestures <span class="token punctuation">{</span> \\_<span class="token punctuation">,</span> dragAmount <span class="token operator">-&gt;</span></span>
<span class="line">                    offsetX <span class="token operator">=</span> <span class="token punctuation">(</span>offsetX <span class="token operator">+</span> dragAmount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">coerceIn</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">300f</span><span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Actions revealed</span></span>
<span class="line">        <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            horizontalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>End<span class="token punctuation">,</span></span>
<span class="line">            verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> onClickDelete<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Delete<span class="token punctuation">,</span> contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Main content</span></span>
<span class="line">        <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">offset</span> <span class="token punctuation">{</span> <span class="token function">IntOffset</span><span class="token punctuation">(</span>offsetX<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">InternalLibraryBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_rFLlzHqDZGomRcWWCwJUJg.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>In this implementation:</p><ul><li>We maintain an<code>offsetX</code> state to control the horizontal position of the item as it’s dragged.</li><li><code>DetectHorizontalDragGestures</code> handles horizontal dragging, updating<code>offsetX</code> within a specified range to prevent excessive movement.</li><li>The main content is shifted based on<code>offsetX</code>, revealing the delete action as you swipe.</li></ul>`,9)),s("p",null,[n[6]||(n[6]=a("This approach is straightforward, but it provides the flexibility to expand and customize as needed. If you want to dive deeper into this solution,")),s("a",T,[e(o,{icon:"fa-brands fa-youtube"}),n[5]||(n[5]=a("Philipp Lackner’s video"))]),n[7]||(n[7]=a("provides an excellent walkthrough. Philipp shares various Compose techniques in his videos, so consider following him for more useful tips and tutorials."))]),e(m,{src:"youtube/-L_d-0Emmwc"}),n[21]||(n[21]=u(`<hr><h2 id="implementation-with-swipetodismissbox" tabindex="-1"><a class="header-anchor" href="#implementation-with-swipetodismissbox"><span>Implementation with SwipeToDismissBox</span></a></h2><p>With recent updates to the<strong>Compose libraries</strong>, we now have the<code>SwipeToDismissBox</code>, which provides a more structured and controllable approach to swipe-based interactions. This component simplifies the process of implementing dismiss gestures and offers better control over the swipe state. Here’s how it enhances the previous implementation:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">LibraryBook2</span><span class="token punctuation">(</span></span>
<span class="line">    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span></span>
<span class="line">    onClickRead<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    onClickDelete<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> dismissState <span class="token operator">=</span> <span class="token function">rememberSwipeToDismissBoxState</span><span class="token punctuation">(</span>confirmValueChange <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">when</span> <span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            SwipeToDismissBoxValue<span class="token punctuation">.</span>EndToStart <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">onClickDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            SwipeToDismissBoxValue<span class="token punctuation">.</span>StartToEnd <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">onClickRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">SwipeToDismissBox</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier<span class="token punctuation">,</span></span>
<span class="line">        state <span class="token operator">=</span> dismissState<span class="token punctuation">,</span></span>
<span class="line">        backgroundContent <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                horizontalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>SpaceBetween<span class="token punctuation">,</span></span>
<span class="line">                verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// Read action on swipe from start to end</span></span>
<span class="line">                <span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span></span>
<span class="line">                    visible <span class="token operator">=</span> dismissState<span class="token punctuation">.</span>targetValue <span class="token operator">==</span> SwipeToDismissBoxValue<span class="token punctuation">.</span>StartToEnd<span class="token punctuation">,</span></span>
<span class="line">                    enter <span class="token operator">=</span> <span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                        imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>AutoMirrored<span class="token punctuation">.</span>Outlined<span class="token punctuation">.</span>MenuBook<span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Read&quot;</span></span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                <span class="token function">Spacer</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// Delete action on swipe from end to start</span></span>
<span class="line">                <span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span></span>
<span class="line">                    visible <span class="token operator">=</span> dismissState<span class="token punctuation">.</span>targetValue <span class="token operator">==</span> SwipeToDismissBoxValue<span class="token punctuation">.</span>EndToStart<span class="token punctuation">,</span></span>
<span class="line">                    enter <span class="token operator">=</span> <span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                        imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Delete<span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Delete&quot;</span></span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">InternalLibraryBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this updated example:</p><ul><li><code>SwipeToDismissBox</code> manages the swipe state internally, which simplifies the swipe handling compared to the<code>detectHorizontalDragGestures</code> approach.</li><li>The<code>backgroundContent</code>is displayed conditionally based on the swipe direction, using in my case,<code>AnimatedVisibility</code>to smoothly show icons for delete and read actions.</li></ul><hr><h2 id="resetting-the-swipe-position" tabindex="-1"><a class="header-anchor" href="#resetting-the-swipe-position"><span>Resetting the Swipe Position</span></a></h2><p>To reset the swipe position after an action is taken, you can leverage<code>LaunchedEffect</code> to monitor<code>dismissState.currentValue</code>and trigger a reset when a swipe is completed:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">val</span> dismissState <span class="token operator">=</span> <span class="token function">rememberSwipeToDismissBoxState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">LaunchedEffect</span><span class="token punctuation">(</span>dismissState<span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">when</span> <span class="token punctuation">(</span>dismissState<span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        SwipeToDismissBoxValue<span class="token punctuation">.</span>EndToStart <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">onClickDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            dismissState<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        SwipeToDismissBoxValue<span class="token punctuation">.</span>StartToEnd <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">onClickRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            dismissState<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token operator">/</span>\\<span class="token operator">*</span> No action needed \\<span class="token operator">*</span><span class="token operator">/</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_a8NpO5gGS-_NNhNbfLgi5Q.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="implementing-swipetoreveal-with-anchoreddraggable" tabindex="-1"><a class="header-anchor" href="#implementing-swipetoreveal-with-anchoreddraggable"><span>Implementing SwipeToReveal with anchoredDraggable</span></a></h2><p>The<code>SwipeToDismissBox</code> works well for swipe to dismiss interactions, but if we want to implement<code>SwipeToReveal</code> (where swiping reveals options rather than dismissing the item) we need a different approach. I found a powerful alternative with the<code>anchoredDraggable</code> API, as it allows us to define anchor points where specific actions can be triggered, making it ideal for reveal-based interactions.</p><p>Here’s the example of implementing<code>SwipeToReveal</code> with<code>anchoredDraggable</code>:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">enum</span> <span class="token keyword">class</span> SwipeToRevealValue <span class="token punctuation">{</span> Read<span class="token punctuation">,</span> Resting<span class="token punctuation">,</span> Delete <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@OptIn</span><span class="token punctuation">(</span>ExperimentalFoundationApi<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">LibraryBook3</span><span class="token punctuation">(</span></span>
<span class="line">    onClickRead<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line">    onClickDelete<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> density <span class="token operator">=</span> LocalDensity<span class="token punctuation">.</span>current</span>
<span class="line">    <span class="token keyword">val</span> decayAnimationSpec <span class="token operator">=</span> rememberSplineBasedDecay<span class="token operator">&lt;</span>Float<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> dragState <span class="token operator">=</span> remember <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> actionOffset <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>density<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">100</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">AnchoredDraggableState</span><span class="token punctuation">(</span></span>
<span class="line">            initialValue <span class="token operator">=</span> SwipeToRevealValue<span class="token punctuation">.</span>Resting<span class="token punctuation">,</span></span>
<span class="line">            anchors <span class="token operator">=</span> DraggableAnchors <span class="token punctuation">{</span></span>
<span class="line">                SwipeToRevealValue<span class="token punctuation">.</span>Read at <span class="token operator">-</span>actionOffset</span>
<span class="line">                SwipeToRevealValue<span class="token punctuation">.</span>Resting at <span class="token number">0f</span></span>
<span class="line">                SwipeToRevealValue<span class="token punctuation">.</span>Delete at actionOffset</span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            positionalThreshold <span class="token operator">=</span> <span class="token punctuation">{</span> distance <span class="token operator">-&gt;</span> distance \\<span class="token operator">*</span> <span class="token number">0.5f</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            velocityThreshold <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function">with</span><span class="token punctuation">(</span>density<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">100</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            snapAnimationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            decayAnimationSpec <span class="token operator">=</span> decayAnimationSpec<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">val</span> overScrollEffect <span class="token operator">=</span> ScrollableDefaults<span class="token punctuation">.</span><span class="token function">overscrollEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Main content that moves with the swipe</span></span>
<span class="line">        <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">anchoredDraggable</span><span class="token punctuation">(</span></span>
<span class="line">                    dragState<span class="token punctuation">,</span></span>
<span class="line">                    Orientation<span class="token punctuation">.</span>Horizontal<span class="token punctuation">,</span></span>
<span class="line">                    overscrollEffect <span class="token operator">=</span> overScrollEffect</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">overscroll</span><span class="token punctuation">(</span>overScrollEffect<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">offset</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">IntOffset</span><span class="token punctuation">(</span></span>
<span class="line">                        x <span class="token operator">=</span> dragState<span class="token punctuation">.</span><span class="token function">requireOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        y <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">InternalLibraryBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// actions for &quot;Read&quot; and &quot;Delete&quot;</span></span>
<span class="line">        <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">matchParentSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            horizontalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>SpaceBetween<span class="token punctuation">,</span></span>
<span class="line">            verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Read Action</span></span>
<span class="line">            <span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span></span>
<span class="line">                visible <span class="token operator">=</span> dragState<span class="token punctuation">.</span>currentValue <span class="token operator">==</span> SwipeToRevealValue<span class="token punctuation">.</span>Read<span class="token punctuation">,</span></span>
<span class="line">                enter <span class="token operator">=</span> <span class="token function">slideInHorizontally</span><span class="token punctuation">(</span>animationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> it <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                exit <span class="token operator">=</span> <span class="token function">slideOutHorizontally</span><span class="token punctuation">(</span>animationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> it <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> onClickRead<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                        imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>AutoMirrored<span class="token punctuation">.</span>Outlined<span class="token punctuation">.</span>MenuBook<span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Read&quot;</span></span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token function">Spacer</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// Delete Action</span></span>
<span class="line">            <span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span></span>
<span class="line">                visible <span class="token operator">=</span> dragState<span class="token punctuation">.</span>currentValue <span class="token operator">==</span> SwipeToRevealValue<span class="token punctuation">.</span>Delete<span class="token punctuation">,</span></span>
<span class="line">                enter <span class="token operator">=</span> <span class="token function">slideInHorizontally</span><span class="token punctuation">(</span>animationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">-</span>it <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                exit <span class="token operator">=</span> <span class="token function">slideOutHorizontally</span><span class="token punctuation">(</span>animationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">-</span>it <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> onClickDelete<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                        imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Delete<span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Delete&quot;</span></span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_a8NpO5gGS-_NNhNbfLgi5Q-1.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>In this setup:</p><ul><li><code>AnchoredDraggableState</code> allows us to set specific anchor points for different actions. Here, swiping left reveals the delete option, while swiping right reveals the read option.</li><li><code>AnimatedVisibility</code> and<code>slideInHorizontally</code> are used to animate the icons as they are revealed or hidden, creating a smooth interaction.</li></ul><p>This approach work well also in the case of the swipe to dismiss interactions. In this case we need to add a<code>LaunchedEffect</code> to call our callbacks at the right moment:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token function">LaunchedEffect</span><span class="token punctuation">(</span>dragState<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    snapshotFlow <span class="token punctuation">{</span> dragState<span class="token punctuation">.</span>settledValue <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">collectLatest</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">when</span> <span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                SwipeToRevealValue<span class="token punctuation">.</span>Read <span class="token operator">-&gt;</span> <span class="token function">onClickRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                SwipeToRevealValue<span class="token punctuation">.</span>Delete <span class="token operator">-&gt;</span> <span class="token function">onClickDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span></span>
<span class="line">            dragState<span class="token punctuation">.</span><span class="token function">animateTo</span><span class="token punctuation">(</span>SwipeToRevealValue<span class="token punctuation">.</span>Resting<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/1_h8pgP_-k6P19eEVIwBhMag.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>The<code>LaunchedEffect</code> triggers the appropriate action based on the settled value, then resets the swipe position to maintaina clean UI state after each swipe.</p><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>In this article, we’ve explored three powerful approaches to implementing swipe-based interactions in Jetpack Compose:<code>detectHorizontalDragGestures</code>,<code>SwipeToDismissBox</code>, and<code>anchoredDraggable</code>.<br> Each method has its strengths, allowing for a range of customization and control over swipe behaviors.</p><ul><li><code>detectHorizontalDragGestures</code>provides a low-level, customizable approach, ideal if you need control over gesture handling.</li><li><code>SwipeToDismissBox</code>simplifies the setup for dismissible items with built-in state management, making it a great choice for straightforward swipe-to-dismiss interactions.</li><li><code>anchoredDraggable</code>offers precise control over anchored states, making it well-suited for swipe functionalities.</li></ul><p>By choosing the right tool for the job, you can create smooth, intuitive swipe interactions that enhance your app’s UX.<strong>Compose</strong> continues to evolve, and with these options, you can build flexible and engaging interfaces that feel natural and responsive to users.</p>`,28)),s("p",null,[n[11]||(n[11]=a("If you found this article interesting, feel free to")),n[12]||(n[12]=s("strong",null,"follow me",-1)),n[13]||(n[13]=a("for more insightful content on Android development and Jetpack Compose. I publish new articles almost every week. Don’t hesitate to share your comments or reach out to me on")),s("a",D,[s("strong",null,[n[8]||(n[8]=a("LinkedIn (")),e(o,{icon:"fa-brands fa-linkedin"}),n[9]||(n[9]=s("code",null,"stefano-natali-q21",-1)),n[10]||(n[10]=a(")"))])]),n[14]||(n[14]=a(" if you prefer."))]),n[22]||(n[22]=s("p",null,"Have a great day!",-1)),s("div",C,[n[18]||(n[18]=s("p",{class:"hint-container-title"},"Info",-1)),s("p",null,[n[17]||(n[17]=a("This article is previously published on ")),s("a",I,[e(o,{icon:"fa-brands fa-medium"}),n[15]||(n[15]=s("code",null,"proandroiddev",-1)),n[16]||(n[16]=a(")"))])]),e(c,{name:"SwipeTo explore different implementations in Jetpack Compose",desc:"SwipeToDismiss and SwipeToReveal for an Interactive UI",url:"https://proandroiddev.com/swipeto-explore-different-implementations-in-jetpack-compose-8c6cd59bbc3c/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*3-hO6gU5ICeTlolbGhSQLQ.jpeg"})]),f(" TODO: add ARTICLE CARD "),e(l,r(d({title:"SwipeTo explore different implementations in Jetpack Compose",desc:"Swipe gesturesprovide a natural way to interact with elements in an app, adding intuitive controls for actions like dismissing items or revealing options.Jetpack Composemakes it easy to implement in various ways. With recent updates of the Compose libraries, new APIs make swipe-based interactions simpler and more maintainable.",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/swipeto-explore-different-implementations-in-jetpack-compose.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const B=v(w,[["render",V]]),z=JSON.parse('{"path":"/droidcon.com/swipeto-explore-different-implementations-in-jetpack-compose.html","title":"SwipeTo explore different implementations in Jetpack Compose","lang":"en-US","frontmatter":{"lang":"en-US","title":"SwipeTo explore different implementations in Jetpack Compose","description":"Article(s) > SwipeTo explore different implementations in Jetpack Compose","icon":"iconfont icon-jetpack-compose","category":["Java","Kotlin","Android","Jetpack Compose","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android","jetpack-compse"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SwipeTo explore different implementations in Jetpack Compose\\",\\"image\\":[\\"https://droidcon.com/wp-content/uploads/2024/11/1_rFLlzHqDZGomRcWWCwJUJg.gif\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_a8NpO5gGS-_NNhNbfLgi5Q.gif\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_a8NpO5gGS-_NNhNbfLgi5Q-1.gif\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_h8pgP_-k6P19eEVIwBhMag.gif\\"],\\"datePublished\\":\\"2024-11-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Stefano Natali\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/swipeto-explore-different-implementations-in-jetpack-compose.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"SwipeTo explore different implementations in Jetpack Compose"}],["meta",{"property":"og:description","content":"Article(s) > SwipeTo explore different implementations in Jetpack Compose"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/11/1_3-hO6gU5ICeTlolbGhSQLQ-1024x577.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/11/1_3-hO6gU5ICeTlolbGhSQLQ-1024x577.webp"}],["meta",{"name":"twitter:image:alt","content":"SwipeTo explore different implementations in Jetpack Compose"}],["meta",{"property":"article:author","content":"Stefano Natali"}],["meta",{"property":"article:tag","content":"jetpack-compse"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-25T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > SwipeTo explore different implementations in Jetpack Compose"},{"property":"og:description","content":"SwipeTo explore different implementations in Jetpack Compose"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/swipeto-explore-different-implementations-in-jetpack-compose.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-11-25T00:00:00.000Z","isOriginal":false,"author":"Stefano Natali","cover":"https://droidcon.com/wp-content/uploads/2024/11/1_3-hO6gU5ICeTlolbGhSQLQ-1024x577.webp"},"git":{},"readingTime":{"minutes":4.82,"words":1447},"filePathRelative":"droidcon.com/swipeto-explore-different-implementations-in-jetpack-compose.md","copyright":{"author":"Stefano Natali"}}');export{B as comp,z as data};
