import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,d as s,f as t,b as l,t as b,n as c,g as u,w as p,e as a,r,o as f}from"./app-BVguHYKu.js";const h="/bookshelf/assets/image/code-maze.com/angular-material-table/03-Owner-list-component-1080x97.png",w="/bookshelf/assets/image/code-maze.com/angular-material-table/18-Routing-completed_Owner-Module.gif",y="/bookshelf/assets/image/code-maze.com/angular-material-table/19-Mat-Table-768x335.png",q="/bookshelf/assets/image/code-maze.com/angular-material-table/20-Sorting_Functionality.gif",M="/bookshelf/assets/image/code-maze.com/angular-material-table/21-Filtering_Functionality.gif",S="/bookshelf/assets/image/code-maze.com/angular-material-table/22-Paging.gif",x={},C={id:"frontmatter-title-관련",tabindex:"-1"},T={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"table-of-contents"},z={href:"https://code-maze.com/angular-series/",target:"_blank",rel:"noopener noreferrer"},O={href:"https://code-maze.com/net-core-series/",target:"_blank",rel:"noopener noreferrer"},j={class:"hint-container details"},D={href:"https://code-maze.com/angular-material-series/",target:"_blank",rel:"noopener noreferrer"},F={class:"hint-container info"},P={href:"https://github.com/CodeMazeBlog/angular-material-series/tree/material-table",target:"_blank",rel:"noopener noreferrer"},I={class:"table-of-contents"};function H(m,n){const i=r("VPCard"),o=r("router-link"),k=r("SiteInfo"),e=r("VPIcon"),d=r("RouteLink");return f(),v("div",null,[s("h1",C,[s("a",T,[s("span",null,b(m.$frontmatter.title)+" 관련",1)])]),t(i,c(u({title:"Angular.js > Article(s)",desc:"Article(s)",link:"/programming/js-angular/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t(i,c(u({title:"C# > Article(s)",desc:"Article(s)",link:"/programming/cs/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",A,[s("ul",null,[s("li",null,[t(o,{to:"#environment-http-and-owner-module"},{default:p(()=>n[0]||(n[0]=[a("Environment, HTTP and Owner Module")])),_:1,__:[0]}),s("ul",null,[s("li",null,[t(o,{to:"#creating-a-new-owner-module"},{default:p(()=>n[1]||(n[1]=[a("Creating a New Owner Module")])),_:1,__:[1]})])])]),s("li",null,[t(o,{to:"#using-material-table-to-display-data"},{default:p(()=>n[2]||(n[2]=[a("Using Material Table to Display Data")])),_:1,__:[2]})]),s("li",null,[t(o,{to:"#sorting-data-in-material-table"},{default:p(()=>n[3]||(n[3]=[a("Sorting Data in Material Table")])),_:1,__:[3]})]),s("li",null,[t(o,{to:"#filter-functionality-in-material-table"},{default:p(()=>n[4]||(n[4]=[a("Filter Functionality in Material Table")])),_:1,__:[4]})]),s("li",null,[t(o,{to:"#paging-functionality"},{default:p(()=>n[5]||(n[5]=[a("Paging Functionality")])),_:1,__:[5]})]),s("li",null,[t(o,{to:"#conclusion"},{default:p(()=>n[6]||(n[6]=[a("Conclusion")])),_:1,__:[6]})])])]),n[107]||(n[107]=s("hr",null,null,-1)),t(k,{name:"Angular Material Table, Filtering, Sorting, Paging",desc:"In this article we are going to learn about Angular Material Table and its functionalities related to Filtering, Sorting and Paging.",url:"https://code-maze.com/angular-material-table/",logo:"/assets/image/code-maze.com/favicon.png",preview:"/assets/image/angular-material-table/banner.png"}),s("p",null,[n[8]||(n[8]=a("We are going to divide this article into two major parts. The ")),n[9]||(n[9]=s("strong",null,"first part",-1)),n[10]||(n[10]=a(" will consist of creating environment files, HTTP repository service, and creating a new Owner module with the lazy loading feature. As you can see, everything is Angular specific, so we won’t dive too deep into these sections. We already have ")),s("a",z,[t(e,{icon:"fas fa-globe"}),n[7]||(n[7]=a("Angular Series"))]),n[11]||(n[11]=a(" in which we have talked about these topics in great detail. So if you are not familiar with these topics, we strongly recommend reading the mentioned series."))]),s("p",null,[n[13]||(n[13]=a("In our source code, we can find the ")),n[14]||(n[14]=s("code",null,"OwnerAccountServer",-1)),n[15]||(n[15]=a(" folder which contains the entire .NET Core project, which we have created in ")),s("a",O,[t(e,{icon:"fas fa-globe"}),n[12]||(n[12]=a(".NET Core Series"))]),n[16]||(n[16]=a(". In the same folder, we can find the ")),n[17]||(n[17]=s("code",null,"_MySQL_Init_Script",-1)),n[18]||(n[18]=a(" folder which contains a script to create a MySQL database with its tables. Just run that script in the MySQL database and you are ready to go."))]),n[108]||(n[108]=s("p",null,[s("strong",null,"The second part"),a(" will consist of creating a material table and populating that table with data from our server. Furthermore, we are going to create the filter, sorting, and paging functionalities for that table.")],-1)),n[109]||(n[109]=s("p",null,"So, it’s time to start our job.",-1)),s("details",j,[n[19]||(n[19]=s("summary",null,"Details",-1)),t(i,c(u({title:"Getting Started With Angular Material",desc:"In this article, you will learn how to deal with angular material installation and how to prepare project with all the required packages.",link:"/code-maze.com/get-started-angular-material.md",logo:"/assets/image/code-maze.com/favicon.png",background:"rgba(22,22,22,0.2)"})),null,16),t(i,c(u({title:"Angular Material Navigation Menu - Complete Responsive Navigation",desc:"In this article, we are going to learn about Angular Material Navigation, how to create it and make it fully responsive with side bar and main nav menu.",link:"/code-maze.com/angular-material-navigation.md",logo:"/assets/image/code-maze.com/favicon.png",background:"rgba(22,22,22,0.2)"})),null,16),t(i,c(u({title:"Angular Material Table, Filtering, Sorting, Paging",desc:"In this article we are going to learn about Angular Material Table and its functionalities related to Filtering, Sorting and Paging.",link:"/code-maze.com/angular-material-table.md",logo:"/assets/image/code-maze.com/favicon.png",background:"rgba(22,22,22,0.2)"})),null,16),t(i,c(u({title:"Angular Material - Error and Details Pages With Material Components",desc:"In this article we create different pages by using Angular Material Progress Bar, Spinner, Check Box, Card, Select and Expansion Panel Components.",link:"/code-maze.com/angular-material-error-details-pages.md",logo:"/assets/image/code-maze.com/favicon.png",background:"rgba(22,22,22,0.2)"})),null,16),t(i,c(u({title:"Angular Material Form Validation, Input, Datepicker and Modal",desc:"In this article, you will learn how to implement Angular Material Form Validation by using input and datepicker components. We will talk about modals too.",link:"/code-maze.com/angular-material-form-validation.md",logo:"/assets/image/code-maze.com/favicon.png",background:"rgba(22,22,22,0.2)"})),null,16)]),s("p",null,[n[21]||(n[21]=a("For the complete navigation and all the basic instructions of the Angular Material series, check out: ")),s("a",D,[t(e,{icon:"fas fa-globe"}),n[20]||(n[20]=a("Introduction of the Angular Material series."))])]),s("div",F,[n[26]||(n[26]=s("p",{class:"hint-container-title"},"Info",-1)),s("p",null,[n[25]||(n[25]=a("The source code is available at GitHub ")),s("a",P,[n[22]||(n[22]=a("Angular Material Table - Source Code (")),t(e,{icon:"iconfont icon-github"}),n[23]||(n[23]=s("code",null,"CodeMazeBlog/angular-material-series",-1)),n[24]||(n[24]=a(")"))])]),t(k,{name:"CodeMazeBlog/angular-material-series",desc:"This repository contains the code that accompanies Angular Material on Code Maze",url:"https://github.com/CodeMazeBlog/angular-material-series/tree/material-table",logo:"https://avatars.githubusercontent.com/u/29179238?v=4",preview:"https://opengraph.githubassets.com/496c678481d836f8c8a60c1b96e09b30d5d3aacf99e265342ef73afcaf11239e/CodeMazeBlog/angular-material-series"})]),n[110]||(n[110]=s("p",null,"We are going to divide this post into several sections:",-1)),s("nav",I,[s("ul",null,[s("li",null,[t(o,{to:"#environment-http-and-owner-module"},{default:p(()=>n[27]||(n[27]=[a("Environment, HTTP and Owner Module")])),_:1,__:[27]}),s("ul",null,[s("li",null,[t(o,{to:"#creating-a-new-owner-module"},{default:p(()=>n[28]||(n[28]=[a("Creating a New Owner Module")])),_:1,__:[28]})])])]),s("li",null,[t(o,{to:"#using-material-table-to-display-data"},{default:p(()=>n[29]||(n[29]=[a("Using Material Table to Display Data")])),_:1,__:[29]})]),s("li",null,[t(o,{to:"#sorting-data-in-material-table"},{default:p(()=>n[30]||(n[30]=[a("Sorting Data in Material Table")])),_:1,__:[30]})]),s("li",null,[t(o,{to:"#filter-functionality-in-material-table"},{default:p(()=>n[31]||(n[31]=[a("Filter Functionality in Material Table")])),_:1,__:[31]})]),s("li",null,[t(o,{to:"#paging-functionality"},{default:p(()=>n[32]||(n[32]=[a("Paging Functionality")])),_:1,__:[32]})]),s("li",null,[t(o,{to:"#conclusion"},{default:p(()=>n[33]||(n[33]=[a("Conclusion")])),_:1,__:[33]})])])]),n[111]||(n[111]=s("hr",null,null,-1)),n[112]||(n[112]=s("h2",{id:"environment-http-and-owner-module",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#environment-http-and-owner-module"},[s("span",null,"Environment, HTTP and Owner Module")])],-1)),n[113]||(n[113]=s("p",null,"Let’s start with the environment file modifications.",-1)),s("p",null,[n[34]||(n[34]=a("We are going to modify the ")),t(e,{icon:"iconfont icon-typescript"}),n[35]||(n[35]=s("code",null,"environment.prod.ts",-1)),n[36]||(n[36]=a(" file first:"))]),n[114]||(n[114]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> environment <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  production<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  urlAddress<span class="token operator">:</span> <span class="token string">&#39;http://www.ang-material-account-owner.com&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[37]||(n[37]=a("After that, let’s modify the ")),t(e,{icon:"iconfont icon-typescript"}),n[38]||(n[38]=s("code",null,"environment.ts",-1)),n[39]||(n[39]=a(" file:"))]),n[115]||(n[115]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> environment <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  production<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  urlAddress<span class="token operator">:</span> <span class="token string">&#39;http://localhost:5000&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Having these environment files modified, it is time to create a service for sending the HTTP requests towards our server.</p><p>To do that, we are going to create a service file first:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng <span class="token function">service</span> shared/repository <span class="token parameter variable">--skipTests</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>After creation, we have to modify that file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> HttpClient<span class="token punctuation">,</span> HttpHeaders <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> environment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./../../environments/environment&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  providedIn<span class="token operator">:</span> <span class="token string">&#39;root&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token punctuation">(</span>route<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createCompleteRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">,</span> environment<span class="token punctuation">.</span>urlAddress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token punctuation">(</span>route<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createCompleteRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">,</span> environment<span class="token punctuation">.</span>urlAddress<span class="token punctuation">)</span><span class="token punctuation">,</span> body<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token punctuation">(</span>route<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createCompleteRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">,</span> environment<span class="token punctuation">.</span>urlAddress<span class="token punctuation">)</span><span class="token punctuation">,</span> body<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">delete</span> <span class="token operator">=</span> <span class="token punctuation">(</span>route<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createCompleteRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">,</span> environment<span class="token punctuation">.</span>urlAddress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function-variable function">createCompleteRoute</span> <span class="token operator">=</span> <span class="token punctuation">(</span>route<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> envAddress<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>envAddress<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>route<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">  <span class="token keyword">private</span> <span class="token function-variable function">generateHeaders</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      headers<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),s("p",null,[n[41]||(n[41]=a("Excellent. We have prepared our service file. If you want to learn more about environment files, services, and HTTP, you can read that in the ")),t(d,{to:"/code-maze.com/net-core-web-development-part9.html"},{default:p(()=>n[40]||(n[40]=[a("Angular Series Article")])),_:1,__:[40]}),n[42]||(n[42]=a(" which covers all of these topics."))]),s("p",null,[n[43]||(n[43]=a("One more thing that we need to do is to register ")),n[44]||(n[44]=s("code",null,"HttpClientModule",-1)),n[45]||(n[45]=a(" in the ")),t(e,{icon:"iconfont icon-typescript"}),n[46]||(n[46]=s("code",null,"app.module.ts",-1)),n[47]||(n[47]=a(" file:"))]),n[116]||(n[116]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    …</span>
<span class="line">    HttpClientModule</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creating-a-new-owner-module" tabindex="-1"><a class="header-anchor" href="#creating-a-new-owner-module"><span>Creating a New Owner Module</span></a></h3><p>Let’s create a new Owner module, and the routes for that module as well:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng module owner <span class="token parameter variable">--module</span> app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We are going to register this module into the main routing module but in such a way to support the lazy loading feature:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> routes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">loadChildren</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./owner/owner.module&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>m <span class="token operator">=&gt;</span> m<span class="token punctuation">.</span>OwnerModule<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> </span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> redirectTo<span class="token operator">:</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span> pathMatch<span class="token operator">:</span> <span class="token string">&#39;full&#39;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),s("p",null,[n[49]||(n[49]=a("To read more about multiple modules and lazy loading in Angular, you can visit an article on the following link ")),t(d,{to:"/code-maze.com/net-core-web-development-part10.html"},{default:p(()=>n[48]||(n[48]=[a("Lazy Loading in Angular")])),_:1,__:[48]}),n[50]||(n[50]=a("."))]),n[117]||(n[117]=l(`<p>Right now, we have to create a new component to show the list of all the owners from the database:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng component owner/owner-list <span class="token parameter variable">--skipTests</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="`+h+`" alt="owner list component - angular material table" tabindex="0" loading="lazy"><figcaption>owner list component - angular material table</figcaption></figure><p>We need to have routing for the components inside this module, so let’s create a new routing module for the Owner module components:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng module owner/owner-routing <span class="token parameter variable">--module</span> owner</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And let’s modify that module file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> CommonModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Routes<span class="token punctuation">,</span> RouterModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OwnerListComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../owner-list/owner-list.component&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> routes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;owners&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> OwnerListComponent <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    CommonModule<span class="token punctuation">,</span></span>
<span class="line">    RouterModule<span class="token punctuation">.</span><span class="token function">forChild</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    RouterModule</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">OwnerRoutingModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)),s("p",null,[n[51]||(n[51]=a("Finally, to make all this to work, we need to modify our routes in the ")),t(e,{icon:"fa-brands fa-html5"}),n[52]||(n[52]=s("code",null,"sidenav-list.component.html",-1)),n[53]||(n[53]=a(" file:"))]),n[118]||(n[118]=l(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">mat-list-item</span> <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/owner/owners<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSidenavClose()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-icon</span><span class="token punctuation">&gt;</span></span>assignment_ind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-icon</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav-caption<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Owner Actions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[54]||(n[54]=a("And the ")),t(e,{icon:"fa-brands fa-html5"}),n[55]||(n[55]=s("code",null,"header.component.html",-1)),n[56]||(n[56]=a(" file:"))]),n[119]||(n[119]=l(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/owner/owners<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Owner Actions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That is it. We can confirm now that our routing settings work as it supposed to:</p><figure><img src="`+w+'" alt="routing completed - angular material table" tabindex="0" loading="lazy"><figcaption>routing completed - angular material table</figcaption></figure><p>Excellent. Right now, we can dedicate our work to fetch some data from the database and show them in the material table component.</p><hr><h2 id="using-material-table-to-display-data" tabindex="-1"><a class="header-anchor" href="#using-material-table-to-display-data"><span>Using Material Table to Display Data</span></a></h2>',6)),s("p",null,[n[57]||(n[57]=a("Because we have created another module in our Angular app, we need to import the ")),n[58]||(n[58]=s("code",null,"Material module",-1)),n[59]||(n[59]=a(" file inside the ")),t(e,{icon:"iconfont icon-typescript"}),n[60]||(n[60]=s("code",null,"owner.module.ts",-1)),n[61]||(n[61]=a(" file:"))]),n[120]||(n[120]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MaterialModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./../material/material.module&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    …</span>
<span class="line">    MaterialModule</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once we create the Shared module, we will fix this code repetition (MaterialModule inside the App module and Owner module).</p>`,2)),s("p",null,[n[62]||(n[62]=a("For now, let’s continue by creating the ")),n[63]||(n[63]=s("code",null,"_interface",-1)),n[64]||(n[64]=a(" folder and inside it the ")),t(e,{icon:"iconfont icon-typescript"}),n[65]||(n[65]=s("code",null,"owner.model.ts",-1)),n[66]||(n[66]=a(" file:"))]),n[121]||(n[121]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Owner</span><span class="token punctuation">{</span></span>
<span class="line">    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    dateOfBirth<span class="token operator">:</span> Date<span class="token punctuation">;</span></span>
<span class="line">    address<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[67]||(n[67]=a("Because we want to use the material table component, we need to register its own module in the ")),t(e,{icon:"iconfont icon-typescript"}),n[68]||(n[68]=s("code",null,"material.module.ts",-1)),n[69]||(n[69]=a(" file:"))]),n[122]||(n[122]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatTableModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/table&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatTableModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatTableModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[70]||(n[70]=a("Then, let’s modify the ")),t(e,{icon:"fa-brands fa-html5"}),n[71]||(n[71]=s("code",null,"owner-list.component.html",-1)),n[72]||(n[72]=a(" file:"))]),n[123]||(n[123]=l(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">mat-table</span> <span class="token attr-name">[dataSource]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">matColumnDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span><span class="token punctuation">&gt;</span></span> Name <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">mat-cell</span> <span class="token attr-name">*matCellDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{element.name}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">matColumnDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dateOfBirth<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span><span class="token punctuation">&gt;</span></span> Date of Birth <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">mat-cell</span> <span class="token attr-name">*matCellDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{element.dateOfBirth | date}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">matColumnDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span><span class="token punctuation">&gt;</span></span> Address <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">mat-cell</span> <span class="token attr-name">*matCellDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{element.address}} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">matColumnDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>details<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span><span class="token punctuation">&gt;</span></span> Details <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">mat-cell</span> <span class="token attr-name">*matCellDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">mat-icon-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>redirectToDetails(element.id)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mat-18<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>reorder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-icon</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">matColumnDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span><span class="token punctuation">&gt;</span></span> Update <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">mat-cell</span> <span class="token attr-name">*matCellDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">mat-icon-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>redirectToUpdate(element.id)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mat-18<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>system_update<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-icon</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">matColumnDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span><span class="token punctuation">&gt;</span></span> Delete <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">mat-cell</span> <span class="token attr-name">*matCellDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">mat-icon-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>redirectToDelete(element.id)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mat-18<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-icon</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">mat-header-row</span> <span class="token attr-name">*matHeaderRowDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>displayedColumns<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">mat-row</span> <span class="token attr-name">*matRowDef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let row; columns: displayedColumns;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>mat-table</code> element transforms this table into a material one. With the <code>dataSource</code> attribute, we provide a data source for our table. Inside every <code>ng-container</code> tag, we define the column definition and the value to be displayed. It is very important to match the <code>matColumnDef</code> value with the property name of our <code>Owner</code> interface.</p>`,2)),s("p",null,[n[73]||(n[73]=a("Finally, in the last two ")),n[74]||(n[74]=s("code",null,"tr",-1)),n[75]||(n[75]=a(" tags, we define an order for our header columns and the row definitions. So, what we need to do right now is to create our ")),n[76]||(n[76]=s("code",null,"datasource",-1)),n[77]||(n[77]=a(" and ")),n[78]||(n[78]=s("code",null,"displayedColumns",-1)),n[79]||(n[79]=a(" properties in the ")),t(e,{icon:"iconfont icon-typescript"}),n[80]||(n[80]=s("code",null,"ownerlist.component.ts",-1)),n[81]||(n[81]=a(" file:"))]),n[124]||(n[124]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> RepositoryService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./../../shared/repository.service&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatTableDataSource <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/table&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Owner <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../_interface/owner.model&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  selector<span class="token operator">:</span> <span class="token string">&#39;app-owner-list&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./owner-list.component.html&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./owner-list.component.css&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">OwnerListComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> displayedColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dateOfBirth&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;address&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;details&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;delete&#39;</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">public</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatTableDataSource<span class="token operator">&lt;</span>Owner<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> repoService<span class="token operator">:</span> RepositoryService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAllOwners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">getAllOwners</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>repoService<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&#39;api/owner&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>data <span class="token operator">=</span> res <span class="token keyword">as</span> Owner<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">redirectToDetails</span> <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">redirectToUpdate</span> <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">redirectToDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If we change the order of elements inside the <code>displayedColumns</code> array, it will change the order of the columns inside our table.</p>`,2)),s("p",null,[n[82]||(n[82]=a("Right now, if we start our application and navigate to the Owner Actions menu, we are going to see a populated material table. But we are missing some styles, so let’s add those in the ")),t(e,{icon:"fa-brands fa-css3-alt"}),n[83]||(n[83]=s("code",null,"owner-list.component.css",-1)),n[84]||(n[84]=a(" file:"))]),n[125]||(n[125]=l(`<div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">table</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">overflow-y</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">min-width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">th.mat-header-cell</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">max-width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now we should have a better-styled table:</p><figure><img src="`+y+`" alt="mat table - angular material table" tabindex="0" loading="lazy"><figcaption>mat table - angular material table</figcaption></figure><hr><h2 id="sorting-data-in-material-table" tabindex="-1"><a class="header-anchor" href="#sorting-data-in-material-table"><span>Sorting Data in Material Table</span></a></h2><p>We want to add the sorting functionality to our table, and for that purpose, we are going to use the <code>matSort</code> directive on the <code>table</code> tag. Moreover, we need to place the <code>mat-sort-header</code> directive for each header cell that will trigger sorting.</p><p>So, let’s do that now.</p><p>Modifying the <code>table</code> tag is going to be our first task:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">mat-table</span> <span class="token attr-name">[dataSource]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">matSort</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then, we are going to add the <code>mat-sort-header</code> directive to the <code>Name</code>, <code>DateOfBirth</code>, and <code>Address</code> tags:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span> <span class="token attr-name">mat-sort-header</span><span class="token punctuation">&gt;</span></span> Name <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">...</span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span> <span class="token attr-name">mat-sort-header</span><span class="token punctuation">&gt;</span></span> Date of Birth <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">...</span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">mat-header-cell</span> <span class="token attr-name">*matHeaderCellDef</span> <span class="token attr-name">mat-sort-header</span><span class="token punctuation">&gt;</span></span> Address <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)),s("p",null,[n[85]||(n[85]=a("To make sorting functionality up and running, we need to modify the ")),t(e,{icon:"iconfont icon-typescript"}),n[86]||(n[86]=s("code",null,"owner-list.component.ts",-1)),n[87]||(n[87]=a(" file as well:"))]),n[126]||(n[126]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit<span class="token punctuation">,</span> ViewChild<span class="token punctuation">,</span> AfterViewInit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatSort <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/sort&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">OwnerListComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span><span class="token punctuation">,</span> AfterViewInit <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> displayedColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dateOfBirth&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;address&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;details&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">public</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatTableDataSource<span class="token operator">&lt;</span>Owner<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">ViewChild</span></span><span class="token punctuation">(</span>MatSort<span class="token punctuation">)</span> sort<span class="token operator">:</span> MatSort<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> repoService<span class="token operator">:</span> RepositoryService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAllOwners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngAfterViewInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>sort <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[88]||(n[88]=a("Lastly, we need to add the ")),n[89]||(n[89]=s("code",null,"MatSortModule",-1)),n[90]||(n[90]=a(" inside of the ")),t(e,{icon:"iconfont icon-typescript"}),n[91]||(n[91]=s("code",null,"material.module.ts",-1)),n[92]||(n[92]=a(" file:"))]),n[127]||(n[127]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatSortModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/sort&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatSortModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatSortModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, we can check our result:</p><figure><img src="`+q+`" alt="Sorting mat table" tabindex="0" loading="lazy"><figcaption>Sorting mat table</figcaption></figure><p>By default, sorting starts with ascending order first and then descending. We can change that behavior by adding the <code>matSortStart</code> attribute to <code>desc</code> next to the <code>matSort</code> directive:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">mat-table</span> <span class="token attr-name">[dataSource]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">matSort</span> <span class="token attr-name">matSortStart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>desc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If we don’t want to use <code>MatTableDataSource</code> for sorting, but to provide our own sorting logic, we can use the <code>(matSortChange)</code> event to receive the active sorting column and the sorting order as well:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">mat-table</span> <span class="token attr-name">[dataSource]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">matSort</span> <span class="token attr-name">(matSortChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customSort($event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Once we click on the name column it will generate the following JSON object (Of course, don’t forget to add the function in the .ts file):</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  active<span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">  direction<span class="token operator">:</span> <span class="token string">&quot;asc&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ol><li>active:&quot;name&quot;</li><li>direction:&quot;asc&quot;</li><li><strong>proto</strong>:Object</li></ol></blockquote><hr><h2 id="filter-functionality-in-material-table" tabindex="-1"><a class="header-anchor" href="#filter-functionality-in-material-table"><span>Filter Functionality in Material Table</span></a></h2><p>For this functionality, we need to provide our own input field and a custom function to filter our data. Only then, we can use <code>MatTableDataSource</code>’s filter property. To implement filtering, we are going to add the following code right above our table in the HTML file:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">fxLayout</span> <span class="token attr-name">fxLayoutAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-form-field</span> <span class="token attr-name">fxFlex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40%<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">matInput</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(keyup)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doFilter($event.target.value)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Filter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And then to write the following function in the component file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">public</span> <span class="token function-variable function">doFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>filter <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16)),s("p",null,[n[93]||(n[93]=a("Finally, because we are using the ")),n[94]||(n[94]=s("code",null,"matInput",-1)),n[95]||(n[95]=a(" directive to transform regular input into the material input field, we need to register its modules inside the ")),t(e,{icon:"iconfont icon-typescript"}),n[96]||(n[96]=s("code",null,"material.module.ts",-1)),n[97]||(n[97]=a(" file:"))]),n[128]||(n[128]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatFormFieldModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/form-field&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatInputModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/input&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatFormFieldModule<span class="token punctuation">,</span></span>
<span class="line">    MatInputModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatFormFieldModule<span class="token punctuation">,</span></span>
<span class="line">    MatInputModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As we can see from the HTML file, we are using the <code>fxLayout</code> directive. But, because this component is part of a new Owner module, we need to import <code>FlexLayoutModule</code> into the Owner module file as well:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FlexLayoutModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/flex-layout&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    FlexLayoutModule</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Of course, this code repetition will be solved as well as soon as we create a Shared module.</p><p>Excellent.</p><p>Now we can inspect the result:</p><figure><img src="`+M+`" alt="filter mat table - angular material table" tabindex="0" loading="lazy"><figcaption>filter mat table - angular material table</figcaption></figure><hr><h2 id="paging-functionality" tabindex="-1"><a class="header-anchor" href="#paging-functionality"><span>Paging Functionality</span></a></h2><p>To implement paging with a material table, we need to use a <code>&lt;mat-paginator&gt;</code> bellow our table. So, let’s start implementation by adding <code>MatPaginatorModule</code> inside the <code>Material</code> module:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>MatPaginatorModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/paginator&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatPaginatorModule<span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatPaginatorModule<span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, let’s add <code>mat-paginator</code> inside the HTML file:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-paginator</span> <span class="token attr-name">[pageSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[pageSizeOptions]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[2, 4, 6, 10, 20]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-paginator</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,13)),s("p",null,[n[98]||(n[98]=a("And finally, let’s modify the ")),t(e,{icon:"iconfont icon-typescript"}),n[99]||(n[99]=s("code",null,"owner-list.component.ts",-1)),n[100]||(n[100]=a(" file:"))]),n[129]||(n[129]=l(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatPaginator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/paginator&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">  <span class="token decorator"><span class="token at operator">@</span><span class="token function">ViewChild</span></span><span class="token punctuation">(</span>MatPaginator<span class="token punctuation">)</span> paginator<span class="token operator">:</span> MatPaginator<span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> repoService<span class="token operator">:</span> RepositoryService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAllOwners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngAfterViewInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>sort <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sort<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>paginator <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>paginator<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After these changes, we should have the following result:</p><figure><img src="`+S+`" alt="paging - angular material table" tabindex="0" loading="lazy"><figcaption>paging - angular material table</figcaption></figure><p>If we want to write our custom pagination logic, we should use the <code>(page)</code> output event:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-paginator</span> <span class="token attr-name">[pageSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[pageSizeOptions]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[2, 4, 6, 10, 20]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(page)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pageChanged($event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-paginator</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,5)),s("p",null,[n[102]||(n[102]=a("For the custom pagination logic, you will have to write a pagination logic on the Web API part. We have a great article that explains ")),t(d,{to:"/code-maze.com/paging-aspnet-core-webapi.html"},{default:p(()=>n[101]||(n[101]=[a("How to Write Paging in ASP.NET Core Web API")])),_:1,__:[101]}),n[103]||(n[103]=a(". So, feel free to read it and acquire a better knowledge of the server-side paging as well."))]),n[130]||(n[130]=s("hr",null,null,-1)),n[131]||(n[131]=s("h2",{id:"conclusion",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#conclusion"},[s("span",null,"Conclusion")])],-1)),n[132]||(n[132]=s("p",null,"So, that’s it. Now we have our material table with all the features like sorting, paging, and filtering data.",-1)),n[133]||(n[133]=s("p",null,"In this article, we have learned:",-1)),n[134]||(n[134]=s("ul",null,[s("li",null,"How to use Environment files, HTTP client module, and Lazy Loading feature"),s("li",null,"To create a material table"),s("li",null,"To apply sorting, filtering, and pagination to the material table")],-1)),s("p",null,[n[105]||(n[105]=a("In the next article, we are going to ")),t(d,{to:"/code-maze.com/angular-material-error-details-pages.html"},{default:p(()=>n[104]||(n[104]=[a("create error pages by focusing on the material components")])),_:1,__:[104]}),n[106]||(n[106]=a(" and to create owner details component."))])])}const L=g(x,[["render",H]]),B=JSON.parse('{"path":"/code-maze.com/angular-material-table.html","title":"Angular Material Table, Filtering, Sorting, Paging","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Angular Material Table, Filtering, Sorting, Paging","description":"Article(s) > Angular Material Table, Filtering, Sorting, Paging","icon":"fa-brands fa-angular","category":["Node.js","Angular.js","C#","Article(s)"],"tag":["blog","code-maze.com","csharp","node","nodejs","node-js","angular","angularjs","angular-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Angular Material Table, Filtering, Sorting, Paging\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/03-Owner-list-component-1080x97.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/18-Routing-completed_Owner-Module.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/19-Mat-Table-768x335.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/20-Sorting_Functionality.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/21-Filtering_Functionality.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/22-Paging.gif\\"],\\"datePublished\\":\\"2021-01-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/code-maze.com/angular-material-table.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Angular Material Table, Filtering, Sorting, Paging"}],["meta",{"property":"og:description","content":"Article(s) > Angular Material Table, Filtering, Sorting, Paging"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/banner.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-table/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Angular Material Table, Filtering, Sorting, Paging"}],["meta",{"property":"article:tag","content":"angular-js"}],["meta",{"property":"article:tag","content":"angularjs"}],["meta",{"property":"article:tag","content":"angular"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:tag","content":"code-maze.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2021-01-20T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Angular Material Table, Filtering, Sorting, Paging"},{"property":"og:description","content":"Angular Material Table, Filtering, Sorting, Paging"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/code-maze.com/angular-material-table.html"}]],"prev":"/programming/js-angular/articles/README.md","date":"2021-01-20T00:00:00.000Z","isOriginal":false,"cover":"/assets/image/code-maze.com/angular-material-table/banner.png"},"git":{},"readingTime":{"minutes":9.67,"words":2902},"filePathRelative":"code-maze.com/angular-material-table.md"}');export{L as comp,B as data};
