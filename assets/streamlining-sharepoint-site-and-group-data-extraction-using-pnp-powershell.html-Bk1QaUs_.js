import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,d as t,f as n,b as g,a as m,t as v,n as o,g as l,w as s,r as p,o as b,e as i}from"./app-BVguHYKu.js";const P={},S={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},w={class:"table-of-contents"};function y(c,e){const r=p("VPCard"),a=p("router-link"),d=p("SiteInfo");return b(),u("div",null,[t("h1",S,[t("a",f,[t("span",null,v(c.$frontmatter.title)+" 관련",1)])]),n(r,o(l({title:"Powershell > Article(s)",desc:"Article(s)",link:"/programming/pwsh/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n(r,o(l({title:"SharePoint > Article(s)",desc:"Article(s)",link:"/tool/sharepoint/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t("nav",w,[t("ul",null,[t("li",null,[n(a,{to:"#streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell"},{default:s(()=>e[0]||(e[0]=[i("Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell")])),_:1,__:[0]})]),t("li",null,[n(a,{to:"#the-script-breakdown"},{default:s(()=>e[1]||(e[1]=[i("The Script Breakdown")])),_:1,__:[1]})]),t("li",null,[n(a,{to:"#step-by-step-guide"},{default:s(()=>e[2]||(e[2]=[i("Step-by-Step Guide")])),_:1,__:[2]}),t("ul",null,[t("li",null,[n(a,{to:"#_1-prompt-for-the-site-url"},{default:s(()=>e[3]||(e[3]=[i("1. Prompt for the Site URL")])),_:1,__:[3]})]),t("li",null,[n(a,{to:"#_2-establish-connection"},{default:s(()=>e[4]||(e[4]=[i("2. Establish Connection")])),_:1,__:[4]})]),t("li",null,[n(a,{to:"#_3-fetch-groups"},{default:s(()=>e[5]||(e[5]=[i("3. Fetch Groups")])),_:1,__:[5]})]),t("li",null,[n(a,{to:"#_4-recursively-retrieve-subsites"},{default:s(()=>e[6]||(e[6]=[i("4. Recursively Retrieve Subsites")])),_:1,__:[6]})]),t("li",null,[n(a,{to:"#_5-connect-to-each-subsite"},{default:s(()=>e[7]||(e[7]=[i("5. Connect to Each Subsite")])),_:1,__:[7]})]),t("li",null,[n(a,{to:"#_6-export-data-to-csv"},{default:s(()=>e[8]||(e[8]=[i("6. Export Data to CSV")])),_:1,__:[8]})]),t("li",null,[n(a,{to:"#_7-error-handling"},{default:s(()=>e[9]||(e[9]=[i("7. Error Handling")])),_:1,__:[9]})])])]),t("li",null,[n(a,{to:"#conclusion"},{default:s(()=>e[10]||(e[10]=[i("Conclusion")])),_:1,__:[10]})])])]),e[11]||(e[11]=t("hr",null,null,-1)),n(d,{name:"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell",desc:"This blog post explains how to use PnP PowerShell to automate the extraction of SharePoint site and group data, including site groups, subsites, and pages. It provides a step-by-step guide on how to connect to a SharePoint site, gather data recursively from subsites, and export the results to a CSV file for analysis. Ideal for SharePoint administrators looking to streamline auditing and management tasks.",url:"https://c-sharpcorner.com/article/streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell",logo:"https://c-sharpcorner.com/images/layout/favicon-icon-dark.svg",preview:"https://c-sharpcorner.com/images/csharp-corner-new.png"}),e[12]||(e[12]=g(`<h2 id="streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell" tabindex="-1"><a class="header-anchor" href="#streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell"><span>Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell</span></a></h2><p>Managing and auditing SharePoint sites often requires extracting information like site groups and pages across a hierarchy of subsites. Doing this manually can be cumbersome, but leveraging PnP PowerShell can simplify and automate the process. In this blog post, we explore a script to connect to a SharePoint site, fetch its groups, and recursively gather data about subsites and their pages, exporting the results to a CSV file for easy analysis.</p><div class="hint-container info"><p class="hint-container-title">What Does This Script Do?</p><ul><li><strong>Connect to SharePoint</strong>: Prompts the user to input a site URL and establishes an interactive connection using PnP PowerShell.</li><li><strong>Fetch Site Groups</strong>: Retrieves the groups associated with the given site URL.</li><li><strong>Explore Subsites</strong>: Recursively iterates through all subsites of the primary site.</li><li><strong>Export Data</strong>: Exports the collected data about site pages to a CSV file for further processing.</li></ul></div><hr><h2 id="the-script-breakdown" tabindex="-1"><a class="header-anchor" href="#the-script-breakdown"><span>The Script Breakdown</span></a></h2><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">$SiteURL = Read-Host &quot;Enter Site URL:&quot;</span>
<span class="line">$CSVFile = &quot;C:\\Temp\\Sites.csv&quot;</span>
<span class="line">Try {</span>
<span class="line">    Connect-PnPOnline -Url $SiteURL -Interactive</span>
<span class="line">    Write-Host $SiteURL</span>
<span class="line"></span>
<span class="line">    Get-PnPSiteGroup -Site $SiteURL</span>
<span class="line">    Write-Host $groups</span>
<span class="line">    $WebsCollection = Get-PnPSubWeb -Recurse</span>
<span class="line">    $PagesDataColl = @()</span>
<span class="line">    ForEach ($Web in $WebsCollection) {</span>
<span class="line">        Write-Host $Web.Url</span>
<span class="line">        Connect-PnPOnline -Url $Web.Url -Interactive</span>
<span class="line">   }</span>
<span class="line">   $PagesDataColl</span>
<span class="line">   $PagesDataColl | Export-Csv -Path $CSVFile -NoTypeInformation</span>
<span class="line">}</span>
<span class="line">catch {</span>
<span class="line">    write-host &quot;Error: $($_.Exception.Message)&quot; -foregroundcolor Red</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="step-by-step-guide" tabindex="-1"><a class="header-anchor" href="#step-by-step-guide"><span>Step-by-Step Guide</span></a></h2><h3 id="_1-prompt-for-the-site-url" tabindex="-1"><a class="header-anchor" href="#_1-prompt-for-the-site-url"><span>1. Prompt for the Site URL</span></a></h3><p>The script begins by asking the user to provide the SharePoint site URL:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">$SiteURL = Read-Host &quot;Enter Site URL:&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-establish-connection" tabindex="-1"><a class="header-anchor" href="#_2-establish-connection"><span>2. Establish Connection</span></a></h3><p>Using the PnP PowerShell module, the script connects to the specified site interactively:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">Connect-PnPOnline -Url $SiteURL -Interactive</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-fetch-groups" tabindex="-1"><a class="header-anchor" href="#_3-fetch-groups"><span>3. Fetch Groups</span></a></h3><p>The <code>Get-PnPSiteGroup</code> command retrieves all the groups for the specified site:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">Get-PnPSiteGroup -Site $SiteURL</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-recursively-retrieve-subsites" tabindex="-1"><a class="header-anchor" href="#_4-recursively-retrieve-subsites"><span>4. Recursively Retrieve Subsites</span></a></h3><p>The script uses <code>Get-PnPSubWeb -Recurse</code> to gather all subsites under the main site:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">$WebsCollection = Get-PnPSubWeb -Recurse</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-connect-to-each-subsite" tabindex="-1"><a class="header-anchor" href="#_5-connect-to-each-subsite"><span>5. Connect to Each Subsite</span></a></h3><p>For each subsite retrieved, the script connects interactively:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">ForEach ($Web in $WebsCollection) {</span>
<span class="line">    Connect-PnPOnline -Url $Web.Url -Interactive</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-export-data-to-csv" tabindex="-1"><a class="header-anchor" href="#_6-export-data-to-csv"><span>6. Export Data to CSV</span></a></h3><p>The collected data is stored in an array and exported to a CSV file:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">$PagesDataColl | Export-Csv -Path $CSVFile -NoTypeInformation</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_7-error-handling" tabindex="-1"><a class="header-anchor" href="#_7-error-handling"><span>7. Error Handling</span></a></h3><p>The script wraps its operations in a <code>Try-Catch</code> block to gracefully handle errors:</p><div class="language-pwsh line-numbers-mode" data-highlighter="prismjs" data-ext="pwsh"><pre><code class="language-pwsh"><span class="line">catch {</span>
<span class="line">    write-host &quot;Error: $($_.Exception.Message)&quot; -foregroundcolor Red</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">Use Case Scenarios</p><ul><li><strong>Site Audit</strong>: Quickly gather information about site groups and subsites for compliance or documentation.</li><li><strong>Permission Management</strong>: Analyze group memberships and access levels across multiple sites.</li><li><strong>Data Export</strong>: Generate reports on SharePoint site structure and metadata for stakeholders.</li></ul></div><div class="hint-container tip"><p class="hint-container-title">Customizing the Script</p><ul><li>Add Metadata Extraction: Extend the script to retrieve metadata about subsites, such as creation dates or owners.</li><li>Fetch Page Information: Implement logic to extract details about pages within each subsite.</li><li>Integrate Logging: Save logs to a text file for debugging or record-keeping.</li></ul></div><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>This PnP PowerShell script is a powerful tool for SharePoint administrators, simplifying the process of auditing and managing site data. By leveraging automation, it saves time and ensures accurate, comprehensive reporting.</p><p>Try this script in your SharePoint environment and let us know how it improves your workflows!</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>Ensure you have the PnP PowerShell module installed and the necessary permissions to execute this script in your SharePoint environment.</p></div>`,36)),m(" TODO: add ARTICLE CARD "),n(r,o(l({title:"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell",desc:"This blog post explains how to use PnP PowerShell to automate the extraction of SharePoint site and group data, including site groups, subsites, and pages. It provides a step-by-step guide on how to connect to a SharePoint site, gather data recursively from subsites, and export the results to a CSV file for analysis. Ideal for SharePoint administrators looking to streamline auditing and management tasks.",link:"https://chanhi2000.github.io/bookshelf/c-sharpcorner.com/streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell.html",logo:"https://c-sharpcorner.com/images/layout/favicon-icon-dark.svg",background:"rgba(0,121,199,0.2)"})),null,16)])}const E=h(P,[["render",y]]),C=JSON.parse('{"path":"/c-sharpcorner.com/streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell.html","title":"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell","lang":"en-US","frontmatter":{"lang":"en-US","title":"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell","description":"Article(s) > Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell","icon":"iconfont icon-powershell","category":["Powershell","Microsoft","SharePoint","Article(s)"],"tag":["blog","c-sharpcorner.com","pwsh","powershell","tool","microsoft","sharepoint","share-point"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell\\",\\"image\\":[\\"https://c-sharpcorner.com/images/csharp-corner-new.png\\"],\\"datePublished\\":\\"2025-08-19T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Keyur Pandya\\",\\"url\\":\\"https://c-sharpcorner.com/members/keyur-pandya\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/c-sharpcorner.com/streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell"}],["meta",{"property":"og:description","content":"Article(s) > Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://c-sharpcorner.com/images/csharp-corner-new.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://c-sharpcorner.com/images/csharp-corner-new.png"}],["meta",{"name":"twitter:image:alt","content":"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell"}],["meta",{"property":"article:author","content":"Keyur Pandya"}],["meta",{"property":"article:tag","content":"share-point"}],["meta",{"property":"article:tag","content":"sharepoint"}],["meta",{"property":"article:tag","content":"microsoft"}],["meta",{"property":"article:tag","content":"tool"}],["meta",{"property":"article:tag","content":"powershell"}],["meta",{"property":"article:tag","content":"pwsh"}],["meta",{"property":"article:tag","content":"c-sharpcorner.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-08-19T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell"},{"property":"og:description","content":"Streamlining SharePoint Site and Group Data Extraction Using PnP PowerShell"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/c-sharpcorner.com/streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell.html"}]],"prev":"/programming/pwsh/articles/README.md","date":"2025-08-19T00:00:00.000Z","isOriginal":false,"author":[{"name":"Keyur Pandya","url":"https://c-sharpcorner.com/members/keyur-pandya"}],"cover":"https://c-sharpcorner.com/images/csharp-corner-new.png"},"git":{},"readingTime":{"minutes":3.03,"words":908},"filePathRelative":"c-sharpcorner.com/streamlining-sharepoint-site-and-group-data-extraction-using-pnp-powershell.md","copyright":{"author":"Keyur Pandya"}}');export{E as comp,C as data};
