import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,d as e,f as t,b as f,a as b,t as k,n as c,g as d,e as s,w as l,r as a,o as y}from"./app-BVguHYKu.js";const w={},S={id:"frontmatter-title-관련",tabindex:"-1"},C={class:"header-anchor",href:"#frontmatter-title-관련"},D={href:"https://quantamagazine.org/the-thought-experiments-that-fray-the-fabric-of-space-time-20240925/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://gsap.com/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://gsap.com/docs/v3/Plugins/ScrollTrigger/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations",target:"_blank",rel:"noopener noreferrer"},T={href:"https://caniuse.com/mdn-css_properties_animation-timeline_scroll",target:"_blank",rel:"noopener noreferrer"},A={class:"hint-container info"};function P(r,n){const p=a("VPCard"),u=a("SiteInfo"),o=a("VPIcon"),m=a("CodePen"),h=a("VidStack"),i=a("RouteLink");return y(),v("div",null,[e("h1",S,[e("a",C,[e("span",null,k(r.$frontmatter.title)+" 관련",1)])]),t(p,c(d({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n[18]||(n[18]=e("nav",{class:"table-of-contents"},[e("ul")],-1)),n[19]||(n[19]=e("hr",null,null,-1)),t(u,{name:"Scroll-Driven… Sections",desc:"If you're creating a scroll-driven animation and the goal is ",url:"https://frontendmasters.com/blog/scroll-driven-sections/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4277"}),e("p",null,[n[3]||(n[3]=s("I was checking out ")),e("a",D,[t(o,{icon:"fas fa-globe"}),n[0]||(n[0]=s("a very cool art-directed article"))]),n[4]||(n[4]=s(" the other day, full of ")),n[5]||(n[5]=e("em",null,"scrollytelling",-1)),n[6]||(n[6]=s(", and, like us web devs will be forever cursed to do, wondering what they used to build it. Spoiler: it’s ")),e("a",I,[t(o,{icon:"fas fa-globe"}),n[1]||(n[1]=s("GSAP"))]),n[7]||(n[7]=s(" and ")),e("a",q,[t(o,{icon:"fas fa-globe"}),n[2]||(n[2]=s("ScrollTrigger"))]),n[8]||(n[8]=s("."))]),e("p",null,[n[11]||(n[11]=s("No shame in those tech choices, they are great. But with ")),e("a",x,[t(o,{icon:"fa-brands fa-firefox"}),n[9]||(n[9]=s("scroll-driven animations"))]),n[12]||(n[12]=s(" now being a web standard with ")),e("a",T,[t(o,{icon:"fas fa-globe"}),n[10]||(n[10]=s("growing support"))]),n[13]||(n[13]=s(", it begs the question whether we could do this with native technologies."))]),n[20]||(n[20]=f(`<p>My brain focused on one particular need of the scrollytelling style:</p><ol><li>While the page scrolls <em>through a particular section</em></li><li>Have a child element appear in a fixed position <em>and be animated</em></li><li>… but before and after this section is being scrolled through, the element is hidden</li></ol><p>Perhaps a diagram can help drive that home:</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/Frame-3.png?resize=462%2C1024&amp;ssl=1" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>But I was immediately confused when thinking about how to do this with scroll-driven animations. <strong>The problem is that that “section” itself is the thing we need to apply the <code>animation-timeline: view();</code> to, such that we have the proper moment to react to (“<em>the section is currently in view!</em>“).</strong> But in my diagram above, it’s actually a <code>&lt;blockquote&gt;</code> that we need to apply special conditional styling to, not the section. In a <code>@keyframe</code> animation, all we can do is change declarations, we can’t select other elements. Apologies if that confusing, but the root of is that we need to transfer styles from the section to the blockquote without using selectors — and it’s weird.</p><p>The good news is that what we can do is update CSS custom properties on the section, and those values will cascade to all the children of the section, and we can use those to style the blockquote.</p><p>First, in order to make a custom property animatable, we need to declare it’s type. Let’s do a fade in first, thus we need opacity:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token atrule"><span class="token rule">@property</span> --blockquoteOpacity</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">syntax</span><span class="token punctuation">:</span> <span class="token string">&quot;&lt;percentage&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inherits</span><span class="token punctuation">:</span> true<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">initial-value</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now the section itself has the animation timeline:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">section.has-pullquote</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">animation</span><span class="token punctuation">:</span> reveal linear both<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">animation-timeline</span><span class="token punctuation">:</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">animation-range</span><span class="token punctuation">:</span> cover 0% cover 100%<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And that animation we’ve named <code>reveal</code> above can now update the custom property:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> reveal</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">from</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">--blockquoteOpacity</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token selector">to%</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">--blockquoteOpacity</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now as the animation runs, based on it’s visibility in the viewport, it will update the custom property and thus fade/in out the blockquote:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">blockquote</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--blockquoteOpacity<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note I’m using <code>position: sticky</code> in there too, which will keep our blockquote in the middle of the viewport while we’re cruising through that section.</p><p>Try it out (Chrome ‘n’ friends have stable browser support):</p>`,16)),t(m,{user:"chriscoyier","slug-hash":"gOVXVjj",title:"Fixed Position Blockquote Only In Certain Section","default-tab":["css","result"],theme:r.$isDarkmode?"dark":"light"},null,8,["theme"]),n[21]||(n[21]=e("p",null,"Here’s a video of it working in case you’re in a non-supporting browser:",-1)),t(h,{src:"https://videopress.com/e8b9dd44-4258-4198-930c-a2dea1ad0452"}),n[22]||(n[22]=e("p",null,"Because we instantiated the opacity custom property for the opacity at 100%, even in a non-supporting browser like Safari, the blockquote will be visible and it’s a fine experience.",-1)),n[23]||(n[23]=e("p",null,"I found this all a little fiddly, but I’m not even sure I’m doing this “correctly”. Maybe there is a way to tap into another elements view timeline I’m not aware of? If I’m doing it the intended way, I could see this getting pretty cumbersome with lots of elements and lots of different values needing updated. But after all, that’s the job sometimes. This is intricate stuff and we’re using the CSS primitives directly. The control we have is quite fine-grained, and that’s a good thing!",-1)),e("div",A,[n[17]||(n[17]=e("p",{class:"hint-container-title"},"Article Series",-1)),e("ol",null,[e("li",null,[t(i,{to:"/frontendmasters.com/scroll-driven-sections.html"},{default:l(()=>n[14]||(n[14]=[s("Scroll-Driven… Sections")])),_:1,__:[14]})]),e("li",null,[t(i,{to:"/frontendmasters.com/named-scroll-view-timelines.html"},{default:l(()=>n[15]||(n[15]=[s("Named Scroll & View Timelines")])),_:1,__:[15]})]),e("li",null,[t(i,{to:"/frontendmasters.com/scoped-scroll-timelines.html"},{default:l(()=>n[16]||(n[16]=[s("(Up-) Scoped Scroll Timelines")])),_:1,__:[16]})])])]),b(" TODO: add ARTICLE CARD "),t(p,c(d({title:"Scroll-Driven… Sections",desc:"If you're creating a scroll-driven animation and the goal is ",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/scroll-driven-sections.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const N=g(w,[["render",P]]),_=JSON.parse('{"path":"/frontendmasters.com/scroll-driven-sections.html","title":"Scroll-Driven… Sections","lang":"en-US","frontmatter":{"lang":"en-US","title":"Scroll-Driven… Sections","description":"Article(s) > Scroll-Driven… Sections","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","frontendmasters.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Scroll-Driven… Sections\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/Frame-3.png?resize=462%2C1024&ssl=1\\"],\\"datePublished\\":\\"2024-10-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/scroll-driven-sections.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Scroll-Driven… Sections"}],["meta",{"property":"og:description","content":"Article(s) > Scroll-Driven… Sections"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4277"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4277"}],["meta",{"name":"twitter:image:alt","content":"Scroll-Driven… Sections"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-10-29T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Scroll-Driven… Sections"},{"property":"og:description","content":"Scroll-Driven… Sections"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/scroll-driven-sections.html"}]],"prev":"/programming/css/articles/README.md","date":"2024-10-29T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4277"},"git":{},"readingTime":{"minutes":2.93,"words":879},"filePathRelative":"frontendmasters.com/scroll-driven-sections.md","copyright":{"author":"Chris Coyier"}}');export{N as comp,_ as data};
