import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as e,f as i,b as u,a as w,t as y,n as p,g as l,w as n,e as o,r as m,o as k}from"./app-BVguHYKu.js";const z={},b={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},_={class:"table-of-contents"},S={href:"https://codeit.kr",target:"_blank",rel:"noopener noreferrer"},v={class:"hint-container info"},D={class:"hint-container info"};function I(d,t){const s=m("VPCard"),a=m("router-link"),g=m("SiteInfo"),c=m("VPIcon"),r=m("RouteLink");return k(),f("div",null,[e("h1",b,[e("a",x,[e("span",null,y(d.$frontmatter.title)+" 관련",1)])]),i(s,p(l({title:"Data Sceince > Article(s)",desc:"Article(s)",link:"/data-science/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",_,[e("ul",null,[e("li",null,[i(a,{to:"#데이터베이스-db"},{default:n(()=>t[0]||(t[0]=[o("데이터베이스(DB)")])),_:1,__:[0]}),e("ul",null,[e("li",null,[i(a,{to:"#행과-열로-이루어진-테이블"},{default:n(()=>t[1]||(t[1]=[o("행과 열로 이루어진 테이블")])),_:1,__:[1]})]),e("li",null,[i(a,{to:"#엑셀과-무엇이-다를까"},{default:n(()=>t[2]||(t[2]=[o("엑셀과 무엇이 다를까?")])),_:1,__:[2]})]),e("li",null,[i(a,{to:"#데이터베이스는-언제-쓸까"},{default:n(()=>t[3]||(t[3]=[o("데이터베이스는 언제 쓸까?")])),_:1,__:[3]})])])]),e("li",null,[i(a,{to:"#데이터베이스의-종류"},{default:n(()=>t[4]||(t[4]=[o("데이터베이스의 종류")])),_:1,__:[4]}),e("ul",null,[e("li",null,[i(a,{to:"#테이블-중심의-관계형-데이터베이스"},{default:n(()=>t[5]||(t[5]=[o("테이블 중심의 관계형 데이터베이스")])),_:1,__:[5]})]),e("li",null,[i(a,{to:"#관계형-데이터베이스의-특징-체계적인-구조와-sql"},{default:n(()=>t[6]||(t[6]=[o("관계형 데이터베이스의 특징: 체계적인 구조와 SQL")])),_:1,__:[6]})]),e("li",null,[i(a,{to:"#비관계형-데이터베이스-nosql"},{default:n(()=>t[7]||(t[7]=[o("비관계형 데이터베이스(NoSQL)")])),_:1,__:[7]})]),e("li",null,[i(a,{to:"#관계형과-비관계형-무엇이-더-좋을까"},{default:n(()=>t[8]||(t[8]=[o("관계형과 비관계형, 무엇이 더 좋을까?")])),_:1,__:[8]})])])]),e("li",null,[i(a,{to:"#마치며"},{default:n(()=>t[9]||(t[9]=[o("마치며")])),_:1,__:[9]})])])]),t[21]||(t[21]=e("hr",null,null,-1)),i(g,{name:"데이터의 보관 창고, 데이터베이스 기초 이해하기",desc:"데이터베이스는 쉽게 데이터를 보관해 두는 창고라고 생각하면 됩니다. 그런데, 이 데이터를 우리가 메모장에 대충 기록해 두듯이 아무렇게나 쌓아 두는 게 아니라 ‘체계적으로 관리’하는 게 핵심입니다. 즉, 데이터를 쉽게 꺼내 볼 수 있어야 하고, 또 효과적으로 추가, 수정, 삭제할 수 있어야 됩니다. 데이터를 잃어버리거나, 노출되는 문제도 없어야 하고요. 지금부터 데이터베이스의 기본 개념부터 두 가지 종류, 관계형 데이터베이스와 비관계형 데이터베이스에 대해 알아보겠습니다. 웹 개발을 제대로 이해하려면 반드시 알아야 할 영역인 만큼, 기초를 잘 다지고 가는 것이 좋겠습니다. 언제 데이터베이스가 필요하며, 무슨 데이터베이스로 개발해야 할지 개념을 잘 이해해 보세요.",url:"https://yozm.wishket.com/magazine/detail/2908/",logo:"https://yozm.wishket.com/favicon.ico",preview:"https://yozm.wishket.com/media/news/2908/1.png"}),t[22]||(t[22]=e("p",null,"IT 지식이 무엇보다 중요해진 요즘, 여러분은 어떻게 공부하고 있나요? 가장 먼저 눈길이 가는 건 다양한 IT 강의 영상일 겁니다. 강의를 제공하는 교육 기업들과 함께, 요즘IT에서 ‘IT 강의 시리즈’를 준비했습니다. 엄선한 교육 영상을 텍스트로 읽고 필요한 정보를 빠르게 가져가세요.",-1)),e("p",null,[t[11]||(t[11]=o("이번 강의는 ‘웹 개발 첫걸음’입니다. IT 교육 기업 코드잇의 강의 ‘프로그래밍 오버뷰’와 ‘웹 개발 기초 지식’ 콘텐츠를 정리했습니다. 다양한 개발 분야부터 꼭 알아야 할 기초 지식까지, 웹 개발의 기초를 다져 보세요. 전체 영상은 ")),e("a",S,[i(c,{icon:"fas fa-globe"}),t[10]||(t[10]=o("코드잇"))]),t[12]||(t[12]=o("에서 확인할 수 있습니다."))]),e("div",v,[t[17]||(t[17]=e("p",{class:"hint-container-title"},[e("strong",null,"웹 개발 첫걸음"),o(" 시리즈")],-1)),e("p",null,[t[14]||(t[14]=o("① ")),i(r,{to:"/yozm.wishket.com/2782.html"},{default:n(()=>t[13]||(t[13]=[o("프론트엔드와 백엔드, 무엇을 어떻게 시작할까?")])),_:1,__:[13]})]),i(s,p(l({title:"웹사이트는 어떻게 찾아갈까? IP, DNS, URL 개념 잡기",desc:"여러분이 크롬 브라우저에서 youtube.com으로 들어간다고 가정해 볼게요. 이때 브라우저는 클라이언트의 역할을 합니다. 이 브라우저가 유튜브의 서버 컴퓨터에 요청을 보내 사이트 코드를 받아오는 거예요. 그러면 우리는 그 정보를 받아 사이트를 쓸 수 있게 됩니다. 그런데 여기서 궁금증이 생깁니다. 인터넷에 연결된 수많은 컴퓨터 가운데 이 유튜브 사이트의 서버 컴퓨터는 어떻게 찾을 수 있을까요? 이번에는 그 물음에 대한 답을 하려고 합니다. 웹을 이해하기 위해 알아야 할 핵심 지식, IP, DNS, URL의 기초 개념을 파헤쳐 보겠습니다.",link:"/yozm.wishket.com/2795.md",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16),e("p",null,[t[16]||(t[16]=o("③ ")),i(r,{to:"/yozm.wishket.com/2817.html"},{default:n(()=>t[15]||(t[15]=[o("정적? 동적? 웹사이트 화면은 어떻게 채워질까?")])),_:1,__:[15]})]),i(s,p(l({title:"데이터의 보관 창고, 데이터베이스 기초 이해하기",desc:"데이터베이스는 쉽게 데이터를 보관해 두는 창고라고 생각하면 됩니다. 그런데, 이 데이터를 우리가 메모장에 대충 기록해 두듯이 아무렇게나 쌓아 두는 게 아니라 ‘체계적으로 관리’하는 게 핵심입니다. 즉, 데이터를 쉽게 꺼내 볼 수 있어야 하고, 또 효과적으로 추가, 수정, 삭제할 수 있어야 됩니다. 데이터를 잃어버리거나, 노출되는 문제도 없어야 하고요. 지금부터 데이터베이스의 기본 개념부터 두 가지 종류, 관계형 데이터베이스와 비관계형 데이터베이스에 대해 알아보겠습니다. 웹 개발을 제대로 이해하려면 반드시 알아야 할 영역인 만큼, 기초를 잘 다지고 가는 것이 좋겠습니다. 언제 데이터베이스가 필요하며, 무슨 데이터베이스로 개발해야 할지 개념을 잘 이해해 보세요.",link:"/yozm.wishket.com/2908.md",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16),i(s,p(l({title:"알다가도 모를 API, 제대로 잡고 가기",desc:"API라는 단어, 많이 들어 보았을 겁니다. 딱딱한 정의를 숙지하는 방식이 아니라 실용적인 예시를 살펴보며 같이 이해해 보도록 하겠습니다.",link:"/yozm.wishket.com/2925.md",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16)]),e("p",null,[i(r,{to:"/yozm.wishket.com/2817.html"},{default:n(()=>t[18]||(t[18]=[e("strong",null,"앞서 글",-1)])),_:1,__:[18]}),t[19]||(t[19]=o("에서는 웹 페이지의 두 가지 형태에 대해 배워 봤습니다. 하나는 이미 만들어진 웹 페이지를 그대로 받아오는 정적(Static) 방식이고, 다른 하나는 유저의 요청에 따라 정보를 적절히 채워 넣어서 받아오는 동적(Dynamic) 방식이었죠. 동적 웹 페이지의 경우, 또 데이터를 클라이언트와 서버 어느 쪽에서 채우는 지에 따라 두 가지로 나눠지고요. 그래도 둘 다 요청에 따라 정보를 적절히 채워 넣는다는 점에서는 동일합니다."))]),t[23]||(t[23]=u('<p>자, 그럼 이 정보는 어디서 가져오는 걸까요? 이번 글에서 다룰 주제, 바로 데이터베이스(Database), 줄여서 DB입니다.</p><figure><img src="https://yozm.wishket.com/media/news/2908/1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="데이터베이스-db" tabindex="-1"><a class="header-anchor" href="#데이터베이스-db"><span>데이터베이스(DB)</span></a></h2><p><strong>데이터베이스</strong>는 쉽게 데이터를 보관해 두는 창고라고 생각하면 됩니다. 그런데, 이 데이터를 우리가 메모장에 대충 기록해 두듯이 아무렇게나 쌓아 두는 게 아니라 ‘체계적으로 관리’하는 게 핵심입니다.</p><p>즉, <strong>데이터를 쉽게 꺼내 볼 수 있어야 하고, 또 효과적으로 추가, 수정, 삭제할 수 있어야 됩니다. 데이터를 잃어버리거나, 노출되는 문제도 없어야 하고요.</strong></p><figure><img src="https://yozm.wishket.com/media/news/2908/2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="행과-열로-이루어진-테이블" tabindex="-1"><a class="header-anchor" href="#행과-열로-이루어진-테이블"><span>행과 열로 이루어진 테이블</span></a></h3><p>그렇다면, 이 데이터베이스란 건 도대체 어떻게 생긴 걸까요? 사실 개발자들이 가장 많이 사용하는 데이터베이스는 우리에게 이미 익숙한 표 형식으로 되어 있습니다. 보통 표라는 표현보다는 ‘테이블’이라고 부르죠. 테이블은 이렇게 행과 열로 구성되어 있어요.</p><figure><img src="https://yozm.wishket.com/media/news/2908/3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>우리가 어떤 쇼핑몰의 상품 목록을 데이터베이스로 관리한다고 해볼게요. 각 행은 상품 하나하나를 나타내고, 각 열은 상품에 대한 세부 정보를 나타냅니다. 예를 들어 상품의 이름, 가격, 원가, 재고, 판매량 이런 정보가 열에 들어가는 거죠. 각 열에 들어가 있는 세부 정보를 다른 표현으로는 속성이라고도 합니다. 그래서 지금 이 상품 데이터는 총 5개의 속성이 있다고 할 수 있는 거죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="엑셀과-무엇이-다를까" tabindex="-1"><a class="header-anchor" href="#엑셀과-무엇이-다를까"><span>엑셀과 무엇이 다를까?</span></a></h3><p>그런데 이렇게만 얘기하면 우리가 평소 쓰던 엑셀이랑 크게 다를 게 없어 보입니다. 실제로도 이렇게 표 형태로 정보를 저장한다는 점에서는 데이터베이스나 엑셀이나 비슷해요.</p><p>하지만 데이터가 몇십만 개, 몇백만 개로 늘어났다고 생각해 보세요. 엑셀은 데이터가 몇천, 몇만 개만 돼도 엄청 버벅이며 감당이 안 되기 시작합니다. 간편하다는 장점이 있는 대신 많은 데이터를 안정적으로 관리하는 게 어려운 거죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/5-1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>웹사이트나 앱을 운영하면 엄청나게 많은 데이터가 쌓이는데요. 그 많은 데이터를 잘 관리하려면 데이터베이스를 써야만 하는 거예요.</p><p>대신 엑셀은 인터페이스가 잘 되어 있어서 굉장히 직관적이지만, 데이터베이스는 다루는 방법이 좀 더 복잡합니다. SQL 같은 데이터베이스 전용 언어도 배워야 하고, 그 외에도 데이터베이스에 대한 지식과 숙련도를 키워야 하죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="데이터베이스는-언제-쓸까" tabindex="-1"><a class="header-anchor" href="#데이터베이스는-언제-쓸까"><span>데이터베이스는 언제 쓸까?</span></a></h3><p>사실 모든 서비스에 데이터베이스가 필요한 건 아니에요. 예를 들어 앞서 배웠던 정적 웹 페이지를 생각해 봅시다. 만약 우리가 제공하는 서비스가 모두 정적 웹 페이지로 이루어져 있다면, 어쩌면 데이터를 쌓을 필요가 없을 겁니다. 그럼 데이터베이스를 굳이 안 써도 문제 없는 거죠. 실제로 그런 서비스들도 물론 있긴 합니다.</p><p>하지만, 우리가 알 만한 요즘 대부분 서비스들이 유저 개개인 맞춤형으로 제공됩니다. 그러니까 아주 기본인 회원가입이랑 로그인 기능만 있어도 데이터베이스가 필요한 거예요. 그래서 웹 분야를 제대로 이해하고 싶다면, 데이터베이스는 기본적으로 알아야 하는 개념입니다.</p><figure><img src="https://yozm.wishket.com/media/news/2908/7.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="데이터베이스의-종류" tabindex="-1"><a class="header-anchor" href="#데이터베이스의-종류"><span>데이터베이스의 종류</span></a></h2><p>지금까지 데이터베이스의 개념에 대해 간략하게 살펴봤는데요. 데이터베이스는 또 종류가 한 두 가지가 아닙니다. 이를 분류하려면 여러 방식이 있을 텐데, 가장 일반적인 방식은 <strong>관계형 데이터베이스와 비관계형 데이터베이스</strong>로 분류하는 겁니다.</p><figure><img src="https://yozm.wishket.com/media/news/2908/8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="테이블-중심의-관계형-데이터베이스" tabindex="-1"><a class="header-anchor" href="#테이블-중심의-관계형-데이터베이스"><span>테이블 중심의 관계형 데이터베이스</span></a></h3><p>예전부터 지금까지 가장 많이 쓰이는 데이터베이스 형태는 관계형 데이터베이스입니다. 기본적으로 테이블의 형태를 띠고 있어요. 테이블은 행과 열로 구성되어 있다고 했습니다. 또 다른 예를 들어 볼게요.</p><p>배달 앱에서 가게 목록을 테이블로 관리한다고 하겠습니다. 각 행은 가게 하나하나를 나타내고, 각 열은 이 가게에 대한 세부 정보를 나타낼 거예요. 가게 ID, 가게 이름, 가게 주소, 가게 전화번호 같은 게 여기 들어가는 거죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/9.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>이 배달 앱에서는 메뉴 목록도 테이블로 관리할 수 있습니다. 각 행은 메뉴를 하나씩 나타내는 거고, 각 열은 이 메뉴에 대한 세부 정보를 나타내는 거예요. 메뉴 ID, 메뉴 이름, 메뉴 가격, 메뉴 이미지 같은 걸 저장할 수 있겠죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/10.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>이제 중요한 게 있습니다. 이 메뉴 테이블이 어떤 가게의 메뉴인지 알아야 한다는 거죠. 그래서 이 메뉴 테이블은 가게 ID도 따로 보관해야 합니다.</p><p>자, 그러면 이제 가게 목록 테이블에서 일치하는 가게를 찾을 수 있습니다. 이 열을 연결 지어 두 테이블 사이에 관계가 만들어졌죠? 이렇게 <strong>테이블 간에 관계를 지어서 관리한다는 의미로 이를 관계형 데이터베이스</strong>라고 부르는 거예요.</p><figure><img src="https://yozm.wishket.com/media/news/2908/11.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="관계형-데이터베이스의-특징-체계적인-구조와-sql" tabindex="-1"><a class="header-anchor" href="#관계형-데이터베이스의-특징-체계적인-구조와-sql"><span>관계형 데이터베이스의 특징: 체계적인 구조와 SQL</span></a></h3><p>관계형 데이터베이스의 핵심 특징은 ‘체계적’이라는 겁니다. 개발자들은 서비스를 설계하는 단계에서부터 테이블의 구조를 딱 정해 놓고, 반드시 그 구조에 맞춰 데이터를 쌓도록 합니다. 이렇게 항상 예상할 수 있는 형태로 데이터를 저장하기 때문에 체계적이고 안정적으로 데이터를 관리할 수 있는 거죠. 그래서 관계형 데이터베이스를 데이터베이스의 가장 기본이라 할 수 있는 겁니다.</p><figure><img src="https://yozm.wishket.com/media/news/2908/12.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>관계형 데이터베이스를 다룰 때는 ‘SQL’이라는 언어를 사용합니다. SQL을 써서 데이터베이스에 값을 추가하고, 수정하고, 삭제하고, 또 조회할 수 있는 거죠. 단순히 한 테이블에서 값을 받아오는 것뿐만 아니라 테이블들 사이 관계를 이용해 테이블을 합쳐 조회하는 그런 복잡한 연산도 가능합니다.</p><figure><img src="https://yozm.wishket.com/media/news/2908/13.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>아마 SQL은 개발을 잘 모르는 사람도 대부분 들어 봤을 단어죠? 사실 요즘은 개발자가 아니더라도 기획자나 마케터, PM 같은 다양한 직군에서 데이터 분석 목적으로 SQL을 배우는 분위기예요. 특히 한국에는 SQLD라는 자격증 시험이 있어, 요즘 취준생 분들이 정말 많이 준비합니다.</p><h3 id="비관계형-데이터베이스-nosql" tabindex="-1"><a class="header-anchor" href="#비관계형-데이터베이스-nosql"><span>비관계형 데이터베이스(NoSQL)</span></a></h3><p>전통적으로 가장 많이 쓰여온 것도 관계형 데이터베이스, 여전히 가장 많이 쓰인다고 할 수 있는 것도 관계형 데이터베이스입니다. 하지만 갈수록 ‘비관계형 데이터베이스’가 점점 많이 쓰이고 있습니다. 비관계형 데이터베이스는 흔히들 NoSQL 데이터베이스라고도 하는데요. 가장 대표적으로는 mongoDB가 있습니다. 이것 역시 들어본 분들이 꽤 있을 거예요.</p><figure><img src="https://yozm.wishket.com/media/news/2908/14.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>관계형 데이터베이스의 체계적인 관리는 가장 큰 장점이지만, 또 체계적이기 때문에 생기는 제약들도 있습니다. 예를 들어 조금 빠르게 서비스를 만들고 싶은데, 관계형 데이터베이스로 개발하려면 기본적으로 구조를 잘 잡아 놓고 시작해야 합니다. 그 때문에 개발 속도가 약간 더딜 수 있어요. 그럴 때 비관계형 데이터베이스를 쓰면 체계적이지는 않더라도 빠르게 개발을 시작할 수 있습니다.</p><p>한편 개발을 하다 보면, 변동 사항들이 많이 생기기도 합니다. 만약 관계형 데이터베이스를 쓰면 그럴 때마다 테이블의 구조를 매번 새롭게 바꿔야 한다는 번거로움이 있습니다. 반면 비관계형 데이터베이스를 쓰면 꼭 따라야 하는 구조가 딱 있는 게 아니어서 훨씬 유연하게 대응할 수 있죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>어쩔 때는 데이터베이스의 구조를 잘 설계하는 건 좀 덜 중요하고, 그냥 데이터를 저장하는 일 자체에 의미를 두는 경우가 있어요. 예를 들어 유저들이 사이트에서 하는 행동 하나하나를 다 기록한다고 생각해 보세요. 그러면 정말 셀 수 없을 정도로 많은 데이터가 쌓일 겁니다. 이런 기록들을 막 쌓아 두는 용도로도 비관계형 데이터베이스를 많이 씁니다.</p><h3 id="관계형과-비관계형-무엇이-더-좋을까" tabindex="-1"><a class="header-anchor" href="#관계형과-비관계형-무엇이-더-좋을까"><span>관계형과 비관계형, 무엇이 더 좋을까?</span></a></h3><p>자, 그래서 관계형 데이터베이스와 비관계형 데이터베이스 중에 뭐가 더 좋을까요?</p><p>사실 대부분의 경우, 어느 것이든 쓸 수 있습니다. 다만 상황에 따라 좀 더 적합한 형태가 있죠. 그래서 정말 큰 서비스들은 필요에 따라 두 가지를 섞어서 사용합니다. 체계적으로 관리해야 하는 정보는 관계형 데이터베이스, 확장성과 유연성이 더 중요한 영역에서는 비관계형 데이터베이스를 쓰는 거죠.</p><p>그래도 일단 하나만 추천해 달라고 하면, 저는 가장 많이 쓰이며 기본이라 생각하는 관계형 데이터베이스를 추천할 겁니다. 체계적이라는 점에서 처음에 어렵게 느껴질 수도 있지만, 한편으로는 체계적이기 때문에 어떻게 관리해야 되는지에 대한 명확한 가이드라인이 잘 잡혀 있으니까요. 그리고 굉장히 오랜 기간 많은 사람이 써 왔기 때문에 참고할 수 있는 자료들도 훨씬 많죠.</p><figure><img src="https://yozm.wishket.com/media/news/2908/16.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="마치며" tabindex="-1"><a class="header-anchor" href="#마치며"><span>마치며</span></a></h2><p>지금까지 데이터베이스의 기본 개념부터 두 가지 종류, 관계형 데이터베이스와 비관계형 데이터베이스에 대해 알아보았습니다.</p><p>웹 개발을 제대로 이해하려면 반드시 알아야 할 영역인 만큼, 기초를 잘 다지고 가는 것이 좋겠습니다. 언제 데이터베이스가 필요하며, 무슨 데이터베이스로 개발해야 할지 개념을 잘 이해해 보세요.</p>',58)),e("div",D,[t[20]||(t[20]=e("p",{class:"hint-container-title"},"원본 강의 보러가기",-1)),i(g,{name:"웹 개발 기초 지식 -  강의 | 코드잇",desc:"웹 개발은 세부 분야도 많고 굉장히 빨리 변하기 때문에, 처음 시작하는 사람들에겐 무척 혼란스러울 수 있어요. 그런 분들을 위해 웹 개발을 이해하는데 도움이 되는 핵심적이고 기초적인 지식을 모아봤습니다. 코딩을 전혀 모르더라도 이해할 수 있으니까, 가벼운 마음으로 도전해 보세요!",url:"https://codeit.kr/topics/web-dev-fundamentals/",logo:"https://codeit.kr/static/favicon/favicon-16x16.png",preview:"https://codeit-static.codeit.com/images/brand/og_tag.png"})]),w(" TODO: add ARTICLE CARD "),i(s,p(l({title:"데이터의 보관 창고, 데이터베이스 기초 이해하기",desc:"데이터베이스는 쉽게 데이터를 보관해 두는 창고라고 생각하면 됩니다. 그런데, 이 데이터를 우리가 메모장에 대충 기록해 두듯이 아무렇게나 쌓아 두는 게 아니라 ‘체계적으로 관리’하는 게 핵심입니다. 즉, 데이터를 쉽게 꺼내 볼 수 있어야 하고, 또 효과적으로 추가, 수정, 삭제할 수 있어야 됩니다. 데이터를 잃어버리거나, 노출되는 문제도 없어야 하고요. 지금부터 데이터베이스의 기본 개념부터 두 가지 종류, 관계형 데이터베이스와 비관계형 데이터베이스에 대해 알아보겠습니다. 웹 개발을 제대로 이해하려면 반드시 알아야 할 영역인 만큼, 기초를 잘 다지고 가는 것이 좋겠습니다. 언제 데이터베이스가 필요하며, 무슨 데이터베이스로 개발해야 할지 개념을 잘 이해해 보세요.",link:"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2908.html",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16)])}const A=h(z,[["render",I]]),R=JSON.parse('{"path":"/yozm.wishket.com/2908.html","title":"데이터의 보관 창고, 데이터베이스 기초 이해하기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"데이터의 보관 창고, 데이터베이스 기초 이해하기","description":"Article(s) > 데이터의 보관 창고, 데이터베이스 기초 이해하기","icon":"fas fa-database","category":["Data Science","Article(s)"],"tag":["blog","yozm.wishket.com","db","datascience","data-science"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"데이터의 보관 창고, 데이터베이스 기초 이해하기\\",\\"image\\":[\\"https://yozm.wishket.com/media/news/2908/1.png\\",\\"https://yozm.wishket.com/media/news/2908/2.png\\",\\"https://yozm.wishket.com/media/news/2908/3.png\\",\\"https://yozm.wishket.com/media/news/2908/4.png\\",\\"https://yozm.wishket.com/media/news/2908/5-1.png\\",\\"https://yozm.wishket.com/media/news/2908/6.png\\",\\"https://yozm.wishket.com/media/news/2908/7.png\\",\\"https://yozm.wishket.com/media/news/2908/8.png\\",\\"https://yozm.wishket.com/media/news/2908/9.png\\",\\"https://yozm.wishket.com/media/news/2908/10.png\\",\\"https://yozm.wishket.com/media/news/2908/11.png\\",\\"https://yozm.wishket.com/media/news/2908/12.png\\",\\"https://yozm.wishket.com/media/news/2908/13.png\\",\\"https://yozm.wishket.com/media/news/2908/14.png\\",\\"https://yozm.wishket.com/media/news/2908/15.png\\",\\"https://yozm.wishket.com/media/news/2908/16.png\\"],\\"datePublished\\":\\"2024-12-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"코드잇\\",\\"url\\":\\"https://yozm.wishket.com/magazine/@codeit/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2908.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"데이터의 보관 창고, 데이터베이스 기초 이해하기"}],["meta",{"property":"og:description","content":"Article(s) > 데이터의 보관 창고, 데이터베이스 기초 이해하기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yozm.wishket.com/media/news/2908/1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yozm.wishket.com/media/news/2908/1.png"}],["meta",{"name":"twitter:image:alt","content":"데이터의 보관 창고, 데이터베이스 기초 이해하기"}],["meta",{"property":"article:author","content":"코드잇"}],["meta",{"property":"article:tag","content":"data-science"}],["meta",{"property":"article:tag","content":"datascience"}],["meta",{"property":"article:tag","content":"db"}],["meta",{"property":"article:tag","content":"yozm.wishket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-12-27T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > 데이터의 보관 창고, 데이터베이스 기초 이해하기"},{"property":"og:description","content":"데이터의 보관 창고, 데이터베이스 기초 이해하기"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2908.html"}]],"prev":"/data-sciences/articles/README.md","date":"2024-12-27T00:00:00.000Z","isOriginal":false,"author":[{"name":"코드잇","url":"https://yozm.wishket.com/magazine/@codeit/"}],"cover":"https://yozm.wishket.com/media/news/2908/1.png"},"git":{},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"yozm.wishket.com/2908.md","copyright":{"author":"코드잇"}}');export{A as comp,R as data};
