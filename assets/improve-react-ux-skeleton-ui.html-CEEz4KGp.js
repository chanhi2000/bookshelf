import{_ as f}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as w,d as n,f as t,b as u,a as v,t as x,n as g,g as b,w as e,e as s,r as i,o as q}from"./app-BVguHYKu.js";const j="/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/banner.png",S="/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/Medium-skeleton-ui.png",I="/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/Facebook-page-without-skeleton-ui.png",U="/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/Facebook-skeleton-UI.png",A={},C={id:"frontmatter-title-관련",tabindex:"-1"},T={class:"header-anchor",href:"#frontmatter-title-관련"},R={class:"table-of-contents"},P={href:"https://github.com/danilowoz/react-content-loader",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/buildo/react-placeholder",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/dvtng/react-loading-skeleton",target:"_blank",rel:"noopener noreferrer"},B={id:"danilowoz-react-content-loader",tabindex:"-1"},N={class:"header-anchor",href:"#danilowoz-react-content-loader"},F={href:"https://github.com/danilowoz/react-content-loader/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/danilowoz/react-content-loader#options",target:"_blank",rel:"noopener noreferrer"},M={id:"buildo-react-placeholder",tabindex:"-1"},O={class:"header-anchor",href:"#buildo-react-placeholder"},D={id:"dvtng-react-loading-skeleton",tabindex:"-1"},K={class:"header-anchor",href:"#dvtng-react-loading-skeleton"},Y={href:"https://github.com/dvtng/react-loading-skeleton",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/dvtng/react-loading-skeleton",target:"_blank",rel:"noopener noreferrer"},X={href:"https://codesandbox.io/s/skeletonui-w-framer-i7jwxs?file=/src/App.js",target:"_blank",rel:"noopener noreferrer"};function G(h,a){const d=i("VPCard"),c=i("router-link"),p=i("VPIcon"),r=i("SiteInfo"),m=i("RouteLink"),k=i("Tabs"),y=i("SandPack");return q(),w("div",null,[n("h1",C,[n("a",T,[n("span",null,x(h.$frontmatter.title)+" 관련",1)])]),t(d,g(b({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",R,[n("ul",null,[n("li",null,[t(c,{to:"#how-skeleton-screens-improve-ux"},{default:e(()=>a[0]||(a[0]=[s("How skeleton screens improve UX")])),_:1,__:[0]})]),n("li",null,[t(c,{to:"#different-types-of-skeleton-uis"},{default:e(()=>a[1]||(a[1]=[s("Different types of skeleton UIs")])),_:1,__:[1]}),n("ul",null,[n("li",null,[t(c,{to:"#how-do-you-make-a-skeleton-ui"},{default:e(()=>a[2]||(a[2]=[s("How do you make a skeleton UI?")])),_:1,__:[2]})]),n("li",null,[t(c,{to:"#danilowoz-react-content-loader"},{default:e(()=>[t(p,{icon:"iconfont icon-github"}),a[3]||(a[3]=s("danilowoz/react-content-loader"))]),_:1,__:[3]})]),n("li",null,[t(c,{to:"#buildo-react-placeholder"},{default:e(()=>[t(p,{icon:"iconfont icon-github"}),a[4]||(a[4]=s("buildo/react-placeholder"))]),_:1,__:[4]})]),n("li",null,[t(c,{to:"#dvtng-react-loading-skeleton"},{default:e(()=>[t(p,{icon:"iconfont icon-github"}),a[5]||(a[5]=s("dvtng/react-loading-skeleton"))]),_:1,__:[5]})])])]),n("li",null,[t(c,{to:"#building-a-skeleton-ui-in-react-with-framer-motion"},{default:e(()=>a[6]||(a[6]=[s("Building a skeleton UI in React with Framer Motion")])),_:1,__:[6]}),n("ul",null,[n("li",null,[t(c,{to:"#designing-the-skeleton-layout"},{default:e(()=>a[7]||(a[7]=[s("Designing the skeleton layout")])),_:1,__:[7]})]),n("li",null,[t(c,{to:"#using-the-cardlist-component"},{default:e(()=>a[8]||(a[8]=[s("Using the CardList component")])),_:1,__:[8]})]),n("li",null,[t(c,{to:"#creating-the-skeleton-component"},{default:e(()=>a[9]||(a[9]=[s("Creating the Skeleton component")])),_:1,__:[9]})]),n("li",null,[t(c,{to:"#creating-the-shimmer-animation-with-framer-motion"},{default:e(()=>a[10]||(a[10]=[s("Creating the shimmer animation with Framer Motion")])),_:1,__:[10]})]),n("li",null,[t(c,{to:"#using-the-youtube-skeleton"},{default:e(()=>a[11]||(a[11]=[s("Using the Youtube skeleton")])),_:1,__:[11]})]),n("li",null,[t(c,{to:"#creating-an-exit-animation-with-animatepresence"},{default:e(()=>a[12]||(a[12]=[s("Creating an exit animation with AnimatePresence")])),_:1,__:[12]})])])]),n("li",null,[t(c,{to:"#conclusion"},{default:e(()=>a[13]||(a[13]=[s("Conclusion")])),_:1,__:[13]})])])]),a[69]||(a[69]=n("hr",null,null,-1)),t(r,{name:"Improve React UX with skeleton UIs",desc:"Learn how to use skeleton UIs in your React apps to make your interface feel faster, more responsive, and richer to improve user experience.",url:"https://blog.logrocket.com/improve-react-ux-skeleton-ui",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/banner.png"}),a[70]||(a[70]=u('<div class="hint-container note"><p class="hint-container-title">Editor’s note</p><p>This article was updated on 28 February 2022 to remove and correct any outdated information as well as add the Building a skeleton UI in React with F**ramer Motion section.</p></div><figure><img src="'+j+'" alt="Improve React US With Skeleton UIs" tabindex="0" loading="lazy"><figcaption>Improve React US With Skeleton UIs</figcaption></figure><p>A skeleton screen is a UI that doesn’t contain actual content but instead offers a low-fidelity page wireframe before content completely loads. This way the user understands how to navigate within the page when content eventually loads.</p><p>Frontend developers use skeleton UIs for a variety of reasons, chief among them being the UI’s capacity to visually streamline the user experience, mimic content loading speeds, and progressively load content without requiring all content on a page is fetched at once.</p><p>Slack, Youtube, Facebook, Pinterest, and other big tech companies display skeleton screens while their content loads to boost UX.</p><figure><img src="'+S+'" alt="Skeleton UI On The Medium Website" tabindex="0" loading="lazy"><figcaption>Skeleton UI On The Medium Website</figcaption></figure><p>In addition to skeleton screens, these user interfaces are commonly referred to as content placeholders, content loaders, and ghost elements.</p><hr><h2 id="how-skeleton-screens-improve-ux" tabindex="-1"><a class="header-anchor" href="#how-skeleton-screens-improve-ux"><span>How skeleton screens improve UX</span></a></h2><p>A skeleton screen is a user interface that mimics a page’s layout/structure when all its content loads. It usually has a grey or off-white background representing a specific type of element on the page.</p><p>Skeleton screens that leverage animations—like a shimmer or pulsating effect—tend to make the page’s load speed appear shorter in duration.</p><p>This approach is more beneficial than showing a blank screen to users while they wait. Let’s look at a comparison of the two screens:</p><figure><img src="'+I+'" alt="A Blank Facebook Page That Shows Without A Skeleton UI, There Is Only a Blue Header With A Blank Grey Page Below It" tabindex="0" loading="lazy"><figcaption>A Blank Facebook Page That Shows Without A Skeleton UI, There Is Only a Blue Header With A Blank Grey Page Below It</figcaption></figure><figure><img src="'+U+'" alt="A Facebook Page With A Skeleton UI, Shows A Search Bar At The Top With the Outlines Of Posts On The Main Page In Grey With A White Background" tabindex="0" loading="lazy"><figcaption>A Facebook Page With A Skeleton UI, Shows A Search Bar At The Top With the Outlines Of Posts On The Main Page In Grey With A White Background</figcaption></figure><p>Neither screen has loaded actual content, but the empty page feels slower to the user while the skeleton screen looks richer, seems faster, and gives a user a sense of how content looks, encouraging them to continue waiting.</p><p>Even though the actual content loads at the same speed for both screens, the skeleton screen offers a superior UX.</p><hr><h2 id="different-types-of-skeleton-uis" tabindex="-1"><a class="header-anchor" href="#different-types-of-skeleton-uis"><span>Different types of skeleton UIs</span></a></h2><p>There are a few different kinds of skeleton UIs. The major ones are content placeholders and image (or color) placeholders. Companies like Medium, Slack, and YouTube use content placeholders in their skeleton UIs on their main pages.</p><p>Skeleton UIs are also easy to build because they don’t require any details about actual content data and only mimic the UI.</p><p>Meanwhile, Pinterest and Unsplash — two image-heavy websites — use color placeholders. Color placeholders are harder to build because they require details about actual content data.</p><h3 id="how-do-you-make-a-skeleton-ui" tabindex="-1"><a class="header-anchor" href="#how-do-you-make-a-skeleton-ui"><span>How do you make a skeleton UI?</span></a></h3><p>First, load a skeleton instead of images (usually with a gray or off-white background). Once the data is fetched, load the actual color of the image from the image metadata.</p><p>This metadata is derived from the image while uploading through backend algorithms as well as processing on top of the images.</p>',24)),n("p",null,[a[15]||(a[15]=s("Finally, lazy load the images to allow the user to actually view the content using the ")),t(m,{to:"/blog.logrocket.com/lazy-loading-using-the-intersection-observer-api.html"},{default:e(()=>a[14]||(a[14]=[n("strong",null,"Intersection Observer API",-1)])),_:1,__:[14]}),a[16]||(a[16]=s("."))]),a[71]||(a[71]=n("p",null,"In this tutorial, we’re going to explore three different packages for creating a Skeleton UI before creating our own UI with Framer-Motion which is an animation library for React.",-1)),a[72]||(a[72]=n("p",null,"These are the popular packages readily available for skeleton UI development in React:",-1)),n("ul",null,[n("li",null,[n("a",P,[t(p,{icon:"iconfont icon-github"}),a[17]||(a[17]=n("code",null,"danilowoz/react-content-loader",-1))])]),n("li",null,[n("a",L,[t(p,{icon:"iconfont icon-github"}),a[18]||(a[18]=n("code",null,"buildo/react-placeholder",-1))])]),n("li",null,[n("a",V,[t(p,{icon:"iconfont icon-github"}),a[19]||(a[19]=n("code",null,"dvtng/react-loading-skeleton",-1))])])]),a[73]||(a[73]=n("p",null,"These packages are pretty well-maintained but have their flaws. We’ll look at the pros and cons of each before deciding which to use for our application.",-1)),n("h3",B,[n("a",N,[n("span",null,[t(p,{icon:"iconfont icon-github"}),a[20]||(a[20]=n("code",null,"danilowoz/react-content-loader",-1))])])]),t(r,{name:"danilowoz/react-content-loader",desc:"⚪ SVG-Powered component to easily create skeleton loadings.",url:"https://github.com/danilowoz/react-content-loader/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://repository-images.githubusercontent.com/79509385/fa910a80-e130-11e9-832f-bdb14f4fdcec"}),t(k,{data:[{id:"Pros"},{id:"Cons"},{id:"Usage"}],active:0},{title0:e(({value:o,isActive:l})=>a[21]||(a[21]=[s("Pros")])),title1:e(({value:o,isActive:l})=>a[22]||(a[22]=[s("Cons")])),title2:e(({value:o,isActive:l})=>a[23]||(a[23]=[s("Usage")])),tab0:e(({value:o,isActive:l})=>[n("p",null,[n("a",F,[t(p,{icon:"iconfont icon-github"}),a[24]||(a[24]=n("code",null,"danilowoz/react-content-loader",-1))]),a[25]||(a[25]=s(" is an SVG-based API where you can use any SVG shapes to create the skeleton elements. It also allows users to easily create animated placeholders, which shine from left to right using the pulse animation."))]),a[26]||(a[26]=n("p",null,"This package has a few prestyled content loaders, such as loaders for Facebook or Instagram, and can be used for any complex skeleton UI since SVG supports many shapes.",-1))]),tab1:e(({value:o,isActive:l})=>[a[27]||(a[27]=n("p",null,[s("When using "),n("code",null,"react-content-loader"),s(", you must create custom skeleton components for all your components separately, which can be time-consuming.")],-1)),a[28]||(a[28]=n("p",null,[s("Also, "),n("a",{href:"https://blog.logrocket.com/animating-svg-with-css-83e8e27d739c/",target:"_blank",rel:"noopener noreferrer"},[n("strong",null,"SVG is not the same as CSS elements")]),s(", so creating custom elements with custom alignment requires a steep learning curve.")],-1)),v(" TODO: /blog.logrocket.com/animating-svg-with-css.md "),a[29]||(a[29]=n("p",null,"And finally, browser support might be inconsistent because of the SVG dependencies, so the skeleton might look and feel different on different browsers.",-1))]),tab2:e(({value:o,isActive:l})=>a[30]||(a[30]=[n("p",null,[n("strong",null,[s("Using the "),n("code",null,"react-content-loader"),s(" skeleton component")])],-1),n("p",null,[s("Here’s an example of a skeleton component using "),n("code",null,"react-content-loader"),s(":")],-1),n("div",{class:"code-block-with-title"},[n("div",{class:"code-block-title-bar","data-title":"SkeletonComponent.jsx"},[n("span",null,"SkeletonComponent.jsx")]),n("div",{class:"language-jsx line-numbers-mode","data-highlighter":"prismjs","data-ext":"jsx"},[n("pre",null,[n("code",{class:"language-jsx"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" ContentLoader "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"react-content-loader"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// API support all SVG shapes - rect is a SVG shape for rectangle")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"SkeletonComponent"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"ContentLoader")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("rect")]),s(),n("span",{class:"token attr-name"},"x"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("0"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"y"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("0"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"rx"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("5"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"ry"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("5"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"width"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("70"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"height"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("70"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("rect")]),s(),n("span",{class:"token attr-name"},"x"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("80"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"y"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("17"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"rx"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("4"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"ry"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("4"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"width"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("300"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"height"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("13"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("rect")]),s(),n("span",{class:"token attr-name"},"x"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("80"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"y"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("40"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"rx"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("3"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"ry"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("3"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"width"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("250"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"height"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("10"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"  "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),n("span",{class:"token class-name"},"ContentLoader")]),n("span",{class:"token punctuation"},">")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),n("p",null,[n("code",null,"react-content-loader"),s(" provides a "),n("code",null,"ContentLoader"),s(" component which wraps the SVG elements. This component also has different props to adjust the "),n("code",null,"width"),s(", "),n("code",null,"height"),s(", "),n("code",null,"backgroundColor"),s(", and even "),n("code",null,"speed"),s(" of the animation effect on the skeleton elements.")],-1)])),_:1}),n("p",null,[a[34]||(a[34]=s("You can ")),n("a",W,[a[31]||(a[31]=s("view the list of available props here (")),t(p,{icon:"iconfont icon-github"}),a[32]||(a[32]=n("code",null,"danilowoz/react-content-loader",-1)),a[33]||(a[33]=s(")"))]),a[35]||(a[35]=s("."))]),n("h3",M,[n("a",O,[n("span",null,[t(p,{icon:"iconfont icon-github"}),a[36]||(a[36]=n("code",null,"buildo/react-placeholder",-1))])])]),t(r,{name:"buildo/react-placeholder",desc:"A React component to easily replicate your page with nice placeholders while the content is loading",url:"https://github.com/buildo/react-placeholder/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/93f08df1252e1c23bfc30d99fd76549e724ee0d9b12c622b930b52cd6db3c09c/buildo/react-placeholder"}),t(k,{data:[{id:"Pros"},{id:"Cons"},{id:"Usage"}],active:0},{title0:e(({value:o,isActive:l})=>a[37]||(a[37]=[s("Pros")])),title1:e(({value:o,isActive:l})=>a[38]||(a[38]=[s("Cons")])),title2:e(({value:o,isActive:l})=>a[39]||(a[39]=[s("Usage")])),tab0:e(({value:o,isActive:l})=>a[40]||(a[40]=[n("p",null,"This component-based API makes it easy to create custom skeleton UIs using placeholder components. It also supports pulse animation, which you can control through props.",-1)])),tab1:e(({value:o,isActive:l})=>a[41]||(a[41]=[n("p",null,[s("Similar to "),n("code",null,"react-content-loader"),s(", we need to maintain a skeleton component separately, so updating styles to a component requires possible updates to the skeleton component as well.")],-1),n("p",null,"Similarly, the learning curve is not very linear, since there are multiple components for different needs.",-1)])),tab2:e(({value:o,isActive:l})=>a[42]||(a[42]=[n("p",null,[n("strong",null,[s("Using the "),n("code",null,"react-placeholder"),s(" skeleton component")])],-1),n("p",null,[s("The following is an example of a skeleton component using "),n("code",null,"react-placeholder"),s(":")],-1),n("div",{class:"code-block-with-title"},[n("div",{class:"code-block-title-bar","data-title":"Skeleton.jsx"},[n("span",null,"Skeleton.jsx")]),n("div",{class:"language-jsx line-numbers-mode","data-highlighter":"prismjs","data-ext":"jsx"},[n("pre",null,[n("code",{class:"language-jsx"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" ReactPlaceholder "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"react-placeholder"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"Skeleton"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"ReactPlaceholder")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"showLoadingAnimation"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("media"),n("span",{class:"token punctuation"},'"')])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"ready"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"rows"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"        Hello I am the inner content"),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),n("span",{class:"token class-name"},"ReactPlaceholder")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")])]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),n("p",null,[s("By using the "),n("code",null,"ReactPlaceholder"),s(" component provided to us, we have access to the "),n("code",null,"type"),s(" property, which displays a built-in skeleton layout, depending on its value. Other "),n("code",null,"type"),s(" options include "),n("code",null,"rect"),s(", "),n("code",null,"text"),s(", "),n("code",null,"round"),s(", and more.")],-1),n("p",null,[s("Note that the "),n("code",null,"ready"),s(" prop accepts a boolean. When set to "),n("code",null,"false"),s(", it assumes the content has not loaded. Therefore, the skeleton screen displays. Conversely, the contents of the component render when its value is "),n("code",null,"true"),s(".")],-1),n("p",null,[n("code",null,"react-placeholder"),s(" also gives you the option to display your custom placeholder component using the "),n("code",null,"customPlaceholder"),s(" prop, which accepts a JSX element:")],-1),n("div",{class:"code-block-with-title"},[n("div",{class:"code-block-title-bar","data-title":"Skeleton.jsx"},[n("span",null,"Skeleton.jsx")]),n("div",{class:"language-jsx line-numbers-mode","data-highlighter":"prismjs","data-ext":"jsx"},[n("pre",null,[n("code",{class:"language-jsx"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" TextBlock"),n("span",{class:"token punctuation"},","),s(" RectShape "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"react-placeholder/lib/placeholders"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" ReactPlaceholder "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"react-placeholder"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"const"),s(" customPlaceholder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"RectShape")]),s(),n("span",{class:"token attr-name"},"color"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("blue"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"style"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"width"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"30"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"height"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"30"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TextBlock")]),s(),n("span",{class:"token attr-name"},"rows"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token attr-name"},"color"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("yellow"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"  "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"Skeleton"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"ReactPlaceholder")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"showLoadingAnimation"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("media"),n("span",{class:"token punctuation"},'"')])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"ready"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"customPlaceholder"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),s("customPlaceholder"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token attr-name"},"rows"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"}")])]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"        Hello I am the inner content"),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),n("span",{class:"token class-name"},"ReactPlaceholder")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")])]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),n("p",null,[s("Notice the built-in components, "),n("code",null,"TextBlock"),s(" and "),n("code",null,"RectShape"),s(", which helps us quickly create skeleton layouts.")],-1)])),_:1}),n("h3",D,[n("a",K,[n("span",null,[t(p,{icon:"iconfont icon-github"}),a[43]||(a[43]=n("code",null,"dvtng/react-loading-skeleton",-1))])])]),t(r,{name:"dvtng/react-loading-skeleton: Create skeleton screens that automatically adapt to your app!",desc:"Create skeleton screens that automatically adapt to your app! - dvtng/react-loading-skeleton",url:"https://github.com/dvtng/react-loading-skeleton/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/8585e77adf7d573db96f40c949afb9a2d26ac9e947239dfac2b65f70f2848426/dvtng/react-loading-skeleton"}),t(k,{data:[{id:"Pros"},{id:"Cons"},{id:"Usage"}],active:0},{title0:e(({value:o,isActive:l})=>a[44]||(a[44]=[s("Pros")])),title1:e(({value:o,isActive:l})=>a[45]||(a[45]=[s("Cons")])),title2:e(({value:o,isActive:l})=>a[46]||(a[46]=[s("Usage")])),tab0:e(({value:o,isActive:l})=>[n("p",null,[n("a",Y,[t(p,{icon:"iconfont icon-github"}),a[47]||(a[47]=n("code",null,"dvtng/react-loading-skeleton",-1))]),a[48]||(a[48]=s(" is a very simple API that has only one component with props for extra customization. Unlike the previous two, it’s easy to learn."))]),n("p",null,[n("a",z,[t(p,{icon:"iconfont icon-github"}),a[49]||(a[49]=n("code",null,"dvtng/react-loading-skeleton",-1))]),a[50]||(a[50]=s(" can be used as a separate skeleton component and inside any component directly, so it’s flexible to use the way you want. It also supports animation and theming."))])]),tab1:e(({value:o,isActive:l})=>a[51]||(a[51]=[n("p",null,[s("Although "),n("code",null,"react-loading-skeleton"),s(" is great for simple skeleton UI, it’s difficult for complex skeleton interfaces.")],-1)])),tab2:e(({value:o,isActive:l})=>a[52]||(a[52]=[n("p",null,[n("strong",null,[s("Using the "),n("code",null,"react-loading-skeleton")])],-1),n("p",null,[s("The following is an example of a "),n("code",null,"react-loading-skeleton"),s(":")],-1),n("div",{class:"code-block-with-title"},[n("div",{class:"code-block-title-bar","data-title":"SkeletonCompoent.jsx"},[n("span",null,"SkeletonCompoent.jsx")]),n("div",{class:"language-jsx line-numbers-mode","data-highlighter":"prismjs","data-ext":"jsx"},[n("pre",null,[n("code",{class:"language-jsx"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(" Skeleton"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" SkeletonTheme "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"react-loading-skeleton"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"SkeletonCompoent"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"SkeletonTheme")]),s(),n("span",{class:"token attr-name"},"color"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("#202020"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"highlightColor"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("#444"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("section")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Skeleton")]),s(),n("span",{class:"token attr-name"},"count"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Skeleton")]),s(),n("span",{class:"token attr-name"},"width"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"      "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Skeleton")]),s(),n("span",{class:"token attr-name"},"circle"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token attr-name"},"height"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token attr-name"},"width"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"    "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("section")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}),s(`
`),n("span",{class:"line"},"  "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),n("span",{class:"token class-name"},"SkeletonTheme")]),n("span",{class:"token punctuation"},">")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),n("p",null,[s("For the full tutorial in this article, we’ll use "),n("code",null,"react-loading-skeleton"),s(".")],-1)])),_:1}),a[74]||(a[74]=n("p",null,"That said, all three libraries adequately satisfy simple use cases. Feel free to go through the documentation and choose the one you feel most comfortable using in your application.",-1)),a[75]||(a[75]=n("hr",null,null,-1)),a[76]||(a[76]=n("h2",{id:"building-a-skeleton-ui-in-react-with-framer-motion",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#building-a-skeleton-ui-in-react-with-framer-motion"},[n("span",null,"Building a skeleton UI in React with Framer Motion")])],-1)),n("p",null,[a[54]||(a[54]=s("With an understanding of how skeleton UIs work, we can now create our own skeleton UI with React and Framer Motion with a shimmer animation effect. ")),n("a",X,[t(p,{icon:"iconfont icon-codesandbox"}),a[53]||(a[53]=s("The codebase for this project is available on CodeSandbox"))]),a[55]||(a[55]=s("."))]),t(y,{rtl:"",theme:"dark",title:"Chinwike.M%20%2F%20Drafts%20%2F%20skeletonui-w-framer%20",template:"react",files:"eJylWQlz2zYW/itYbZuRO5YoWT4aVfas4yQbd+2MN3azu40zDURCIm2SYAFQsqLRf9+HgyAoUdc0M3VF4p0f3gVw3vAus6z9xBv9RpRklAk0Rzkn70Yj4otD+fNeYEHQAo0YTdBjgxHsi8fGL4+ppb+En0BzxwgnqU8OUUJFRNOSZ8RwQlhLv1a8lvsKs+Am4qIgbXs+hZWUpIJ7xaKr7n80F/mQ3D+TmAhQYvm4edPiPiMk5Z6hrOqb6ZdvscAlawBPhoy8KLKAjHAeg1V56itfAKXmAZo/pgj5NAV7v0yigFB+iDgRn9XPr+jc4tX88vUA5FniiN9QHETpWNFfF08VFsFyIpkkm92CJmg9v9CKUYXX0ssFrUZEADOIBLIH+AmuVtmVAG1s0wGiELIkf4RjbhUsDlHvqNMpHj0Pdg72OkYiJEbvNIxigvI0oXkqQICmZETkLEXaDj8mmBWmKS4tEKRrwORDwaH5B0E0AT7M+UcIovPHBuzEY+OisHgwzIUMA5pexZH/fD7XiiqO/M2if7C4eKDjMZgZ6xdo4GkBpcClaLYLCM2tHPTqFRosRyJ5icT5fI5ohv1IzPqogxYL5F0sHAmlKVKEcdEo1unRlv5GaSQiHK9Kw9q4ykIXFhwrlR4dnO0EZ81mDBl0CCID8qKwqWhVmjkEmgzyZzI7nyvCZYGKLDyqbIThaolIxJBlF3OpqG3eLgZeeFQnxCa8pD5XPBKkOnWs5v3AMwqWVg4OHJglWYmmQ1kSDbz6fR54BYcMRyBvHDaWS5Iulzrl5DNkXHOOIkGSQ+SHOE0hLRZl3i3FcxxVUPRBgBvPuLQ2ZGR0Pv8WCpHxvudNp9O2ytr2kHg/zKW+dhQsvjmOC8zGRIDUP4YxTp8fG+USIzG8TynNSArJmlIQThgjzCVaNqwVR64UB8lBlIwRZz7Ei7IjwWMC4RnDlqoXKigWqwIV4WOjsrOD8HiV0EaVIw5i6tjly1bZDP4Ootrai7lZASGRK8PL3KflYqNkJkSwyOdLMrVhk4hM+QK9GuZx/It5l+VDCOuQBM7OlHGln7CNt1ibo8KtrgXJCIP3NXEo06jSulUw2q4mn0xXK2NVpZ6KV5l5G8I0jytASGoHAJ3r0ltTZHT0l0XGdhwrWGW+W2JUxuhwgUDRu6MLQrvYKwgT25sWRfIOvDzeDpl0dBW2+zBKoOssDTy7zCsaQsMvEVyLXFl5CtOdcv7SR63TjqzlxaJT0mGx26ksCoZTDsw0hfUS0iBnWL4E+vbJoQt1RrDoo+t0JHXOVpbekhjLlmFBtZoqlV17WST+xUo1XYu8wacGeNMlK8hDlJZzW9vnkGIu1kVjVeEqZhlMoSXomkZZTTiQfCvkoB/mknbxrTpOLKX23HAuwDnp1VqHjFTj0bohc++AMqQrY2xl/i1WKxwmAusZio1zYDQWahTb7XbGaMY3JL7ZatNma0K4MpHURHFlMKkNrwLEKcNZ5nageWGf4SsL5pbZwym0FlIZBUBqSJyOY0YT+7i51IFVl4zhWfP1gVv+26MojpvVV7WVcGncqu//G0evVZfCPBmmOII2VzcibWqnNXPWdsDKJlbpv/t24XX6yAvgXavO7c37d+g1+kIcj1oblFZHxkqTLv4506btRlqXyc5Crq2c7tRaVM+lUmMS1VQaeSZ1B0334HqOvkg59lCoRPehGvyKJ/jeZ1Em0EMuKIOM5Wg4g2JByBUNyBVO4PBkuoLZJMnnrrcpG1sa1eH7Wp385/SgKJCcd8+/f6Rnt+8/vi+Z1Kqc8yRBMb3CvKinVyiWULG8SeQ5vF6CX2AQN1C0n7KqNBWSUtoNnB9T5LjZQu9h8kJXNGecoBFl6A0ZR+AXg2hwJKg5TUrotl/f6qfKup3ZJM1rKOCpCDnCY1oWp4UlX0HhCX/+eNdLry8nnb1RcHh3RaH0/xB9eLi9OURX9/cAxSfqP6M7DCUV3fsR55Rx9E9Ik3okjrqn/9qGRBfNAPGdcRBHV+/Gd3zKe7/tjYPDuysOKhnu4R7Ehw4GUwBOA3QZjyHuRZhwqMFOpNRjcHJ8thWDo/0wSP748GvvKc/fT4B+Twwc3n1iAYYRmQt3jD5BLbCp30dv8gDOg/Lyqt79s5Ot3u+dC713ty9vnv+8Ov6+fy44vLv6f50KRpGgKtDRWzIhMc0SmIbQFKJgawB0292t5aC3LwR/Xh/3Zv/t/pvc3O4NgcO7KwQPcAV3BUMgdDmCPsn7WfQfMiywgGKgq+OaEHjeWgO69f7rH1/l/zQWq/3oPsFQnLkgMHFCA1a21fUfXdbVht1hmJV37z+zePj5+/Wb8O31/lA7vLtCbe/DyQu0SrhHhOY6zKNY3ehhJKeKFo++E+XcWI62tUF3/PP2mAvwbPeI+/03fvb97Onl/sP+Sefw7grDeyL8EF3eXYOVUIKh0Oqwy7nEwV5eo5DS53V9+HVvGwan+2HQSXB6cp1c5vH+o4jDuysGtzjFMGmMEdyiwdghe09xqcxViFgwPpEg99fFwllnew8GGDbk3mP6te7k6gyMS4dXedKGubJtT8wKSu8nNMHQNoYxdFLuQ+EIUEgYQRj+S6lA8rzs+xGsGzOg6OJ0hkCIrbegE9KglJwBMywZEsn3kyf/tlr2EKgAbYUkGodwc3HUyV7Ulc8KxTQKRNhHp50fV9Zl1hUCukc1AiSB4X9d4S/Z4VDQRyerwqF/wK2qFX9WY58hMQrqKOyBrTTz541kRhbcBkmDJNkQ+89jBp9WICb+HgTyShAhOiFsFNNpH4VREBB5S4FQApfAkbwaAg2oo14NKQvg/oFBeOYQdcdKNQSO3ajiKK5DIaP6zqkvb43homkiDyW12kCGI0Vf02oZhaMQU801u62//RhXa+nUmibTXrWGFL7WJOAcI8mSD225kZuVl4GyUbcNF/MNoFSht3qjkkrAbFLjho2mW9omHY1VF4sI2eznUrhtdLYacyse29PyX0S2kmlWizkuL0UdHnIa50JHnRv4bDzEzaOTk0NU/um0e1qloBncSamfMRmBjfq3saRnUtsmoE4t84WHixmUvaIwwrysTYJWYOvGaZGwRX51EIZBW70awXyk+j7IPS2SC/xTd+xKUhDxTF29jmKixTzlXESjWQuO9wJqYx9xuDcjrSERU7hZ1GKBVmVmH8m/2jUQ2VLm9qEqpxqjDAey8WiXTU66N2SFNyqFFE497Y2mlXcomqSU3pK3JY4KA4OPY7/Z6/0Ip01ZX9zc1MW7MEEJVd+PivvamLI+jArQUyJ5Mw8bJsMhID4tLrONMsutOnc17izk1QpZ2Sr7jg7leag1ioDRl9XLFb4GGOlVXcGpuFV85VvhPqlnLl67cWKL8GMKrfdB9l3BVXv8R0KCCKNm1SWJtlZYxmfFbfisYNSo8cDZ1eruQVmB3TuCPmk+vpdW3NIhfMNfa8Xp8VYjLPZuUKJuAcBayyyftqax+D8ebP7s",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrVkpJLUjNS0nNS85MLVayqlZKK0rMTS3Szc0vyczPU7JSMtMz0rNQqq0FAEczDlQ="}),a[77]||(a[77]=u(`<h3 id="designing-the-skeleton-layout" tabindex="-1"><a class="header-anchor" href="#designing-the-skeleton-layout"><span>Designing the skeleton layout</span></a></h3><p>Before constructing the Skeleton UI, let’s first consider how content is structured on a fully-loaded version of the page. In this case, we’ll replicate the YouTube UI and create the skeleton UI for it:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> CardList <span class="token keyword">from</span> <span class="token string">&quot;./components/CardList&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Youtube fake data</span></span>
<span class="line"><span class="token keyword">import</span> youtubeData <span class="token keyword">from</span> <span class="token string">&quot;./data&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Styles for the layout</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;./App.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// App component - each section have multiple videos</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"> <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>App<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">            </span>
<span class="line">      </span><span class="token punctuation">{</span>youtubeData<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>section-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>list<span class="token punctuation">.</span>section<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CardList</span></span> <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),n("p",null,[a[56]||(a[56]=s("Here, we import a ")),t(p,{icon:"fa-brands fa-js"}),a[57]||(a[57]=n("code",null,"data.js",-1)),a[58]||(a[58]=s(" file which is an array of mock YouTube data:"))]),a[78]||(a[78]=u(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="data.js"><span>data.js</span></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> youtubeData <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">section</span><span class="token operator">:</span> <span class="token string">&quot;JavaScript Tutorials by freeCodeCamp&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">&quot;freeCodeCamp.org&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;PkZNo7MFNFg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">&quot;https://img.youtube.com/vi/PkZNo7MFNFg/maxresdefault.jpg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Learn JavaScript - Full Course for Beginners&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">views</span><span class="token operator">:</span> <span class="token string">&quot;1.9M views&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">published</span><span class="token operator">:</span> <span class="token string">&quot;9 months ago&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;jaVNP3nIAv0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">&quot;https://img.youtube.com/vi/jaVNP3nIAv0/maxresdefault.jpg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;JavaScript, HTML, CSS - Rock Paper Scissors Game&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">views</span><span class="token operator">:</span> <span class="token string">&quot;216K views&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">published</span><span class="token operator">:</span> <span class="token string">&quot;1 year ago&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">section</span><span class="token operator">:</span> <span class="token string">&quot;Small steps on React&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">&quot;Learn with Param&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;ylbVzIBhDIM&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">&quot;https://img.youtube.com/vi/ylbVzIBhDIM/maxresdefault.jpg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;useState example by building a text-size changer&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">views</span><span class="token operator">:</span> <span class="token string">&quot;148 views&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">published</span><span class="token operator">:</span> <span class="token string">&quot;3 days ago&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> youtubeData<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>We can then map over this data and render JSX for the section element displaying a heading and the <code>CardList</code> component.</p><p>Considering that our data is fetched locally, we must mock a request to a backend by using <code>setTimeout</code>:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> CardList <span class="token keyword">from</span> <span class="token string">&quot;./components/CardList&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> youtubeData <span class="token keyword">from</span> <span class="token string">&quot;./data&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;./App.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>videos<span class="token punctuation">,</span> setVideos<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Load this effect on mount</span></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setVideos</span><span class="token punctuation">(</span>youtubeData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// Cancel the timer while unmounting</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>App<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token punctuation">{</span>videos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">...</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>By using state and the <code>useEffect</code> Hook, we can render <code>CardList</code> after a 5-second mock backend request.</p><p>Let’s now see how <code>CardList</code> visually represents the YouTube data</p><h3 id="using-the-cardlist-component" tabindex="-1"><a class="header-anchor" href="#using-the-cardlist-component"><span>Using the <code>CardList</code> component</span></a></h3><p><code>CardList</code> is a <code>ul</code> element that takes the YouTube data as a value for the <code>list</code> prop and maps over the list of videos to produce a subsequent <code>Card</code> component:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/CardList.jsx"><span>components/CardList.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">&quot;./Card&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">CardList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> list <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token punctuation">{</span>list<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Card</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token attr-name">item</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span> <span class="token attr-name">channel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">.</span>channel<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> CardList<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p><code>Card</code> is an <code>li</code> element that displays the details of each YouTube video:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/Card.jsx"><span>components/Card.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Card</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> item<span class="token punctuation">,</span> channel <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span></span>
<span class="line">        <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://www.youtu.be/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>noopener noreferrer<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-link<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>image<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-image<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-channel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>channel<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-metrics<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>views<span class="token punctuation">}</span><span class="token plain-text"> &amp;bull; </span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>published<span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Card<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>At this point, our application displays a white screen before rendering <code>CardList</code>. Let’s create our own skeleton UI to replace the blank screen.</p><h3 id="creating-the-skeleton-component" tabindex="-1"><a class="header-anchor" href="#creating-the-skeleton-component"><span>Creating the <code>Skeleton</code> component</span></a></h3><p>To begin creating our <code>Skeleton</code> component, let’s create a <code>Skeleton.js</code> file in the <code>components</code> folder and a <code>skeleton.css</code> style sheet in the project’s root:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/Skeleton.jsx"><span>components/Skeleton.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;../skeleton.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Skeleton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> classes <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">skeleton </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classes<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Skeleton<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,15)),t(p,{icon:"fa-brands fa-react"}),a[79]||(a[79]=u(`<code>Skeleton.jsx</code> is the base <code>Skeleton</code> component that accepts a <code>type</code> prop in which we specify the type of skeleton element needed. The prop’s value is then appended to the class list:<div class="code-block-with-title"><div class="code-block-title-bar" data-title="skeleton.css"><span>skeleton.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.skeleton</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">--skeleton-title-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-title-width</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-text-height</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-text-width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skelton-text-half</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-avatar-height</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-avatar-width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-thumbnail-height</span><span class="token punctuation">:</span> 180px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--skeleton-thumbnail-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.skeleton-wrapper</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.skeleton.title</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-title-height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-title-width<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.skeleton.text</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-text-height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-text-width<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.skeleton.avatar</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-avatar-height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-avatar-width<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.skeleton.thumbnail</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-thumbnail-height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-thumbnail-width<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.skeleton.half-text</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skeleton-text-height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--skelton-text-half<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.shimmer</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 30%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>With this setup, you can now create full skeleton UIs by piecing these micro components together. I created a <code>skeleton-screens</code> folder that stores the <code>YouTube.js</code> file for the skeleton UI of a YouTube page.</p>`,8)),n("p",null,[a[60]||(a[60]=s("When creating this page, we’ll use Framer Motion to animate the shimmer effect of the skeleton UI. If you’re ")),t(m,{to:"/blog.logrocket.com/framer-motion-tutorial.html"},{default:e(()=>a[59]||(a[59]=[n("strong",null,"unfamiliar with to Framer Motion, you can read this post",-1)])),_:1,__:[59]}),a[61]||(a[61]=s(" for a beginner introduction."))]),a[80]||(a[80]=u(`<h3 id="creating-the-shimmer-animation-with-framer-motion" tabindex="-1"><a class="header-anchor" href="#creating-the-shimmer-animation-with-framer-motion"><span>Creating the shimmer animation with Framer Motion</span></a></h3><p>By using the <code>motion</code> function from <code>framer-motion</code>, we’re able to animate the <code>Skeleton</code> component.</p><p>In Framer Motion, the <code>initial</code> prop specifies the starting point of the animation while the <code>animate</code> prop determines the final state of the animation. By altering the <code>opacity</code>, we can create a fade-in effect on the skeleton UI:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="youtube.jsx"><span>youtube.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> motion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;framer-motion&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Skeleton <span class="token keyword">from</span> <span class="token string">&quot;../components/Skeleton&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Shimmer <span class="token keyword">from</span> <span class="token string">&quot;../components/Shimmer&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Youtube</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>motion.section</span></span>
<span class="line">      <span class="token attr-name">initial</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">animate</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>skeleton-wrapper<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>section-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Skeleton</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Skeleton</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>thumbnail<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Skeleton</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-channel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Skeleton</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-metrics<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Skeleton</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>half-text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Shimmer</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>motion.section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Youtube<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Notice the <code>Shimmer</code> component within. We can also animate this component with Framer Motion to create the desired loading effect:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="components/Shimmer.js"><span>components/Shimmer.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> motion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;framer-motion&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Shimmer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>motion.div</span></span>
<span class="line">      <span class="token attr-name">initial</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">600</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">animate</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">transition</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token number">Infinity</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">repeatDelay</span><span class="token operator">:</span> <span class="token number">1</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shimmer<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>motion.div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Shimmer<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,6)),n("p",null,[a[62]||(a[62]=s("From our ")),t(p,{icon:"fa-brands fa-css3-alt"}),a[63]||(a[63]=n("code",null,"skeleton.css",-1)),a[64]||(a[64]=s(" stylesheet, we can see that the rules applied to ")),a[65]||(a[65]=n("code",null,".shimmer",-1)),a[66]||(a[66]=s(" creates a transparent element positioned at the left side of ")),a[67]||(a[67]=n("code",null,"skeleton-wrapper",-1)),a[68]||(a[68]=s("."))]),a[81]||(a[81]=u(`<p>We then use <code>initial</code> to set the initial position of the screen’s shimmer element and <code>animate</code> 1000px to the right. The <code>transition</code> prop then offers extra options to modify the repetition and duration of the animation.</p><p>At this point, the skeleton interface is complete. Now, let’s see how to use the <code>Youtube</code> skeleton before loading actual data.</p><h3 id="using-the-youtube-skeleton" tabindex="-1"><a class="header-anchor" href="#using-the-youtube-skeleton"><span>Using the <code>Youtube</code> skeleton</span></a></h3><p>Next, let’s create an <code>isLoading</code> state to conditionally render the <code>Youtube</code> skeleton:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AnimatePresence<span class="token punctuation">,</span> motion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;framer-motion&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> CardList <span class="token keyword">from</span> <span class="token string">&quot;./components/CardList&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> YoutubeSkeleton <span class="token keyword">from</span> <span class="token string">&quot;./skeleton-screens/Youtube&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> youtubeData <span class="token keyword">from</span> <span class="token string">&quot;./data&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>videos<span class="token punctuation">,</span> setVideos<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setIsLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// activate loading state when component mounts</span></span>
<span class="line">    <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setVideos</span><span class="token punctuation">(</span>youtubeData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// disable loading after 5 seconds</span></span>
<span class="line">      <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// Cancel the timer while unmounting</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>App<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>isLoading <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">YoutubeSkeleton</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span><span class="token operator">!</span>isLoading <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token punctuation">{</span>videos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>section-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>list<span class="token punctuation">.</span>section<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CardList</span></span> <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>We now have a fully-functional example of a skeleton UI. But, you’ll notice an abrupt flicker when the Skeleton UI unmounts the application. We can use the <code>AnimatePresence</code> component from <code>framer-motion</code> to create an exit animation for the Skeleton UI.</p><h3 id="creating-an-exit-animation-with-animatepresence" tabindex="-1"><a class="header-anchor" href="#creating-an-exit-animation-with-animatepresence"><span>Creating an exit animation with <code>AnimatePresence</code></span></a></h3><p>Wrapping <code>AnimatePresence</code> around a <code>motion</code> component enables us to use an <code>exit</code> prop that we can specify how we want to animate the component—much like in <code>initial</code> and <code>animate</code>.</p><p>In our case, we want the YouTube skeleton to fade out by setting its <code>opacity</code> to 0:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AnimatePresence<span class="token punctuation">,</span> motion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;framer-motion&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> CardList <span class="token keyword">from</span> <span class="token string">&quot;./components/CardList&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> YoutubeSkeleton <span class="token keyword">from</span> <span class="token string">&quot;./skeleton-screens/Youtube&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> youtubeData <span class="token keyword">from</span> <span class="token string">&quot;./data&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>videos<span class="token punctuation">,</span> setVideos<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setIsLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setVideos</span><span class="token punctuation">(</span>youtubeData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// Cancel the timer while unmounting</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>App<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AnimatePresence</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>isLoading <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">YoutubeSkeleton</span></span> <span class="token attr-name">exit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span><span class="token operator">!</span>isLoading <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>motion.div</span> <span class="token attr-name">initial</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">animate</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token punctuation">{</span>videos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>section-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>list<span class="token punctuation">.</span>section<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CardList</span></span> <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>motion.div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">AnimatePresence</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Because we can’t append <code>motion</code> directly to <code>YoutubeSkeleton</code>, its props will destructure in <code>YouTube.js</code>, and spread into the parent <code>section</code> element, which is a <code>motion</code> element:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="youtube.js"><span>youtube.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> motion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;framer-motion&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Skeleton <span class="token keyword">from</span> <span class="token string">&quot;../components/Skeleton&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Shimmer <span class="token keyword">from</span> <span class="token string">&quot;../components/Shimmer&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Youtube</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>motion.section</span></span>
<span class="line">      <span class="token attr-name">initial</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">animate</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>skeleton-wrapper<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token punctuation">{</span><span class="token comment">/* code... */</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>motion.section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Youtube<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>This way, we can see a smooth fade-out animation as the skeleton screen exits the <code>CardList</code> component’s screen.</p><p>And here is the final skeleton UI with the shimmer animation:</p><figure><img src="https://blog.logrocket.com/wp-content/uploads/2022/02/Skelton-shimmer-final-app.webp" alt="Final Shimmer Skeleton UI Effect, Shows Two Grey Panels On A White Background That Shimmer While Loading. It Then Renders Mock YouTube Data To Show Two Video Thumbnails" tabindex="0" loading="lazy"><figcaption>Final Shimmer Skeleton UI Effect, Shows Two Grey Panels On A White Background That Shimmer While Loading. It Then Renders Mock YouTube Data To Show Two Video Thumbnails</figcaption></figure><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>Skeleton screens significantly improve UX by mitigating the user frustrations associated with entirely blank screens and giving users an idea of what content will look like before it loads.</p><p>And, it’s easy to use skeleton UI in your React applications.</p><p>If you don’t want to use an existing package, you can also create your own skeleton UI pretty easily by creating div elements that mimic skeletons by creating rectangle and circle elements.</p><p>Share your experience with using skeleton UI in the comment section.</p>`,21)),v(" TODO: add ARTICLE CARD "),t(d,g(b({title:"Improve React UX with skeleton UIs",desc:"Learn how to use skeleton UIs in your React apps to make your interface feel faster, more responsive, and richer to improve user experience.",link:"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/improve-react-ux-skeleton-ui.html",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16)])}const Z=f(A,[["render",G]]),Q=JSON.parse('{"path":"/blog.logrocket.com/improve-react-ux-skeleton-ui.html","title":"Improve React UX with skeleton UIs","lang":"en-US","frontmatter":{"lang":"en-US","title":"Improve React UX with skeleton UIs","description":"Article(s) > Improve React UX with skeleton UIs","icon":"fa-brands fa-react","category":["Node.js","React.js","Article(s)"],"tag":["blog","blog.logrocket.com","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Improve React UX with skeleton UIs\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/banner.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/Medium-skeleton-ui.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/Facebook-page-without-skeleton-ui.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/Facebook-skeleton-UI.png\\",\\"https://blog.logrocket.com/wp-content/uploads/2022/02/Skelton-shimmer-final-app.webp\\"],\\"datePublished\\":\\"2022-02-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paramanantham Harrison\\",\\"url\\":\\"https://blog.logrocket.com/author/paramananthamharrison/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/improve-react-ux-skeleton-ui.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Improve React UX with skeleton UIs"}],["meta",{"property":"og:description","content":"Article(s) > Improve React UX with skeleton UIs"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Improve React UX with skeleton UIs"}],["meta",{"property":"article:author","content":"Paramanantham Harrison"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2022-02-28T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Improve React UX with skeleton UIs"},{"property":"og:description","content":"Improve React UX with skeleton UIs"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/improve-react-ux-skeleton-ui.html"}]],"prev":"/programming/js-react/articles/README.md","date":"2022-02-28T00:00:00.000Z","isOriginal":false,"author":[{"name":"Paramanantham Harrison","url":"https://blog.logrocket.com/author/paramananthamharrison/"}],"cover":"/assets/image/blog.logrocket.com/improve-react-ux-skeleton-ui/banner.png"},"git":{},"readingTime":{"minutes":14.55,"words":4364},"filePathRelative":"blog.logrocket.com/improve-react-ux-skeleton-ui.md","copyright":{"author":"Paramanantham Harrison"}}');export{Z as comp,Q as data};
