import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as s,f as e,b as o,a as l,t as f,n as d,g as k,w as p,e as a,r as u,o as h}from"./app-BVguHYKu.js";const g={},w={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},C={class:"table-of-contents"},S={href:"https://developer.android.com/quick-guides/content/video/advanced-layouts-compose",target:"_blank",rel:"noopener noreferrer"},x={href:"https://medium.com/androiddevelopers/understanding-nested-scrolling-in-jetpack-compose-eb57c1ea0af0",target:"_blank",rel:"noopener noreferrer"},O={href:"https://medium.com/androiddevelopers/understanding-nested-scrolling-in-jetpack-compose-eb57c1ea0af0",target:"_blank",rel:"noopener noreferrer"},I={class:"hint-container info"},B={href:"https://proandroiddev.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout-6615873c0b5d",target:"_blank",rel:"noopener noreferrer"};function M(m,n){const r=u("VPCard"),t=u("router-link"),i=u("SiteInfo"),c=u("VPIcon");return h(),b("div",null,[s("h1",w,[s("a",y,[s("span",null,f(m.$frontmatter.title)+" ê´€ë ¨",1)])]),e(r,d(k({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",C,[s("ul",null,[s("li",null,[e(t,{to:"#our-goal-the-final-header-states"},{default:p(()=>n[0]||(n[0]=[a("Our Goal: The final header states")])),_:1,__:[0]})]),s("li",null,[e(t,{to:"#ui-composition-overview"},{default:p(()=>n[1]||(n[1]=[a("UI Composition Overview")])),_:1,__:[1]})]),s("li",null,[e(t,{to:"#breaking-down-expandedheader"},{default:p(()=>n[2]||(n[2]=[a("Breaking Down ExpandedHeader")])),_:1,__:[2]})]),s("li",null,[e(t,{to:"#the-role-of-nestedscrollconnection"},{default:p(()=>n[3]||(n[3]=[a("The Role of NestedScrollConnection")])),_:1,__:[3]})]),s("li",null,[e(t,{to:"#implementing-nestedscrollconnection-with-the-header"},{default:p(()=>n[4]||(n[4]=[a("Implementing NestedScrollConnection with the header?")])),_:1,__:[4]})]),s("li",null,[e(t,{to:"#bring-it-all-together"},{default:p(()=>n[5]||(n[5]=[a("Bring It All Together")])),_:1,__:[5]})]),s("li",null,[e(t,{to:"#challenges-faced-ðŸš§-and-solvedðŸ’ª"},{default:p(()=>n[6]||(n[6]=[a("Challenges! Faced ðŸš§ and SolvedðŸ’ª")])),_:1,__:[6]}),s("ul",null,[s("li",null,[e(t,{to:"#_1"},{default:p(()=>n[7]||(n[7]=[a("1.")])),_:1,__:[7]})]),s("li",null,[e(t,{to:"#_2"},{default:p(()=>n[8]||(n[8]=[a("2.")])),_:1,__:[8]})]),s("li",null,[e(t,{to:"#_3"},{default:p(()=>n[9]||(n[9]=[a("3.")])),_:1,__:[9]})]),s("li",null,[e(t,{to:"#_4"},{default:p(()=>n[10]||(n[10]=[a("4.")])),_:1,__:[10]})]),s("li",null,[e(t,{to:"#_5"},{default:p(()=>n[11]||(n[11]=[a("5.")])),_:1,__:[11]})])])])])]),n[38]||(n[38]=s("hr",null,null,-1)),e(i,{name:"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout",desc:"In Jetpack Compose, building a collapsible header with a custom navigation bar can be straightforward using NestedScrollConnectionâ€”provided the header has fixed expanded and collapsed heights. However, when the header height is dynamic and depends on its content (e.g., based on backend responses), things get tricky. Using onGloballyPositioned to measure the header's height alone may not suffice. To address this, I combined NestedScrollConnection with SubComposeLayout, as it handles dynamic header content effectively.",url:"https://droidcon.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/12/1_P_Gj7ABxGbbaZdCfHefM4w-1024x821.webp"}),n[39]||(n[39]=o(`<figure><img src="https://droidcon.com/wp-content/uploads/2024/12/1_P_Gj7ABxGbbaZdCfHefM4w-1024x821.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>In Jetpack Compose, building a collapsible header with a custom navigation bar can be straightforward usingNestedScrollConnectionâ€”provided the header has fixed expanded and collapsed heights. However, when the header height is dynamic and depends on its content (e.g., based on backend responses), things get tricky. UsingonGloballyPositionedto measure the headerâ€™s height alone may not suffice. To address this, I combinedNestedScrollConnectionwithSubComposeLayout, as it handles dynamic header content effectively.</p></blockquote><hr><h2 id="our-goal-the-final-header-states" tabindex="-1"><a class="header-anchor" href="#our-goal-the-final-header-states"><span>Our Goal: The final header states</span></a></h2><p>Letâ€™s start by looking at the two final states of the header that weâ€™ll achieve using<code>NestedScrollConnection</code>and<code>SubComposeLayout</code>in Jetpack Compose.</p><figure><img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*mxEou6UEf4mk4l3hV1K-3g.gif" alt="Header transition from expanded form to collapsed form and vice versa" tabindex="0" loading="lazy"><figcaption>Header transition from expanded form to collapsed form and vice versa</figcaption></figure><hr><h2 id="ui-composition-overview" tabindex="-1"><a class="header-anchor" href="#ui-composition-overview"><span>UI Composition Overview</span></a></h2><p>To better understand how this UI is structured, letâ€™s break it down. The layout uses a<code>Box</code>composable containing a<code>Column</code>. Within the<code>Column</code>, we have two key components: the<code>ExpandedHeader</code>and the<code>LazyColumn</code>. Iâ€™ll dive deeper into the<code>nestedScroll(connection)</code>and<code>scrollable</code>implementations in the following sections.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="collapsible_thing.kt"><span>collapsible_thing.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">CollapsibleThing</span><span class="token punctuation">(</span>modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Surface</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>tertiary</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">nestedScroll</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">scrollable</span><span class="token punctuation">(</span></span>
<span class="line">                orientation <span class="token operator">=</span> Orientation<span class="token punctuation">.</span>Vertical<span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// state for Scrollable, describes how consume scroll amount</span></span>
<span class="line">                state <span class="token operator">=</span></span>
<span class="line">                rememberScrollableState <span class="token punctuation">{</span> delta <span class="token operator">-&gt;</span></span>
<span class="line">                    <span class="token number">0f</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">ExpandedHeader</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                <span class="token function">LazyColumn</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span>weight <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">items</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">ListItem</span><span class="token punctuation">(</span>item <span class="token operator">=</span> it<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,10)),l(" @ include: https://gist.github.com/shoaibmushtaq25/a9dd4e7e1ca7f4eef3b9402db365e944/raw/5f0aa867940ae33645432907f161319c9188aff5/collapsible_thing.kt "),n[40]||(n[40]=s("hr",null,null,-1)),n[41]||(n[41]=s("h2",{id:"breaking-down-expandedheader",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#breaking-down-expandedheader"},[s("span",null,"Breaking Down ExpandedHeader")])],-1)),s("p",null,[n[13]||(n[13]=o('The<code>ExpandedHeader</code>consists of two parts: the header and the navigation bar. To implement this, we use<code>SubComposeLayout</code>, creating two placeablesâ€”one for the header and another for the navigation bar. The<code>HeaderContent</code>represents the expanded state, while the<code>NavBar</code>corresponds to the collapsed state during transitions.<br> If youâ€™re new to<code>SubComposeLayout</code>in Jetpack Compose, I highly recommend exploring these resources for a deeper understanding:<a href="https://cs.android.com/androidx/platform/tools/dokka-devsite-plugin/+/master:testData/compose/samples/ui/samples/SubcomposeLayoutSample.kt" target="_blank" rel="noopener noreferrer"><em><code>SubComposeLayoutSample</code></em></a>and',15)),s("a",S,[e(c,{icon:"fa-brands fa-android"}),n[12]||(n[12]=s("em",null,"Advanced Layouts in Compose",-1))]),n[14]||(n[14]=a("."))]),n[42]||(n[42]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="expanded_header.kt"><span>expanded_header.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ExpandedHeader</span><span class="token punctuation">(</span>modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//To simulate Header Content</span></span>
<span class="line">    <span class="token function">SubcomposeLayout</span><span class="token punctuation">(</span>modifier<span class="token punctuation">)</span> <span class="token punctuation">{</span> constraints <span class="token operator">-&gt;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> headerPlaceable <span class="token operator">=</span> <span class="token function">subcompose</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;header&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> modifier<span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Cyan<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    contentAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>BottomStart</span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Image</span><span class="token punctuation">(</span></span>
<span class="line">                        painter <span class="token operator">=</span> <span class="token function">painterResource</span><span class="token punctuation">(</span>id <span class="token operator">=</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>texture_image<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Header Image&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        contentScale <span class="token operator">=</span> ContentScale<span class="token punctuation">.</span>Crop<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">Image</span><span class="token punctuation">(</span></span>
<span class="line">                            painter <span class="token operator">=</span> <span class="token function">painterResource</span><span class="token punctuation">(</span>id <span class="token operator">=</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>logo<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                            contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Logo Image&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                            contentScale <span class="token operator">=</span> ContentScale<span class="token punctuation">.</span>Crop<span class="token punctuation">,</span></span>
<span class="line">                        <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token function">HeaderContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">Divider</span><span class="token punctuation">(</span>color <span class="token operator">=</span> Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">,</span> modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>constraints<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> navBarPlaceable <span class="token operator">=</span> <span class="token function">subcompose</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;navBar&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">NavBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>constraints<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        connection<span class="token punctuation">.</span>maxHeight <span class="token operator">=</span> headerPlaceable<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        connection<span class="token punctuation">.</span>minHeight <span class="token operator">=</span> navBarPlaceable<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> space <span class="token operator">=</span> <span class="token function">IntSize</span><span class="token punctuation">(</span></span>
<span class="line">            constraints<span class="token punctuation">.</span>maxWidth<span class="token punctuation">,</span></span>
<span class="line">            headerPlaceable<span class="token punctuation">.</span>height <span class="token operator">+</span> connection<span class="token punctuation">.</span>headerOffset<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">layout</span><span class="token punctuation">(</span>space<span class="token punctuation">.</span>width<span class="token punctuation">,</span> space<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            headerPlaceable<span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> connection<span class="token punctuation">.</span>headerOffset<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            navBarPlaceable<span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span></span>
<span class="line">                Alignment<span class="token punctuation">.</span>TopCenter<span class="token punctuation">.</span><span class="token function">align</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">IntSize</span><span class="token punctuation">(</span>navBarPlaceable<span class="token punctuation">.</span>width<span class="token punctuation">,</span> navBarPlaceable<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    space<span class="token punctuation">,</span></span>
<span class="line">                    layoutDirection</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">NavBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> alphaValue <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    alphaValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> connection<span class="token punctuation">.</span>progress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">coerceIn</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">1f</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//To Simulate Navigation BAR</span></span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span></span>
<span class="line">                width <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Gray<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* TODO: Handle back action */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                    imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>ArrowBack<span class="token punctuation">,</span></span>
<span class="line">                    contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Back&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    tint <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Navigation Bar&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* TODO: Handle search action */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">                    imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Menu<span class="token punctuation">,</span></span>
<span class="line">                    contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Search&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    tint <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">HeaderContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">HeaderItem</span><span class="token punctuation">(</span></span>
<span class="line">        Modifier</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span></span>
<span class="line">                width <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Gray<span class="token punctuation">,</span> shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Header content item 1&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token function">HeaderItem</span><span class="token punctuation">(</span></span>
<span class="line">        Modifier</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span></span>
<span class="line">                width <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Gray<span class="token punctuation">,</span> shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Header content item 2&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),l(" @include: https://gist.github.com/shoaibmushtaq25/91ac829a32af715fce8e852a4f15949a/raw/8ecaf3c26385e9787b54eb3019db09b13f2a3339/expanded_header.kt "),n[43]||(n[43]=s("hr",null,null,-1)),n[44]||(n[44]=s("h2",{id:"the-role-of-nestedscrollconnection",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-role-of-nestedscrollconnection"},[s("span",null,"The Role of NestedScrollConnection")])],-1)),n[45]||(n[45]=s("p",null,[a("By default, the header isnâ€™t scrollable â€” only the lazy list is. However, our goal is to allow the header to move upward in sync with the scroll offset of the lazy list. This is where"),s("code",null,"NestedScrollConnection"),a("becomes essential.")],-1)),s("p",null,[n[18]||(n[18]=a("For a deeper dive into")),n[19]||(n[19]=s("code",null,"NestedScrollConnection",-1)),n[20]||(n[20]=a(", check out")),s("a",x,[n[15]||(n[15]=a("this blog post (")),e(c,{icon:"fa-brands fa-medium"}),n[16]||(n[16]=s("code",null,"androiddevelopers",-1)),n[17]||(n[17]=a(")"))]),n[21]||(n[21]=a(". Below, Iâ€™ll share my implementation of")),n[22]||(n[22]=s("code",null,"NestedScrollConnection",-1)),n[23]||(n[23]=a(", focusing on its")),n[24]||(n[24]=s("code",null,"onPreScroll",-1)),n[25]||(n[25]=a("and")),n[26]||(n[26]=s("code",null,"onPostScroll",-1)),n[27]||(n[27]=a("overrides."))]),n[46]||(n[46]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="CollapsingAppBarNestedScrollConnection.kt"><span>CollapsingAppBarNestedScrollConnection.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> CollapsingAppBarNestedScrollConnection <span class="token operator">:</span> NestedScrollConnection <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> headerOffset<span class="token operator">:</span> Float <span class="token keyword">by</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">private</span> <span class="token keyword">set</span></span>
<span class="line">    <span class="token keyword">var</span> progress<span class="token operator">:</span> Float <span class="token keyword">by</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">private</span> <span class="token keyword">set</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> maxHeight<span class="token operator">:</span> Float <span class="token keyword">by</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> minHeight<span class="token operator">:</span> Float <span class="token keyword">by</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onPreScroll</span><span class="token punctuation">(</span>available<span class="token operator">:</span> Offset<span class="token punctuation">,</span> source<span class="token operator">:</span> NestedScrollSource<span class="token punctuation">)</span><span class="token operator">:</span> Offset <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> delta <span class="token operator">=</span> available<span class="token punctuation">.</span>y</span>
<span class="line">        <span class="token comment">/**</span>
<span class="line">         *  when direction is negative, meaning scrolling downward,</span>
<span class="line">         *  we are not consuming delta but passing it for Node Consumption</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>delta <span class="token operator">&gt;=</span> <span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> Offset<span class="token punctuation">.</span>Zero</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">val</span> newOffset <span class="token operator">=</span> headerOffset <span class="token operator">+</span> delta</span>
<span class="line">        <span class="token keyword">val</span> previousOffset <span class="token operator">=</span> headerOffset</span>
<span class="line">        <span class="token keyword">val</span> heightDelta <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>maxHeight <span class="token operator">-</span> minHeight<span class="token punctuation">)</span></span>
<span class="line">        headerOffset <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>heightDelta <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">0f</span> <span class="token keyword">else</span> newOffset<span class="token punctuation">.</span><span class="token function">coerceIn</span><span class="token punctuation">(</span>heightDelta<span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">        progress <span class="token operator">=</span> <span class="token number">1f</span> <span class="token operator">-</span> headerOffset <span class="token operator">/</span> <span class="token operator">-</span>maxHeight</span>
<span class="line">        <span class="token keyword">val</span> consumed <span class="token operator">=</span> headerOffset <span class="token operator">-</span> previousOffset</span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> consumed<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onPostScroll</span><span class="token punctuation">(</span>consumed<span class="token operator">:</span> Offset<span class="token punctuation">,</span> available<span class="token operator">:</span> Offset<span class="token punctuation">,</span> source<span class="token operator">:</span> NestedScrollSource<span class="token punctuation">)</span><span class="token operator">:</span> Offset <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> delta <span class="token operator">=</span> available<span class="token punctuation">.</span>y</span>
<span class="line">        <span class="token keyword">val</span> newOffset <span class="token operator">=</span> headerOffset <span class="token operator">+</span> delta</span>
<span class="line">        <span class="token keyword">val</span> previousOffset <span class="token operator">=</span> headerOffset</span>
<span class="line">        <span class="token keyword">val</span> heightDelta <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>maxHeight <span class="token operator">-</span> minHeight<span class="token punctuation">)</span></span>
<span class="line">        headerOffset <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>heightDelta <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">0f</span> <span class="token keyword">else</span> newOffset<span class="token punctuation">.</span><span class="token function">coerceIn</span><span class="token punctuation">(</span>heightDelta<span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">        progress <span class="token operator">=</span> <span class="token number">1f</span> <span class="token operator">-</span> headerOffset <span class="token operator">/</span> <span class="token operator">-</span>maxHeight</span>
<span class="line">        <span class="token keyword">val</span> consumedValue <span class="token operator">=</span> headerOffset <span class="token operator">-</span> previousOffset</span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> consumedValue<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),l(" @include: https://gist.github.com/shoaibmushtaq25/92632b418223439955956c83e1963811/raw/3295894891b33586ada9d4cdc00bdda8a97ea30c/CollapsingAppBarNestedScrollConnection.kt "),n[47]||(n[47]=o(`<hr><h2 id="implementing-nestedscrollconnection-with-the-header" tabindex="-1"><a class="header-anchor" href="#implementing-nestedscrollconnection-with-the-header"><span>Implementing NestedScrollConnection with the header?</span></a></h2><p>Hereâ€™s how we integrate<code>NestedScrollConnection</code>within our Activity and composables to enable smooth interactions between the header and the lazy list.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="nestedScrollConnection_use.kt"><span>nestedScrollConnection_use.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// ...</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> contents<span class="token operator">:</span> List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> <span class="token string-literal singleline"><span class="token string">&quot;Lazy Column Item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">val</span> connection <span class="token operator">=</span> <span class="token function">CollapsingAppBarNestedScrollConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//initialing nestedScrollConnection here</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            CollapsibleHeaderTheme <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">CollapsibleThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">CollapsibleThing</span><span class="token punctuation">(</span>modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Surface</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>tertiary</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">nestedScroll</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span> <span class="token comment">//using nestedScrollConnection to the common parent of lazylist view and header</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,4)),l(" @include: https://gist.github.com/shoaibmushtaq25/3f10bfaebdf40477a63b136e9a88f3be/raw/acda7ff01ad5c755bbdb291f2d31db337538f539/nestedScrollConnection_use.kt "),n[48]||(n[48]=o(`<hr><h2 id="bring-it-all-together" tabindex="-1"><a class="header-anchor" href="#bring-it-all-together"><span>Bring It All Together</span></a></h2><p>When all the pieces of this puzzle come together, the result is seamless. As the lazy list scrolls, the header scrolls along with it. Once the header reaches a specific progress, we dynamically adjust the alpha value of the<code>NavigationBar</code>background, its icons, and the title for a smooth transition effect.</p><figure><img src="https://droidcon.com/wp-content/uploads/2024/12/1_2nBhAU8PxkFmGXcPmUp5fw-466x1024.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="challenges-faced-ðŸš§-and-solvedðŸ’ª" tabindex="-1"><a class="header-anchor" href="#challenges-faced-ðŸš§-and-solvedðŸ’ª"><span>Challenges! Faced ðŸš§ and SolvedðŸ’ª</span></a></h2><h3 id="_1" tabindex="-1"><a class="header-anchor" href="#_1"><span>1.</span></a></h3><p>Calculation of header offset and progress was a challenge and we have to do some Maths here to calculate<code>headerOffset</code>and<code>progress</code>which we will use to adjust the height of header and alpha of navBar when lazy list scrolls up</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="calculate_offset_progress.kt"><span>calculate_offset_progress.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// ...</span></span>
<span class="line"><span class="token keyword">var</span> headerOffset<span class="token operator">:</span> Float <span class="token keyword">by</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">set</span></span>
<span class="line"><span class="token keyword">var</span> progress<span class="token operator">:</span> Float <span class="token keyword">by</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">set</span></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onPreScroll</span><span class="token punctuation">(</span>available<span class="token operator">:</span> Offset<span class="token punctuation">,</span> source<span class="token operator">:</span> NestedScrollSource<span class="token punctuation">)</span><span class="token operator">:</span> Offset <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token keyword">val</span> newOffset <span class="token operator">=</span> headerOffset <span class="token operator">+</span> delta</span>
<span class="line">    <span class="token keyword">val</span> previousOffset <span class="token operator">=</span> headerOffset</span>
<span class="line">    <span class="token keyword">val</span> heightDelta <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>maxHeight <span class="token operator">-</span> minHeight<span class="token punctuation">)</span></span>
<span class="line">    headerOffset <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>heightDelta <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">0f</span> <span class="token keyword">else</span> newOffset<span class="token punctuation">.</span><span class="token function">coerceIn</span><span class="token punctuation">(</span>heightDelta<span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span></span>
<span class="line">    progress <span class="token operator">=</span> <span class="token number">1f</span> <span class="token operator">-</span> headerOffset <span class="token operator">/</span> <span class="token operator">-</span>maxHeight</span>
<span class="line">    <span class="token keyword">val</span> consumed <span class="token operator">=</span> headerOffset <span class="token operator">-</span> previousOffset</span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> consumed<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,9)),l(" @include: https://gist.github.com/shoaibmushtaq25/6b440f40095d6f0c8699cf21d5c8b436/raw/9b63104f9cbf7e0913616f23558bdf5d807a0e36/calculate_offset_progress.kt "),n[49]||(n[49]=s("h3",{id:"_2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2"},[s("span",null,"2.")])],-1)),s("p",null,[n[31]||(n[31]=a("When we scrolls the list up, the header scrolls up first and then the list. On the other hand, when I scroll down the list, the header was scrolling down first and then the list was scrolling but my requirement was that we we scroll down the list, we first scroll down the list untill it reaches to first item and then we scroll down the header. To solve this case, I added this below code snippet in")),n[32]||(n[32]=s("code",null,"onPreScroll",-1)),n[33]||(n[33]=a("and passing the zero offset when we scroll downward to pass it to the Node consumption phase. â€” More details on Node consumption phase is in this")),s("a",O,[n[28]||(n[28]=a("blogpost (")),e(c,{icon:"fa-brands fa-medium"}),n[29]||(n[29]=s("code",null,"androiddevelopers",-1)),n[30]||(n[30]=a(")"))])]),n[50]||(n[50]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="scroll_down_delta.kt"><span>scroll_down_delta.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// ...</span></span>
<span class="line"><span class="token comment">/**</span>
<span class="line"> * when direction is negative, meaning scrolling downward,</span>
<span class="line"> * we are not consuming delta but passing it for Node Consumption</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>delta <span class="token operator">&gt;=</span> <span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> Offset<span class="token punctuation">.</span>Zero</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),l(" @include: https://gist.github.com/shoaibmushtaq25/ad23732755273e047d64e179a444fba6/raw/a31b9131dc62ca4cce6418746c76614cc2715e1b/scroll_down_delta.kt "),n[51]||(n[51]=o(`<h3 id="_3" tabindex="-1"><a class="header-anchor" href="#_3"><span>3.</span></a></h3><p>If I tried to scroll the header by dragging the header part(not the lazy list), It was not scrolling because its was a Column with no scrollable behavior so to solve this case and make the header scrollable even if we drag the header part without touching the lazy list. Here is how I did it.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="make_header_scrollable.kt"><span>make_header_scrollable.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// ...</span></span>
<span class="line"><span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">nestedScroll</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">scrollable</span><span class="token punctuation">(</span></span>
<span class="line">        orientation <span class="token operator">=</span> Orientation<span class="token punctuation">.</span>Vertical<span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// state for Scrollable, describes how consume scroll amount</span></span>
<span class="line">        state <span class="token operator">=</span></span>
<span class="line">        rememberScrollableState <span class="token punctuation">{</span> delta <span class="token operator">-&gt;</span></span>
<span class="line">            <span class="token number">0f</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ExpandedHeader</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),l(" @include: https://gist.github.com/shoaibmushtaq25/a3ca3ad2d5433ad7bbb81785d96d9f36/raw/68f69a8f7f44a60e611eb4327a81c473eaac2402/make_header_scrollable.kt "),n[52]||(n[52]=o(`<h3 id="_4" tabindex="-1"><a class="header-anchor" href="#_4"><span>4.</span></a></h3><p>Here is how we are adjusting height of header based on the header offset received through<code>NestedScrollConnection</code>, and placing the placeables calculated with<code>SubComposeLayout</code>.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="header_height_adjustment.kt"><span>header_height_adjustment.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">    <span class="token comment">// s...</span></span>
<span class="line">    connection<span class="token punctuation">.</span>maxHeight <span class="token operator">=</span> headerPlaceable<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    connection<span class="token punctuation">.</span>minHeight <span class="token operator">=</span> navBarPlaceable<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">val</span> space <span class="token operator">=</span> <span class="token function">IntSize</span><span class="token punctuation">(</span></span>
<span class="line">        constraints<span class="token punctuation">.</span>maxWidth<span class="token punctuation">,</span></span>
<span class="line">        headerPlaceable<span class="token punctuation">.</span>height <span class="token operator">+</span> connection<span class="token punctuation">.</span>headerOffset<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">layout</span><span class="token punctuation">(</span>space<span class="token punctuation">.</span>width<span class="token punctuation">,</span> space<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        headerPlaceable<span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> connection<span class="token punctuation">.</span>headerOffset<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        navBarPlaceable<span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span></span>
<span class="line">            Alignment<span class="token punctuation">.</span>TopCenter<span class="token punctuation">.</span><span class="token function">align</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token function">IntSize</span><span class="token punctuation">(</span>navBarPlaceable<span class="token punctuation">.</span>width<span class="token punctuation">,</span> navBarPlaceable<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                space<span class="token punctuation">,</span></span>
<span class="line">                layoutDirection</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),l(" @include: https://gist.github.com/shoaibmushtaq25/f8e48b1929af80ae15683f20464178b1/raw/7db43ff249533fe3d180cef60071e0a176644843/header_height_adjustment.kt "),n[53]||(n[53]=o(`<h3 id="_5" tabindex="-1"><a class="header-anchor" href="#_5"><span>5.</span></a></h3><p>In this way, we are calculating alpha value based on the progress received from<code>NestedScrollConnection</code>and changing the alpha of Navigation Bar Composable</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="calculate_alpha.kt"><span>calculate_alpha.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// ...</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">NavBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> alphaValue <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableFloatStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    alphaValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> connection<span class="token punctuation">.</span>progress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">coerceIn</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">1f</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  </span>
<span class="line">    <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* TODO: Handle action */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">            imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>ArrowBack<span class="token punctuation">,</span></span>
<span class="line">            contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Back&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            tint <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Navigation Bar&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">IconButton</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* TODO: Handle action */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">            imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Menu<span class="token punctuation">,</span></span>
<span class="line">            contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Search&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            tint <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>alpha <span class="token operator">=</span> alphaValue<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),l(" @include: https://gist.github.com/shoaibmushtaq25/2ce1ca32fc7749fcd3c24f600fe06dd5/raw/9de32e37cd2b90a4e7d94412cf4bc93795192b45/calculate_alpha.kt "),n[54]||(n[54]=s("p",null,"If youâ€™d like to see the complete implementation in one place, feel free to check out this repository.",-1)),e(i,{name:"shoaibmushtaq25/CollapsibleHeader",desc:"",url:"https://github.com/shoaibmushtaq25/CollapsibleHeader/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/951012f2dd98a23d5288ad60ede5e086892c42cb8ac03c8cabc01fa91cfb1d8c/shoaibmushtaq25/CollapsibleHeader"}),n[55]||(n[55]=s("p",null,"For more details, please refer to these resources.",-1)),e(i,{name:"Jetpack Compose UI App Development Toolkit - Android Developers",desc:"Discover Jetpack Compose, Android's UI app development toolkit and resources that can help accelerate the creation of your app.",url:"https://developer.android.com/compose/",logo:"https://gstatic.com/devrel-devsite/prod/v37f55fe835aa1d3f6236af95c23fa834466468c2920b868f810fdf5b149e5d9f/android/images/favicon.svg",preview:"https://developer.android.com/static/images/social/android-developers.png"}),e(r,d(k({title:"SubcomposeLayoutSample.kt - Android Code Search",desc:"Search and explore code",link:"https://cs.android.com/androidx/platform/tools/dokka-devsite-plugin/+/master:testData/compose/samples/ui/samples/SubcomposeLayoutSample.kt/",logo:"https://gstatic.com/devopsconsole/images/oss/favicons/oss-16x16.png",background:"rgba(160,179,218,0.2)"})),null,16),e(i,{name:"Material Components | Jetpack Compose | Android Developers",desc:"Material components allow you to build detailed interfaces in line with Material Design principles.",url:"https://developer.android.com/develop/ui/compose/components/",logo:"https://gstatic.com/devrel-devsite/prod/v37f55fe835aa1d3f6236af95c23fa834466468c2920b868f810fdf5b149e5d9f/android/images/favicon.svg",preview:"https://developer.android.com/static/images/social/android-developers.png"}),n[56]||(n[56]=s("p",null,[a("Feel free to ask any questions you may have â€” Iâ€™d be happy to collaborate and discuss further."),s("br"),a(" I hope you found this helpful, and thank you for reading!")],-1)),s("div",I,[n[37]||(n[37]=s("p",{class:"hint-container-title"},"Info",-1)),s("p",null,[n[36]||(n[36]=a("This article is previously published on ")),s("a",B,[e(c,{icon:"fa-brands fa-medium"}),n[34]||(n[34]=s("code",null,"proandroiddev",-1)),n[35]||(n[35]=a(")"))])]),e(i,{name:"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout",desc:"In Jetpack Compose, building a collapsible header with a custom navigation bar can be straightforward using NestedScrollConnectionâ€”providedâ€¦",url:"https://proandroiddev.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout-6615873c0b5d/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*P_Gj7ABxGbbaZdCfHefM4w.png"})]),l(" TODO: add ARTICLE CARD "),e(r,d(k({title:"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout",desc:"In Jetpack Compose, building a collapsible header with a custom navigation bar can be straightforward using NestedScrollConnectionâ€”provided the header has fixed expanded and collapsed heights. However, when the header height is dynamic and depends on its content (e.g., based on backend responses), things get tricky. Using onGloballyPositioned to measure the header's height alone may not suffice. To address this, I combined NestedScrollConnection with SubComposeLayout, as it handles dynamic header content effectively.",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const A=v(g,[["render",M]]),q=JSON.parse('{"path":"/droidcon.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout.html","title":"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout","lang":"en-US","frontmatter":{"lang":"en-US","title":"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout","description":"Article(s) > Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout","icon":"fa-brands fa-android","category":["Java","Kotlin","Android","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout\\",\\"image\\":[\\"https://droidcon.com/wp-content/uploads/2024/12/1_P_Gj7ABxGbbaZdCfHefM4w-1024x821.webp\\",\\"https://miro.medium.com/v2/resize:fit:1400/format:webp/1*mxEou6UEf4mk4l3hV1K-3g.gif\\",\\"https://droidcon.com/wp-content/uploads/2024/12/1_2nBhAU8PxkFmGXcPmUp5fw-466x1024.webp\\"],\\"datePublished\\":\\"2024-12-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Shoaib Mushtaq\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout"}],["meta",{"property":"og:description","content":"Article(s) > Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/12/1_P_Gj7ABxGbbaZdCfHefM4w-1024x821.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/12/1_P_Gj7ABxGbbaZdCfHefM4w-1024x821.webp"}],["meta",{"name":"twitter:image:alt","content":"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout"}],["meta",{"property":"article:author","content":"Shoaib Mushtaq"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-12-11T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout"},{"property":"og:description","content":"Collapsible header in Jetpack Compose using NestedScrollConnection and SubComposeLayout"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-12-11T00:00:00.000Z","isOriginal":false,"author":"Shoaib Mushtaq","cover":"https://droidcon.com/wp-content/uploads/2024/12/1_P_Gj7ABxGbbaZdCfHefM4w-1024x821.webp"},"git":{},"readingTime":{"minutes":7.01,"words":2104},"filePathRelative":"droidcon.com/collapsible-header-in-jetpack-compose-using-nestedscrollconnection-and-subcomposelayout.md","copyright":{"author":"Shoaib Mushtaq"}}');export{A as comp,q as data};
