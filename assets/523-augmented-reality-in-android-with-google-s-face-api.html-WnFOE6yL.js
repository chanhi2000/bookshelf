import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,d as s,f as t,b as c,t as m,n as v,g as h,w as p,e as a,r as i,o as f}from"./app-BVguHYKu.js";const g={},b={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},w={class:"table-of-contents"},P={href:"https://github.com/googlesamples/android-vision",target:"_blank",rel:"noopener noreferrer"};function F(l,n){const u=i("VPCard"),e=i("router-link"),r=i("SiteInfo"),o=i("VPIcon");return f(),k("div",null,[s("h1",b,[s("a",y,[s("span",null,m(l.$frontmatter.title)+" 관련",1)])]),t(u,v(h({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",w,[s("ul",null,[s("li",null,[t(e,{to:"#what-can-google-s-face-api-do"},{default:p(()=>n[0]||(n[0]=[a("What can Google’s Face API do?")])),_:1,__:[0]})]),s("li",null,[t(e,{to:"#getting-started"},{default:p(()=>n[1]||(n[1]=[a("Getting Started")])),_:1,__:[1]}),s("ul",null,[s("li",null,[t(e,{to:"#project-dependencies"},{default:p(()=>n[2]||(n[2]=[a("Project Dependencies")])),_:1,__:[2]})]),s("li",null,[t(e,{to:"#using-the-cameras"},{default:p(()=>n[3]||(n[3]=[a("Using the Cameras")])),_:1,__:[3]})]),s("li",null,[t(e,{to:"#pre-defined-classes"},{default:p(()=>n[4]||(n[4]=[a("Pre-defined Classes")])),_:1,__:[4]})])])]),s("li",null,[t(e,{to:"#finding-faces"},{default:p(()=>n[5]||(n[5]=[a("Finding Faces")])),_:1,__:[5]})]),s("li",null,[t(e,{to:"#landmarks-ahoy"},{default:p(()=>n[6]||(n[6]=[a("Landmarks Ahoy!")])),_:1,__:[6]})]),s("li",null,[t(e,{to:"#classifications"},{default:p(()=>n[7]||(n[7]=[a("Classifications")])),_:1,__:[7]})]),s("li",null,[t(e,{to:"#giving-faces-the-cartoon-treatment"},{default:p(()=>n[8]||(n[8]=[a("Giving Faces the Cartoon Treatment")])),_:1,__:[8]})]),s("li",null,[t(e,{to:"#what-s-your-angle"},{default:p(()=>n[9]||(n[9]=[a("What’s Your Angle?")])),_:1,__:[9]})]),s("li",null,[t(e,{to:"#bouncing-irises"},{default:p(()=>n[10]||(n[10]=[a("Bouncing Irises")])),_:1,__:[10]})]),s("li",null,[t(e,{to:"#where-to-go-from-here"},{default:p(()=>n[11]||(n[11]=[a("Where to Go From Here?")])),_:1,__:[11]})])])]),n[71]||(n[71]=s("hr",null,null,-1)),t(r,{name:"Augmented Reality in Android with Google’s Face API",desc:"You’ll build a Snapchat Lens-like app called FaceSpotter which draws cartoony features over faces in a camera feed using augmented reality.",url:"https://kodeco.com/523-augmented-reality-in-android-with-google-s-face-api",logo:"https://assets.carolus.kodeco.com/assets/murakami/category-icons/category-ar-vr-android-847ca6fdd6f2a12866d7e3b66eb5ecf5420ad5695418a64c57f800b1ad89a4d3.svg",preview:"https://koenig-media.raywenderlich.com/uploads/2017/05/MobileVision-twitter.png"}),n[72]||(n[72]=c('<p>If you’ve ever used <a href="https://support.snapchat.com/en-US/a/lenses1" target="_blank" rel="noopener noreferrer">Snapchat’s “Lenses” feature</a>, you’ve used a combination of <strong>augmented reality</strong> and <strong>face detection</strong>.</p><p>Augmented reality — <em>AR</em> for short — is technical and an impressive-sounding term that simply describes real-world images overlaid with computer-generated ones. As for face detection, it’s nothing new for humans, but finding faces in images is still a new trick for computers, especially <em>handheld</em> ones.</p><p>Writing apps that feature AR and face detection used to require serious programming chops, but with Google’s <a href="https://developers.google.com/vision" target="_blank" rel="noopener noreferrer">Mobile Vision</a> suite of libraries and its <a href="https://developers.google.com/vision/face-detection-concepts" target="_blank" rel="noopener noreferrer">Face API</a>, it’s much easier.</p><p>In this augmented reality tutorial, you’ll build a Snapchat Lens-like app called <strong>FaceSpotter</strong>. FaceSpotter draws cartoony features over faces in a camera feed.</p><p>In this tutorial, you’ll learn how to:</p><ul><li>Incorporate Google’s Face API into your own apps</li><li>Programmatically identify and track human faces from a camera feed</li><li>Identify points of interest on faces, such as eyes, ears, nose, and mouth</li><li>Draw text and graphics over images from a camera feed</li></ul><div class="hint-container tip"><p class="hint-container-title">Note</p><p>This tutorial assumes you’re experienced in Android development with Java. If you’re new to the Android world or are not familiar with Android Studio, please have a look at our <a href="https://www.raywenderlich.com/android-tutorials" target="_blank" rel="noopener noreferrer">Android tutorials</a>.</p></div><hr><h2 id="what-can-google-s-face-api-do" tabindex="-1"><a class="header-anchor" href="#what-can-google-s-face-api-do"><span>What can Google’s Face API do?</span></a></h2><p>Google’s Face API performs <em>face detection</em>, which locates faces in pictures, along with their <strong>position</strong> (where they are in the picture) and orientation (which way they’re facing, relative to the camera). It can detect <a href="https://developers.google.com/vision/face-detection-concepts#landmarks" target="_blank" rel="noopener noreferrer">landmarks</a> (points of interest on a face) and perform <a href="https://developers.google.com/vision/face-detection-concepts#classification" target="_blank" rel="noopener noreferrer">classifications</a> to determine whether the eyes are open or closed, and whether or not a face is smiling. The Face API also detects and follows faces in moving images, which is known as <em>face tracking</em>.</p><p>Note that the Face API is limited to detecting human faces in pictures. Sorry, cat bloggers…</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/sad-cat.jpg" alt="sad cat" tabindex="0" loading="lazy"><figcaption>sad cat</figcaption></figure><p>The Face API <em>doesn’t</em> perform face recognition, which connects a given face to an identity. It can’t perform that Facebook trick of detecting a face in an image and then identifying that person.</p><p>Once you’re able to detect a face, its position and its landmarks in an image, you can use that data to augment the image with your own reality! Apps like Pokemon GO, or Snapchat make use of augmented reality to give users a fun way to use their cameras, and so can you!</p><hr><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>Getting Started</span></a></h2><p>Download the <strong>FaceSpotter</strong> starter project <a href="https://koenig-media.raywenderlich.com/uploads/2017/05/FaceSpotter-starter-5.zip" target="_blank" rel="noopener noreferrer">here</a> and open it in Android Studio. Build and run the app, and it will ask for permission to use the camera.</p><p>![Augmented Reality -Screenshot of FaceSpotter, showing a dialog asking &#39;Allow FaceSpotter to take pictures and record video?&#39; with two buttons labeled &#39;DENY&#39; and &#39;ALLOW&#39;.](https://koenig-media.raywenderlich.com/uploads/2017/05/camera-permission-request.jpg =240x)</p><p>Click <strong>ALLOW</strong>, then point the camera at someone’s face.</p><p>![Augmented Reality -FaceSpotter Starter](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-01-1.jpg =240x)</p><p>The button in the app’s lower left-hand corner toggles between front and back camera.</p><p>This project was made so that you can start using face detection and tracking quickly. Let’s review what’s included.</p><h3 id="project-dependencies" tabindex="-1"><a class="header-anchor" href="#project-dependencies"><span>Project Dependencies</span></a></h3>',23)),s("p",null,[n[12]||(n[12]=a("Open the project’s ")),t(o,{icon:"fas fa-folder-open"}),n[13]||(n[13]=s("code",null,"app",-1)),n[14]||(n[14]=a("/")),t(o,{icon:"iconfont icon-engine"}),n[15]||(n[15]=s("code",null,"build.gradle",-1)),n[16]||(n[16]=a(":"))]),n[73]||(n[73]=c(`<figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/build.gradle-app-in-project-pane.jpg" alt="Screenshot of the Project pane in Android studio, showing &#39;build.gradle (Module:app)&#39; highlighted." tabindex="0" loading="lazy"><figcaption>Screenshot of the Project pane in Android studio, showing &#39;build.gradle (Module:app)&#39; highlighted.</figcaption></figure><p>At the end of the <code>dependencies</code> section, you’ll see the following:</p><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">implementaion <span class="token string">&#39;com.google.android.gms:play-services-vision:10.2.0&#39;</span></span>
<span class="line">implementaion <span class="token string">&#39;com.android.support:design:25.2.0&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>The first of these lines imports the <a href="https://developers.google.com/android/reference/com/google/android/gms/vision/package-summary" target="_blank" rel="noopener noreferrer">Android Vision API</a>, which supports not just face detection, but barcode detection and text recognition as well.</p><p>The second brings in the <a href="https://developer.android.com/training/material/design-library.html" target="_blank" rel="noopener noreferrer">Android Design Support Library</a>, which provides the <a href="https://developer.android.com/reference/android/support/design/widget/Snackbar.html" target="_blank" rel="noopener noreferrer">Snackbar</a> widget that informs the user that the app needs access to the cameras.</p><h3 id="using-the-cameras" tabindex="-1"><a class="header-anchor" href="#using-the-cameras"><span>Using the Cameras</span></a></h3>`,6)),s("p",null,[n[17]||(n[17]=a("FaceSpotter specifies that it uses the camera and requests the user’s permission to do so with these lines in ")),t(o,{icon:"fa-brands fa-android"}),n[18]||(n[18]=a()),n[19]||(n[19]=s("code",null,"AndroidManifest.xml",-1)),n[20]||(n[20]=a(":"))]),n[74]||(n[74]=c(`<figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/androidmanifest.xml-in-project-pane.jpg" alt="Screenshot of the Project pane in Android studio, showing &#39;AndroidManifest.xml&#39; highlighted." tabindex="0" loading="lazy"><figcaption>Screenshot of the Project pane in Android studio, showing &#39;AndroidManifest.xml&#39; highlighted.</figcaption></figure><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-feature</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.hardware.camera<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.CAMERA<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pre-defined-classes" tabindex="-1"><a class="header-anchor" href="#pre-defined-classes"><span>Pre-defined Classes</span></a></h3><p>The starter project comes with a few pre-defined classes:</p>`,4)),s("ul",null,[n[25]||(n[25]=c("<li><strong>FaceActivity</strong>: The main activity of the app which shows the camera preview.</li><li><strong>FaceTracker</strong>: Follows faces that are detected in images from the camera, and gathers their positions and landmarks.</li><li><strong>FaceGraphic</strong>: Draws the computer-generated images over faces in the camera images.</li><li><strong>FaceData</strong>: A data class for passing <code>FaceTracker</code> data to <code>FaceGraphic</code>.</li>",4)),s("li",null,[n[22]||(n[22]=s("strong",null,"EyePhysics",-1)),n[23]||(n[23]=a(": Provided by Google in their ")),s("a",P,[t(o,{icon:"iconfont icon-github"}),n[21]||(n[21]=a(" Mobile Vision sample apps on GitHub"))]),n[24]||(n[24]=a(", it’s a simple physics engine that will animate the AR irises as the faces they’re on move."))]),n[26]||(n[26]=s("li",null,[s("strong",null,"CameraSourcePreview"),a(": Another class from Google. It displays the live image data from the camera in a view.")],-1)),n[27]||(n[27]=s("li",null,[s("strong",null,"GraphicOverlay"),a(": One more Google class; FaceGraphic subclasses it.")],-1))]),n[75]||(n[75]=s("p",null,"Let’s take a moment to get familiar with how they work.",-1)),n[76]||(n[76]=s("p",null,[s("code",null,"FaceActivity"),a(" defines the app’s only activity, and along with handling touch events, also requests for permission to access the device’s camera at runtime (applies to Android 6.0 and above). FaceActivity also creates two objects which FaceSpotter depends on, namely "),s("strong",null,"CameraSource"),a(" and "),s("strong",null,"FaceDetector"),a(".")],-1)),s("p",null,[n[28]||(n[28]=a("Open ")),t(o,{icon:"fa-brands fa-java"}),n[29]||(n[29]=s("code",null,"FaceActivity.java",-1)),n[30]||(n[30]=a(" and look for the ")),n[31]||(n[31]=s("code",null,"createCameraSource",-1)),n[32]||(n[32]=a(" method:"))]),n[77]||(n[77]=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createCameraSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 1</span></span>
<span class="line">  <span class="token class-name">FaceDetector</span> detector <span class="token operator">=</span> <span class="token function">createFaceDetector</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 2</span></span>
<span class="line">  <span class="token keyword">int</span> facing <span class="token operator">=</span> <span class="token class-name">CameraSource</span><span class="token punctuation">.</span><span class="token constant">CAMERA_FACING_FRONT</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mIsFrontFacing<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    facing <span class="token operator">=</span> <span class="token class-name">CameraSource</span><span class="token punctuation">.</span><span class="token constant">CAMERA_FACING_BACK</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 3</span></span>
<span class="line">  mCameraSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CameraSource<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> detector<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setFacing</span><span class="token punctuation">(</span>facing<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setRequestedPreviewSize</span><span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setRequestedFps</span><span class="token punctuation">(</span><span class="token number">60.0f</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setAutoFocusEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here’s what the above code does:</p><ul><li><code>setFacing</code>: Specifies which camera to use.</li><li><code>setRequestedPreviewSize</code>: Sets the resolution of the preview image from the camera. Lower resolutions (like the 320×240 resolution specified) work better with budget devices and provide faster face detection. Higher resolutions (640×480 and higher) are for higher-end devices and offer better detection of small faces and facial features. Try out different settings.</li><li><code>setRequestedFps</code>: Sets the camera frame rate. Higher rates mean better face tracking, but use more processor power. Experiment with different frame rates.</li><li><code>setAutoFocusEnabled</code>: Turns autofocus off or on. Keep this set to true for better face detection and user experience. This has no effect if the device doesn’t have autofocus.</li></ul><ol><li>Creates a <code>FaceDetector</code> object, which detects faces in images from the camera’s data stream.</li><li>Determines which camera is currently the active one.</li><li>Uses the results of steps 1 and 2 and the <a href="http://www.javaworld.com/article/2074938/core-java/too-many-parameters-in-java-methods-part-3-builder-pattern.html" target="_blank" rel="noopener noreferrer"><em>Builder pattern</em></a> to create the camera source. The builder methods are:</li></ol><p>Now let’s check out the <code>createFaceDetector</code> method:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@NonNull</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">FaceDetector</span> <span class="token function">createFaceDetector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 1</span></span>
<span class="line">  <span class="token class-name">FaceDetector</span> detector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FaceDetector<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setLandmarkType</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector</span><span class="token punctuation">.</span><span class="token constant">ALL_LANDMARKS</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setClassificationType</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector</span><span class="token punctuation">.</span><span class="token constant">ALL_CLASSIFICATIONS</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setTrackingEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setMode</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector</span><span class="token punctuation">.</span><span class="token constant">FAST_MODE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setProminentFaceOnly</span><span class="token punctuation">(</span>mIsFrontFacing<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setMinFaceSize</span><span class="token punctuation">(</span>mIsFrontFacing <span class="token operator">?</span> <span class="token number">0.35f</span> <span class="token operator">:</span> <span class="token number">0.15f</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 2 </span></span>
<span class="line">  <span class="token class-name">MultiProcessor<span class="token punctuation">.</span>Factory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultiProcessor<span class="token punctuation">.</span>Factory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Tracker</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Face</span> face<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FaceTracker</span><span class="token punctuation">(</span>mGraphicOverlay<span class="token punctuation">,</span> context<span class="token punctuation">,</span> mIsFrontFacing<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 3</span></span>
<span class="line">  <span class="token class-name">Detector<span class="token punctuation">.</span>Processor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span> processor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultiProcessor<span class="token punctuation">.</span>Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  detector<span class="token punctuation">.</span><span class="token function">setProcessor</span><span class="token punctuation">(</span>processor<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 4</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>detector<span class="token punctuation">.</span><span class="token function">isOperational</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Face detector dependencies are not yet available.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Check the device&#39;s storage.  If there&#39;s little available storage, the native</span></span>
<span class="line">    <span class="token comment">// face detection library will not be downloaded, and the app won&#39;t work,</span></span>
<span class="line">    <span class="token comment">// so notify the user.</span></span>
<span class="line">    <span class="token class-name">IntentFilter</span> lowStorageFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DEVICE_STORAGE_LOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">boolean</span> hasLowStorage <span class="token operator">=</span> <span class="token function">registerReceiver</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> lowStorageFilter<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasLowStorage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>low_storage_error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span> listener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      builder<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>app_name<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>low_storage_error<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>disappointed_ok<span class="token punctuation">,</span> listener<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> detector<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Taking the above comment-by-comment:</p><ul><li><code>setLandmarkType</code>: Set to <code>NO_LANDMARKS</code> if it should not detect facial landmarks (this makes face detection faster) or <code>ALL_LANDMARKS</code> if landmarks should be detected.</li><li><code>setClassificationType</code>: Set to <code>NO_CLASSIFICATIONS</code> if it should not detect whether subjects’ eyes are open or closed or if they’re smiling (which speeds up face detection) or <code>ALL_CLASSIFICATIONS</code> if it should detect them.</li><li><code>setTrackingEnabled</code>: Enables/disables face tracking, which maintains a consistent ID for each face from frame to frame. Since you need face tracking to process live video and multiple faces, set this to true.</li><li><code>setMode</code>: Set to <code>FAST_MODE</code> to detect fewer faces (but more quickly), or <code>ACCURATE_MODE</code> to detect more faces (but more slowly) and to detect the Euler Y angles of faces (we’ll cover this topic later).</li><li><code>setProminentFaceOnly</code>: Set to <code>true</code> to detect only the most prominent face in the frame.</li><li><code>setMinFaceSize</code>: Specifies the smallest face size that will be detected, expressed as a proportion of the width of the face relative to the width of the image.</li></ul><ol><li>Creates a <code>FaceDetector</code> object using the Builder pattern, and sets the following properties:</li><li>Creates a <a href="https://en.wikipedia.org/wiki/Factory_method_pattern" target="_blank" rel="noopener noreferrer">factory</a> class that creates new <code>FaceTracker</code> instances.</li><li>When a face detector detects a face, it passes the result to a <strong>processor</strong>, which determines what actions should be taken. If you wanted to deal with only one face at a time, you’d use an instance of <a href="https://developers.google.com/android/reference/com/google/android/gms/vision/Detector.Processor" target="_blank" rel="noopener noreferrer"><code>Processor</code></a>. In this app, you’ll handle <em>multiple</em> faces, so you’ll create a <a href="https://developers.google.com/android/reference/com/google/android/gms/vision/MultiProcessor" target="_blank" rel="noopener noreferrer"><code>MultiProcessor</code></a> instance, which creates a new <code>FaceTracker</code> instance for each detected face. Once created, we connect the processor to the detector.</li><li>The face detection library downloads as the app is installed. It’s large enough that there’s a chance that it may not be downloaded when the user runs the app for the first time. This code handles that case, as well as the when the device doesn’t have enough storage for the library.</li></ol><p>With the intro taken care of, it’s time to detect some faces!</p><hr><h2 id="finding-faces" tabindex="-1"><a class="header-anchor" href="#finding-faces"><span>Finding Faces</span></a></h2><p>First you add a view into the overlay to draw detected face data.</p>`,13)),s("p",null,[n[33]||(n[33]=a("Open ")),t(o,{icon:"fa-brands fa-java"}),n[34]||(n[34]=s("code",null,"FaceGraphic.java",-1)),n[35]||(n[35]=a(". You may have noticed the declaration for the instance variable ")),n[36]||(n[36]=s("code",null,"mFace",-1)),n[37]||(n[37]=a(" is marked with the keyword ")),n[38]||(n[38]=s("code",null,"volatile",-1)),n[39]||(n[39]=a(". ")),n[40]||(n[40]=s("code",null,"mFace",-1)),n[41]||(n[41]=a(" stores face data sent from ")),n[42]||(n[42]=s("code",null,"FaceTracker",-1)),n[43]||(n[43]=a(", and may be written to by many threads. Marking it as ")),n[44]||(n[44]=s("code",null,"volatile",-1)),n[45]||(n[45]=a(" guarantees that you always get the result of the latest “write” any time you read its value. This is important since face data will change very quickly."))]),n[78]||(n[78]=c(`<p>Delete the existing <code>draw()</code> and add the following to <code>FaceGraphic</code>:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 1</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Face</span> face<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mFace <span class="token operator">=</span> face<span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">postInvalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Trigger a redraw of the graphic (i.e. cause draw() to be called).</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 2</span></span>
<span class="line">  <span class="token comment">// Confirm that the face and its features are still visible</span></span>
<span class="line">  <span class="token comment">// before drawing any graphics over it.</span></span>
<span class="line">  <span class="token class-name">Face</span> face <span class="token operator">=</span> mFace<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>face <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 3</span></span>
<span class="line">  <span class="token keyword">float</span> centerX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x <span class="token operator">+</span> face<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> centerY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y <span class="token operator">+</span> face<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> offsetX <span class="token operator">=</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> offsetY <span class="token operator">=</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 4</span></span>
<span class="line">  <span class="token comment">// Draw a box around the face.</span></span>
<span class="line">  <span class="token keyword">float</span> left <span class="token operator">=</span> centerX <span class="token operator">-</span> offsetX<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> right <span class="token operator">=</span> centerX <span class="token operator">+</span> offsetX<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> top <span class="token operator">=</span> centerY <span class="token operator">-</span> offsetY<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> bottom <span class="token operator">=</span> centerY <span class="token operator">+</span> offsetY<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 5</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 6</span></span>
<span class="line">  <span class="token comment">// Draw the face&#39;s id.</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;id: %d&quot;</span><span class="token punctuation">,</span> face<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here’s what that code does:</p><ol><li>When a <code>FaceTracker</code> instance gets an update on a tracked face, it calls its corresponding <code>FaceGraphic</code> instance’s <code>update</code> method and passes it information about that face. The method saves that information in <code>mFace</code> and then calls <code>FaceGraphic</code>’s parent class’ <code>postInvalidate</code> method, which forces the graphic to redraw.</li><li>Before attempting to draw a box around the face, the <code>draw</code> method checks to see if the face is still being tracked. If it is, <code>mFace</code> will be non-<code>null</code>.</li><li>The x- and y-coordinates of the center of the face are calculated. <code>FaceTracker</code> provides camera coordinates, but you’re drawing to <code>FaceGraphic</code>’s view coordinates, so you use <code>GraphicOverlay</code>’s <code>translateX</code> and <code>translateY</code> methods to convert <code>mFace</code>’s camera coordinates to the view coordinates of the canvas.</li><li>Calculate the x-offsets for the left and right sides of the box and the y-offsets for the top and bottom. The difference between the camera’s and the view’s coordinate systems require you convert the face’s width and height using <code>GraphicOverlay</code>’s <code>scaleX</code> and <code>scaleY</code> methods.</li><li>Draw the box around the face using the calculated center coordinates and offsets.</li><li>Draw the face’s <code>id</code> using the face’s center point as the starting coordinates.</li></ol><p>The face detector in <code>FaceActivity</code> sends information about faces it detects in the camera’s data stream to its assigned multiprocessor. For each detected face, the multiprocessor spawns a new <code>FaceTracker</code> instance.</p>`,5)),s("p",null,[n[46]||(n[46]=a("Add the following methods to ")),t(o,{icon:"fa-brands fa-java"}),n[47]||(n[47]=s("code",null,"FaceTracker.java",-1)),n[48]||(n[48]=a(" after the constructor:"))]),n[79]||(n[79]=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 1</span></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNewItem</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">Face</span> face<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mFaceGraphic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FaceGraphic</span><span class="token punctuation">(</span>mOverlay<span class="token punctuation">,</span> mContext<span class="token punctuation">,</span> mIsFrontFacing<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2</span></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpdate</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector<span class="token punctuation">.</span>Detections</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span> detectionResults<span class="token punctuation">,</span> <span class="token class-name">Face</span> face<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mOverlay<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mFaceGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceGraphic<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>face<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3</span></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMissing</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector<span class="token punctuation">.</span>Detections</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span> detectionResults<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mOverlay<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>mFaceGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mOverlay<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>mFaceGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here’s what each method does:</p><ol><li><strong>onNewItem</strong>: Called when a new <code>Face</code> is detected and its tracking begins. You’re using it to create a new instance of <code>FaceGraphic</code>, which makes sense: when a new face is detected, you want to create new AR images to draw over it.</li><li><strong>onUpdate</strong>: Called when some property (position, angle, or state) of a tracked face changes. You’re using it to add the <code>FaceGraphic</code> instance to the <code>GraphicOverlay</code> and then call <code>FaceGraphic</code>’s <code>update</code> method, which passes along the tracked face’s data.</li><li><strong>onMissing</strong> and <strong>onDone</strong>: Called when a tracked face is assumed to be temporarily and permanently gone, respectively. Both remove the <code>FaceGraphic</code> instance from the overlay.</li></ol><p>Run the app. It will draw a box around each face it detects, along with the corresponding ID number:</p><p>![Augmented Reality - Face with ID](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-02-1.jpg =240x)</p><p>![Augmented Reality - Multiple faces with ID](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-03.jpg =240x)</p><hr><h2 id="landmarks-ahoy" tabindex="-1"><a class="header-anchor" href="#landmarks-ahoy"><span>Landmarks Ahoy!</span></a></h2><p>The Face API can identify the facial landmarks shown below.</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/landmarks.png" alt="Augmented Reality - Face API landmarks overview" tabindex="0" loading="lazy"><figcaption>Augmented Reality - Face API landmarks overview</figcaption></figure><p>You’ll modify the app so that it identifies the following for any tracked face:</p><ul><li>left eye</li><li>right eye</li><li>nose base</li><li>mouth left</li><li>mouth bottom</li><li>mouth right</li></ul><p>This information will be saved in a <code>FaceData</code> object, instead of the provided <code>Face</code> object.</p><p>For facial landmarks, “left” and “right” refer to the subject’s left and right. Viewed through the front camera, the subject’s right eye will be closer to the right side of the screen, but through the rear camera, it’ll be closer to the left.</p>`,14)),s("p",null,[n[49]||(n[49]=a("Open ")),t(o,{icon:"fa-brands fa-java"}),n[50]||(n[50]=s("code",null,"FaceTracker.java",-1)),n[51]||(n[51]=a(" and modify ")),n[52]||(n[52]=s("code",null,"onUpdate()",-1)),n[53]||(n[53]=a(" as shown below. The call to ")),n[54]||(n[54]=s("code",null,"update()",-1)),n[55]||(n[55]=a(" will momentarily cause a build error while you are in the process of modifying the app to use the ")),n[56]||(n[56]=s("code",null,"FaceData",-1)),n[57]||(n[57]=a(" model and you will fix it soon."))]),n[80]||(n[80]=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpdate</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector<span class="token punctuation">.</span>Detections</span> detectionResults<span class="token punctuation">,</span> <span class="token class-name">Face</span> face<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mOverlay<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mFaceGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Get face dimensions.</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Get the positions of facial landmarks.</span></span>
<span class="line">  <span class="token function">updatePreviousLandmarkPositions</span><span class="token punctuation">(</span>face<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setLeftEyePosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_EYE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setRightEyePosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_EYE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_CHEEK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_CHEEK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setNoseBasePosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">NOSE_BASE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_EAR</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_EAR_TIP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_EAR</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_EAR_TIP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthLeftPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_MOUTH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">BOTTOM_MOUTH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthRightPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_MOUTH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  mFaceGraphic<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>mFaceData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that you’re now passing a <code>FaceData</code> instance to <code>FaceGraphic</code>’s <code>update</code> method instead of the <code>Face</code> instance that the <code>onUpdate</code> method receives.</p><p>This allows you to specify the face information passed to <code>FaceTracker</code>, which in turn lets you use some math trickery based on the last known locations of facial landmarks when the faces are moving too quickly to approximate their current locations. You use <code>mPreviousLandmarkPositions</code> and the <code>getLandmarkPosition</code> and <code>updatePreviousLandmarkPositions</code> methods for this purpose.</p>`,3)),s("p",null,[n[58]||(n[58]=a("Now open ")),t(o,{icon:"fa-brands fa-java"}),n[59]||(n[59]=s("code",null,"FaceGraphic.java",-1)),n[60]||(n[60]=a("."))]),n[81]||(n[81]=c(`<p>First, since it’s now receiving a <code>FaceData</code> value instead of a <code>Face</code> value from <code>FaceTracker</code>, you need to change a key instance variable declaration from:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Face</span> mFace<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>to:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">FaceData</span> mFaceData<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Modify <code>update()</code> to account for this change:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">FaceData</span> faceData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mFaceData <span class="token operator">=</span> faceData<span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">postInvalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Trigger a redraw of the graphic (i.e. cause draw() to be called).</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And finally, you need to update <code>draw()</code> to draw dots over the landmarks of any tracked face, and identifying text over those dots:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">DOT_RADIUS</span> <span class="token operator">=</span> <span class="token number">3.0f</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">TEXT_OFFSET_Y</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">30.0f</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Confirm that the face and its features are still visible before drawing any graphics over it.</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>mFaceData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 1</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectLeftEyePosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getLeftEyePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectRightEyePosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getRightEyePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectNoseBasePosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getNoseBasePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectMouthLeftPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getMouthLeftPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectMouthBottomPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getMouthBottomPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectMouthRightPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getMouthRightPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>detectPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectLeftEyePosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectRightEyePosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectNoseBasePosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectMouthLeftPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectMouthBottomPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectMouthRightPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 2</span></span>
<span class="line">  <span class="token keyword">float</span> leftEyeX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>detectLeftEyePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> leftEyeY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>detectLeftEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>leftEyeX<span class="token punctuation">,</span> leftEyeY<span class="token punctuation">,</span> <span class="token constant">DOT_RADIUS</span><span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token string">&quot;left eye&quot;</span><span class="token punctuation">,</span> leftEyeX<span class="token punctuation">,</span> leftEyeY <span class="token operator">+</span> <span class="token constant">TEXT_OFFSET_Y</span><span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> rightEyeX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>detectRightEyePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> rightEyeY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>detectRightEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>rightEyeX<span class="token punctuation">,</span> rightEyeY<span class="token punctuation">,</span> <span class="token constant">DOT_RADIUS</span><span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token string">&quot;right eye&quot;</span><span class="token punctuation">,</span> rightEyeX<span class="token punctuation">,</span> rightEyeY <span class="token operator">+</span> <span class="token constant">TEXT_OFFSET_Y</span><span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> noseBaseX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>detectNoseBasePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> noseBaseY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>detectNoseBasePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>noseBaseX<span class="token punctuation">,</span> noseBaseY<span class="token punctuation">,</span> <span class="token constant">DOT_RADIUS</span><span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token string">&quot;nose base&quot;</span><span class="token punctuation">,</span> noseBaseX<span class="token punctuation">,</span> noseBaseY <span class="token operator">+</span> <span class="token constant">TEXT_OFFSET_Y</span><span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> mouthLeftX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>detectMouthLeftPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> mouthLeftY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>detectMouthLeftPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>mouthLeftX<span class="token punctuation">,</span> mouthLeftY<span class="token punctuation">,</span> <span class="token constant">DOT_RADIUS</span><span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token string">&quot;mouth left&quot;</span><span class="token punctuation">,</span> mouthLeftX<span class="token punctuation">,</span> mouthLeftY <span class="token operator">+</span> <span class="token constant">TEXT_OFFSET_Y</span><span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> mouthRightX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>detectMouthRightPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> mouthRightY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>detectMouthRightPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>mouthRightX<span class="token punctuation">,</span> mouthRightY<span class="token punctuation">,</span> <span class="token constant">DOT_RADIUS</span><span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token string">&quot;mouth right&quot;</span><span class="token punctuation">,</span> mouthRightX<span class="token punctuation">,</span> mouthRightY <span class="token operator">+</span> <span class="token constant">TEXT_OFFSET_Y</span><span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> mouthBottomX <span class="token operator">=</span> <span class="token function">translateX</span><span class="token punctuation">(</span>detectMouthBottomPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> mouthBottomY <span class="token operator">=</span> <span class="token function">translateY</span><span class="token punctuation">(</span>detectMouthBottomPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>mouthBottomX<span class="token punctuation">,</span> mouthBottomY<span class="token punctuation">,</span> <span class="token constant">DOT_RADIUS</span><span class="token punctuation">,</span> mHintOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span><span class="token string">&quot;mouth bottom&quot;</span><span class="token punctuation">,</span> mouthBottomX<span class="token punctuation">,</span> mouthBottomY <span class="token operator">+</span> <span class="token constant">TEXT_OFFSET_Y</span><span class="token punctuation">,</span> mHintTextPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here’s what you should note about this revised method:</p><ol><li>Because face data will change very quickly, these checks are necessary to confirm that any objects that you extract from <code>mFaceData</code> are not <code>null</code> before using their data. Without these checks, the app will crash.</li><li>This part, which verbose, is fairly straightforward: it extracts the coordinates for each landmark and uses them to draw dots and identify text over the appropriate locations on the tracked face.</li></ol><p>Run the app. You should get results similar to this…</p><p>![Landmarks detected with the Face API](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-02-1.jpg =240x)</p><p>…or with multiple faces, results like this:</p><p>![Landmarks with multiple faces](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-05.jpg =240x)</p><p>Now that you can identify landmarks on faces, you can start drawing cartoon features over them! But first, let’s talk about facial classifications.</p><hr><h2 id="classifications" tabindex="-1"><a class="header-anchor" href="#classifications"><span>Classifications</span></a></h2><p>The <code>Face</code> class provides classifications through these methods:</p><ol><li><code>getIsLeftEyeOpenProbability</code> and <code>getIsRightEyeOpenProbability</code>: The probability that the specified eye is open or closed, and</li><li><code>getIsSmilingProbability</code>: The probability that the face is smiling.</li></ol><p>Both return <code>floats</code> with a range of 0.0 (highly unlikely) to 1.0 (bet everything on it). You’ll use the results from these methods to determine whether an eye is open and whether a face is smiling and pass that information along to <code>FaceGraphic</code>.</p><p>Modify <code>FaceTracker</code> to make use of classifications. First, add two new instance variables to the <code>FaceTracker</code> class to keep track of the previous eye states. As with landmarks, when subjects move around quickly, the detector may fail to determine eye states, and that’s when having the previous state comes in handy:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">boolean</span> mPreviousIsLeftEyeOpen <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">boolean</span> mPreviousIsRightEyeOpen <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>onUpdate</code> also needs to be updated as follows:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpdate</span><span class="token punctuation">(</span><span class="token class-name">FaceDetector<span class="token punctuation">.</span>Detections</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Face</span><span class="token punctuation">&gt;</span></span> detectionResults<span class="token punctuation">,</span> <span class="token class-name">Face</span> face<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mOverlay<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mFaceGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">updatePreviousLandmarkPositions</span><span class="token punctuation">(</span>face<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Get face dimensions.</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Get the positions of facial landmarks.</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setLeftEyePosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_EYE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setRightEyePosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_EYE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_CHEEK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_CHEEK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setNoseBasePosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">NOSE_BASE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_EAR</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_EAR_TIP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_EAR</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_EAR_TIP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthLeftPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">LEFT_MOUTH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthBottomPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">BOTTOM_MOUTH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setMouthRightPosition</span><span class="token punctuation">(</span><span class="token function">getLandmarkPosition</span><span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token class-name">Landmark</span><span class="token punctuation">.</span><span class="token constant">RIGHT_MOUTH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 1</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">EYE_CLOSED_THRESHOLD</span> <span class="token operator">=</span> <span class="token number">0.4f</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> leftOpenScore <span class="token operator">=</span> face<span class="token punctuation">.</span><span class="token function">getIsLeftEyeOpenProbability</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>leftOpenScore <span class="token operator">==</span> <span class="token class-name">Face</span><span class="token punctuation">.</span><span class="token constant">UNCOMPUTED_PROBABILITY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mFaceData<span class="token punctuation">.</span><span class="token function">setLeftEyeOpen</span><span class="token punctuation">(</span>mPreviousIsLeftEyeOpen<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    mFaceData<span class="token punctuation">.</span><span class="token function">setLeftEyeOpen</span><span class="token punctuation">(</span>leftOpenScore <span class="token operator">&gt;</span> <span class="token constant">EYE_CLOSED_THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    mPreviousIsLeftEyeOpen <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">isLeftEyeOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">float</span> rightOpenScore <span class="token operator">=</span> face<span class="token punctuation">.</span><span class="token function">getIsRightEyeOpenProbability</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>rightOpenScore <span class="token operator">==</span> <span class="token class-name">Face</span><span class="token punctuation">.</span><span class="token constant">UNCOMPUTED_PROBABILITY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mFaceData<span class="token punctuation">.</span><span class="token function">setRightEyeOpen</span><span class="token punctuation">(</span>mPreviousIsRightEyeOpen<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    mFaceData<span class="token punctuation">.</span><span class="token function">setRightEyeOpen</span><span class="token punctuation">(</span>rightOpenScore <span class="token operator">&gt;</span> <span class="token constant">EYE_CLOSED_THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    mPreviousIsRightEyeOpen <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">isRightEyeOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 2</span></span>
<span class="line">  <span class="token comment">// See if there&#39;s a smile!</span></span>
<span class="line">  <span class="token comment">// Determine if person is smiling.</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">SMILING_THRESHOLD</span> <span class="token operator">=</span> <span class="token number">0.8f</span><span class="token punctuation">;</span></span>
<span class="line">  mFaceData<span class="token punctuation">.</span><span class="token function">setSmiling</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getIsSmilingProbability</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token constant">SMILING_THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  mFaceGraphic<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>mFaceData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here are the changes:</p><ol><li><code>FaceGraphic</code> should be responsible simply for drawing graphics over faces, not determining whether an eye is open or closed based on the face detector’s probability assessments. This means that <code>FaceTracker</code> should do those calculations and provide <code>FaceGraphic</code> with ready-to-eat data in the form of a <code>FaceData</code> instance. These calculations take the results from <code>getIsLeftEyeOpenProbability</code> and <code>getIsRightEyeOpenProbability</code> and turn them into a simple <code>true</code>/<code>false</code> value. If the detector thinks that there’s a greater than 40% chance that an eye is open, it’s considered open.</li><li>You’ll do the same for smiling with <code>getIsSmilingProbability</code>, but more strictly. If the detector thinks that there’s a greater than 80% chance that the face is smiling, it’s considered to be smiling.</li></ol><hr><h2 id="giving-faces-the-cartoon-treatment" tabindex="-1"><a class="header-anchor" href="#giving-faces-the-cartoon-treatment"><span>Giving Faces the Cartoon Treatment</span></a></h2><p>Now that you’re collecting landmarks and classifications, you can now overlay any tracked face with these cartoon features:</p><ul><li>Cartoon eyes over the real eyes, with each cartoon eye reflecting the real eye’s open/closed state</li><li>A pig nose over the real nose</li><li>A mustache</li><li>If the tracked face is smiling, the cartoon irises in its cartoon eyes are rendered as smiling stars.</li></ul><p>This requires the following changes to <code>FaceGraphic</code>’s <code>draw</code> method:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">DOT_RADIUS</span> <span class="token operator">=</span> <span class="token number">3.0f</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">TEXT_OFFSET_Y</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">30.0f</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Confirm that the face and its features are still visible</span></span>
<span class="line">  <span class="token comment">// before drawing any graphics over it.</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>mFaceData <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">PointF</span> detectPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectLeftEyePosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getLeftEyePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectRightEyePosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getRightEyePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectNoseBasePosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getNoseBasePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectMouthLeftPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getMouthLeftPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectMouthBottomPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getMouthBottomPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> detectMouthRightPosition <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getMouthRightPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>detectPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectLeftEyePosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectRightEyePosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectNoseBasePosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectMouthLeftPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectMouthBottomPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">      <span class="token punctuation">(</span>detectMouthRightPosition <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Face position and dimensions</span></span>
<span class="line">  <span class="token class-name">PointF</span> position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                               <span class="token function">translateY</span><span class="token punctuation">(</span>detectPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> width <span class="token operator">=</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>mFaceData<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> height <span class="token operator">=</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>mFaceData<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Eye coordinates</span></span>
<span class="line">  <span class="token class-name">PointF</span> leftEyePosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectLeftEyePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">translateY</span><span class="token punctuation">(</span>detectLeftEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> rightEyePosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectRightEyePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">translateY</span><span class="token punctuation">(</span>detectRightEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Eye state</span></span>
<span class="line">  <span class="token keyword">boolean</span> leftEyeOpen <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">isLeftEyeOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">boolean</span> rightEyeOpen <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">isRightEyeOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Nose coordinates</span></span>
<span class="line">  <span class="token class-name">PointF</span> noseBasePosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectNoseBasePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">translateY</span><span class="token punctuation">(</span>detectNoseBasePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Mouth coordinates</span></span>
<span class="line">  <span class="token class-name">PointF</span> mouthLeftPosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectMouthLeftPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">translateY</span><span class="token punctuation">(</span>detectMouthLeftPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> mouthRightPosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectMouthRightPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">translateY</span><span class="token punctuation">(</span>detectMouthRightPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">PointF</span> mouthBottomPosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token function">translateX</span><span class="token punctuation">(</span>detectMouthBottomPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">translateY</span><span class="token punctuation">(</span>detectMouthBottomPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Smile state</span></span>
<span class="line">  <span class="token keyword">boolean</span> smiling <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">isSmiling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Calculate the distance between the eyes using Pythagoras&#39; formula,</span></span>
<span class="line">  <span class="token comment">// and we&#39;ll use that distance to set the size of the eyes and irises.</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">EYE_RADIUS_PROPORTION</span> <span class="token operator">=</span> <span class="token number">0.45f</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">IRIS_RADIUS_PROPORTION</span> <span class="token operator">=</span> <span class="token constant">EYE_RADIUS_PROPORTION</span> <span class="token operator">/</span> <span class="token number">2.0f</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> distance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">(</span>rightEyePosition<span class="token punctuation">.</span>x <span class="token operator">-</span> leftEyePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>rightEyePosition<span class="token punctuation">.</span>x <span class="token operator">-</span> leftEyePosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token punctuation">(</span>rightEyePosition<span class="token punctuation">.</span>y <span class="token operator">-</span> leftEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>rightEyePosition<span class="token punctuation">.</span>y <span class="token operator">-</span> leftEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> eyeRadius <span class="token operator">=</span> <span class="token constant">EYE_RADIUS_PROPORTION</span> <span class="token operator">*</span> distance<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> irisRadius <span class="token operator">=</span> <span class="token constant">IRIS_RADIUS_PROPORTION</span> <span class="token operator">*</span> distance<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Draw the eyes.</span></span>
<span class="line">  <span class="token function">drawEye</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> leftEyePosition<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> leftEyePosition<span class="token punctuation">,</span> irisRadius<span class="token punctuation">,</span> leftEyeOpen<span class="token punctuation">,</span> smiling<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">drawEye</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> rightEyePosition<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> rightEyePosition<span class="token punctuation">,</span> irisRadius<span class="token punctuation">,</span> rightEyeOpen<span class="token punctuation">,</span> smiling<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Draw the nose.</span></span>
<span class="line">  <span class="token function">drawNose</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> noseBasePosition<span class="token punctuation">,</span> leftEyePosition<span class="token punctuation">,</span> rightEyePosition<span class="token punctuation">,</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Draw the mustache.</span></span>
<span class="line">  <span class="token function">drawMustache</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> noseBasePosition<span class="token punctuation">,</span> mouthLeftPosition<span class="token punctuation">,</span> mouthRightPosition<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>…and add the following methods to draw the eyes, nose, and mustache:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawEye</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">,</span></span>
<span class="line">                     <span class="token class-name">PointF</span> eyePosition<span class="token punctuation">,</span> <span class="token keyword">float</span> eyeRadius<span class="token punctuation">,</span></span>
<span class="line">                     <span class="token class-name">PointF</span> irisPosition<span class="token punctuation">,</span> <span class="token keyword">float</span> irisRadius<span class="token punctuation">,</span></span>
<span class="line">                     <span class="token keyword">boolean</span> eyeOpen<span class="token punctuation">,</span> <span class="token keyword">boolean</span> smiling<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>eyeOpen<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>eyePosition<span class="token punctuation">.</span>x<span class="token punctuation">,</span> eyePosition<span class="token punctuation">.</span>y<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> mEyeWhitePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>smiling<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      mHappyStarGraphic<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>irisPosition<span class="token punctuation">.</span>x <span class="token operator">-</span> irisRadius<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>irisPosition<span class="token punctuation">.</span>y <span class="token operator">-</span> irisRadius<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>irisPosition<span class="token punctuation">.</span>x <span class="token operator">+</span> irisRadius<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>irisPosition<span class="token punctuation">.</span>y <span class="token operator">+</span> irisRadius<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      mHappyStarGraphic<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>irisPosition<span class="token punctuation">.</span>x<span class="token punctuation">,</span> irisPosition<span class="token punctuation">.</span>y<span class="token punctuation">,</span> irisRadius<span class="token punctuation">,</span> mIrisPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>eyePosition<span class="token punctuation">.</span>x<span class="token punctuation">,</span> eyePosition<span class="token punctuation">.</span>y<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> mEyelidPaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> y <span class="token operator">=</span> eyePosition<span class="token punctuation">.</span>y<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> start <span class="token operator">=</span> eyePosition<span class="token punctuation">.</span>x <span class="token operator">-</span> eyeRadius<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> end <span class="token operator">=</span> eyePosition<span class="token punctuation">.</span>x <span class="token operator">+</span> eyeRadius<span class="token punctuation">;</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> y<span class="token punctuation">,</span> end<span class="token punctuation">,</span> y<span class="token punctuation">,</span> mEyeOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>eyePosition<span class="token punctuation">.</span>x<span class="token punctuation">,</span> eyePosition<span class="token punctuation">.</span>y<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> mEyeOutlinePaint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawNose</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">,</span></span>
<span class="line">                      <span class="token class-name">PointF</span> noseBasePosition<span class="token punctuation">,</span></span>
<span class="line">                      <span class="token class-name">PointF</span> leftEyePosition<span class="token punctuation">,</span> <span class="token class-name">PointF</span> rightEyePosition<span class="token punctuation">,</span></span>
<span class="line">                      <span class="token keyword">float</span> faceWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">NOSE_FACE_WIDTH_RATIO</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">5.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> noseWidth <span class="token operator">=</span> faceWidth <span class="token operator">*</span> <span class="token constant">NOSE_FACE_WIDTH_RATIO</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>noseBasePosition<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token punctuation">(</span>noseWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>noseBasePosition<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token punctuation">(</span>noseWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>leftEyePosition<span class="token punctuation">.</span>y <span class="token operator">+</span> rightEyePosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>noseBasePosition<span class="token punctuation">.</span>y<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  mPigNoseGraphic<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mPigNoseGraphic<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawMustache</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">,</span></span>
<span class="line">                          <span class="token class-name">PointF</span> noseBasePosition<span class="token punctuation">,</span></span>
<span class="line">                          <span class="token class-name">PointF</span> mouthLeftPosition<span class="token punctuation">,</span> <span class="token class-name">PointF</span> mouthRightPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>mouthLeftPosition<span class="token punctuation">.</span>x<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>noseBasePosition<span class="token punctuation">.</span>y<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>mouthRightPosition<span class="token punctuation">.</span>x<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>mouthLeftPosition<span class="token punctuation">.</span>y<span class="token punctuation">,</span> mouthRightPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>mIsFrontFacing<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mMustacheGraphic<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    mMustacheGraphic<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span>right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  mMustacheGraphic<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the app and start pointing the camera at faces. For non-smiling faces with both eyes open, you should see something like this:</p><p>![Augmented reality at work - cartoon faced baby](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-06.jpg =240x)</p><p>This one’s of me winking with my right eye (hence it’s closed) and smiling (which is why my iris is a smiling star):</p><p>![Augmented Reality-Me smiling as a cartoon with winking eyes](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-07.jpg =240x)</p><p>The app will draw cartoon features over a small number of faces simultaneously…</p><p>![Augmented Reality-Multiple faces with cartoon overlay](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-08.jpg =240x)</p><p>…and even over faces in illustrations if they’re realistic enough:</p><p>![Augmented Reality-Sketch that looks like a face recognized by the Face API](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-09.jpg =240x)</p><p>It’s a lot more like Snapchat now!</p><hr><h2 id="what-s-your-angle" tabindex="-1"><a class="header-anchor" href="#what-s-your-angle"><span>What’s Your Angle?</span></a></h2><p>The Face API provides another measurement: <strong>Euler angles</strong>.</p><p>Pronounced “Oiler” and named after mathematician <a href="https://en.wikipedia.org/wiki/Leonhard_Euler" target="_blank" rel="noopener noreferrer">Leonhard Euler</a>, these describe the orientation of detected faces. The API uses the x-, y-, and z- coordinate system below.</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/x-y-and-z-axes-for-euler-angles-1.jpg" alt="Augmented Reality-euler angles" tabindex="0" loading="lazy"><figcaption>Augmented Reality-euler angles</figcaption></figure><p>…and reports the following Euler angles for each detected face.</p><p>![Euler Y rotation](https://koenig-media.raywenderlich.com/uploads/2017/05/eulerYRotation.gif =240x)</p><p>![Euler Z rotation](https://koenig-media.raywenderlich.com/uploads/2017/05/eulerZRotation.gif =240x)</p><ol><li>The <strong>Euler y angle</strong>, which is its angle rotation around the y-axis. When you shake your head to say “no” as shown below, you’re rotating your head back and forth around the y-axis. This angle is detected only if the detector is set to <code>ACCURATE_MODE</code>.</li><li>The <strong>Euler z angle</strong>, which measures its rotation around the z-axis. When you bobble your head from side to side as illustrated below, you’re rotating your head back and forth around the z-axis.</li></ol>`,52)),s("p",null,[n[61]||(n[61]=a("Open ")),t(o,{icon:"fa-brands fa-java"}),n[62]||(n[62]=s("code",null,"FaceTracker.java",-1)),n[63]||(n[63]=a(" and add support for Euler angles by adding these lines to its ")),n[64]||(n[64]=s("code",null,"onUpdate()",-1)),n[65]||(n[65]=a(" method, after the call to ")),n[66]||(n[66]=s("code",null,"updatePreviousLandmarkPositions",-1)),n[67]||(n[67]=a(":"))]),n[82]||(n[82]=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// Get head angles.</span></span>
<span class="line">mFaceData<span class="token punctuation">.</span><span class="token function">setEulerY</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getEulerY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">mFaceData<span class="token punctuation">.</span><span class="token function">setEulerZ</span><span class="token punctuation">(</span>face<span class="token punctuation">.</span><span class="token function">getEulerZ</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You’ll make use of the Euler z angle to modify <code>FaceGraphic</code> so that it draws a hat on any face whose Euler z angle is greater than 20 degrees to one side.</p>`,2)),s("p",null,[n[68]||(n[68]=a("Open ")),t(o,{icon:"fa-brands fa-java"}),n[69]||(n[69]=s("code",null,"FaceGraphic.java",-1)),n[70]||(n[70]=a(" and add the following to the end of draw:"))]),n[83]||(n[83]=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// Head tilt</span></span>
<span class="line"><span class="token keyword">float</span> eulerY <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getEulerY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">float</span> eulerZ <span class="token operator">=</span> mFaceData<span class="token punctuation">.</span><span class="token function">getEulerZ</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Draw the hat only if the subject&#39;s head is titled at a sufficiently jaunty angle.</span></span>
<span class="line"><span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">HEAD_TILT_HAT_THRESHOLD</span> <span class="token operator">=</span> <span class="token number">20.0f</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>eulerZ<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token constant">HEAD_TILT_HAT_THRESHOLD</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">drawHat</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> position<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> noseBasePosition<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>…and add the following <code>drawHat</code> method to the end of the class:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawHat</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">,</span> <span class="token class-name">PointF</span> facePosition<span class="token punctuation">,</span> <span class="token keyword">float</span> faceWidth<span class="token punctuation">,</span> <span class="token keyword">float</span> faceHeight<span class="token punctuation">,</span> <span class="token class-name">PointF</span> noseBasePosition<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">HAT_FACE_WIDTH_RATIO</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">/</span> <span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">HAT_FACE_HEIGHT_RATIO</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">/</span> <span class="token number">6.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">HAT_CENTER_Y_OFFSET_FACTOR</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">/</span> <span class="token number">8.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> hatCenterY <span class="token operator">=</span> facePosition<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token punctuation">(</span>faceHeight <span class="token operator">*</span> <span class="token constant">HAT_CENTER_Y_OFFSET_FACTOR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> hatWidth <span class="token operator">=</span> faceWidth <span class="token operator">*</span> <span class="token constant">HAT_FACE_WIDTH_RATIO</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> hatHeight <span class="token operator">=</span> faceHeight <span class="token operator">*</span> <span class="token constant">HAT_FACE_HEIGHT_RATIO</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>noseBasePosition<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token punctuation">(</span>hatWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>noseBasePosition<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token punctuation">(</span>hatWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>hatCenterY <span class="token operator">-</span> <span class="token punctuation">(</span>hatHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>hatCenterY <span class="token operator">+</span> <span class="token punctuation">(</span>hatHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mHatGraphic<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mHatGraphic<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the app. Now a cute little hat will appear near the top of any head titled at a jaunty angle:</p><p>![augmented reality - baby with a hat, googly eyes and a moustache](https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-10.jpg =240x)</p><hr><h2 id="bouncing-irises" tabindex="-1"><a class="header-anchor" href="#bouncing-irises"><span>Bouncing Irises</span></a></h2><p>Finally, you’ll use a simple physics engine to make the irises bounce around. This requires two simple changes to <code>FaceGraphic</code>. First, you need to declare two new instance variables, which provide a physics engine for each eye. Put these just below the declaration for the <code>Drawable</code> instance variables:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// We want each iris to move independently, so each one gets its own physics engine.</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">EyePhysics</span> mLeftPhysics <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EyePhysics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">EyePhysics</span> mRightPhysics <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EyePhysics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The second change goes in the call to <code>FaceGraphic</code>’s <code>draw</code> method. Until now, you’ve set the iris positions to the same coordinates as the eye positions.</p><p>Now, modify the code in <code>draw</code>’s “draw the eyes” section to use the physics engines to determine each iris’ position:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// Draw the eyes.</span></span>
<span class="line"><span class="token class-name">PointF</span> leftIrisPosition <span class="token operator">=</span> mLeftPhysics<span class="token punctuation">.</span><span class="token function">nextIrisPosition</span><span class="token punctuation">(</span>leftEyePosition<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> irisRadius<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">drawEye</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> leftEyePosition<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> leftIrisPosition<span class="token punctuation">,</span> irisRadius<span class="token punctuation">,</span> leftEyeOpen<span class="token punctuation">,</span> smiling<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">PointF</span> rightIrisPosition <span class="token operator">=</span> mRightPhysics<span class="token punctuation">.</span><span class="token function">nextIrisPosition</span><span class="token punctuation">(</span>rightEyePosition<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> irisRadius<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">drawEye</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> rightEyePosition<span class="token punctuation">,</span> eyeRadius<span class="token punctuation">,</span> rightIrisPosition<span class="token punctuation">,</span> irisRadius<span class="token punctuation">,</span> rightEyeOpen<span class="token punctuation">,</span> smiling<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the app. Now everyone has googly (pun somewhat intended) eyes!</p><p>![Augmented Reality-googly eyes](https://koenig-media.raywenderlich.com/uploads/2017/05/googly.gif =240x)</p><hr><h2 id="where-to-go-from-here" tabindex="-1"><a class="header-anchor" href="#where-to-go-from-here"><span>Where to Go From Here?</span></a></h2><p>You can download the final project <a href="https://koenig-media.raywenderlich.com/uploads/2017/05/FaceSpotter-final.zip" target="_blank" rel="noopener noreferrer">here</a>.</p><p>You’ve made the journey from augmented reality and face detection newbie to…well, maybe not grizzled veteran, but someone who now knows how to make use of both in Android apps.</p><p>Now that you’ve gone through a few iterations of the app, from starter version to finished version, you should have no trouble understanding this diagram showing how FaceSpotter’s objects are related:</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/facespotter-object-diagram-650x418.png" alt="augmented reality" tabindex="0" loading="lazy"><figcaption>augmented reality</figcaption></figure><p>A good next step would be to take a closer look at Google’s Mobile Vision site, and particularly the section on the Face API.</p><p>Reading other people’s code is a great way to learn things, and Google’s android-vision GitHub repository is a treasure trove of ideas and code.</p><p>If you have any questions or comments, please join the discussion below!</p><p>[download-material]</p>`,24))])}const A=d(g,[["render",F]]),R=JSON.parse('{"path":"/kodeco.com/523-augmented-reality-in-android-with-google-s-face-api.html","title":"Augmented Reality in Android with Google’s Face API","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Augmented Reality in Android with Google’s Face API","description":"Article(s) > Augmented Reality in Android with Google’s Face API","icon":"fa-brands fa-android","category":["Java","Android","Gradle","Article(s)"],"tag":["blog","kodeco.com","java","android","gradle"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Augmented Reality in Android with Google’s Face API\\",\\"image\\":[\\"https://koenig-media.raywenderlich.com/uploads/2017/04/sad-cat.jpg\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/camera-permission-request.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-01-1.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/build.gradle-app-in-project-pane.jpg\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/androidmanifest.xml-in-project-pane.jpg\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-02-1.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-03.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/landmarks.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-02-1.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-05.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-06.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-07.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-08.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-09.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/x-y-and-z-axes-for-euler-angles-1.jpg\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/eulerYRotation.gif =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/eulerZRotation.gif =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/facespotter-screenshot-10.jpg =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/05/googly.gif =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/facespotter-object-diagram-650x418.png\\"],\\"datePublished\\":\\"2017-07-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/kodeco.com/523-augmented-reality-in-android-with-google-s-face-api.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Augmented Reality in Android with Google’s Face API"}],["meta",{"property":"og:description","content":"Article(s) > Augmented Reality in Android with Google’s Face API"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://koenig-media.raywenderlich.com/uploads/2017/05/MobileVision-twitter.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://koenig-media.raywenderlich.com/uploads/2017/05/MobileVision-twitter.png"}],["meta",{"name":"twitter:image:alt","content":"Augmented Reality in Android with Google’s Face API"}],["meta",{"property":"article:tag","content":"gradle"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"kodeco.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2017-07-12T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Augmented Reality in Android with Google’s Face API"},{"property":"og:description","content":"Augmented Reality in Android with Google’s Face API"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/kodeco.com/523-augmented-reality-in-android-with-google-s-face-api.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2017-07-12T00:00:00.000Z","isOriginal":false,"cover":"https://koenig-media.raywenderlich.com/uploads/2017/05/MobileVision-twitter.png"},"git":{},"readingTime":{"minutes":17.2,"words":5159},"filePathRelative":"kodeco.com/523-augmented-reality-in-android-with-google-s-face-api.md"}');export{A as comp,R as data};
