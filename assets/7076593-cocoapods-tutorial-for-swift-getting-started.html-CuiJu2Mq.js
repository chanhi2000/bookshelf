import{_ as f}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as s,f as a,b as i,t as k,n as v,g as b,w as o,e,r as d,o as w}from"./app-BVguHYKu.js";const y={},P={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},C={class:"table-of-contents"},S={href:"https://koenig-media.raywenderlich.com/uploads/2020/01/IceCreamShop-Materials-1.zip",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/CocoaPods/Specs",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/Alamofire/Alamofire",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/jdg/MBProgressHUD",target:"_blank",rel:"noopener noreferrer"},j={href:"https://koenig-media.raywenderlich.com/uploads/2020/01/IceCreamShop-Materials-1.zip",target:"_blank",rel:"noopener noreferrer"};function F(u,n){const m=d("VPCard"),l=d("router-link"),g=d("SiteInfo"),t=d("VPIcon"),c=d("Tabs");return w(),h("div",null,[s("h1",P,[s("a",x,[s("span",null,k(u.$frontmatter.title)+" 관련",1)])]),a(m,v(b({title:"Swift > Article(s)",desc:"Article(s)",link:"/programming/swift/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",C,[s("ul",null,[s("li",null,[a(l,{to:"#getting-started"},{default:o(()=>n[0]||(n[0]=[e("Getting Started")])),_:1,__:[0]})]),s("li",null,[a(l,{to:"#ice-cream-shop-inc"},{default:o(()=>n[1]||(n[1]=[e("Ice Cream Shop, Inc.")])),_:1,__:[1]})]),s("li",null,[a(l,{to:"#installing-your-first-dependency"},{default:o(()=>n[2]||(n[2]=[e("Installing Your First Dependency")])),_:1,__:[2]}),s("ul",null,[s("li",null,[a(l,{to:"#a-word-about-libraries"},{default:o(()=>n[3]||(n[3]=[e("A Word About Libraries")])),_:1,__:[3]})]),s("li",null,[a(l,{to:"#back-to-installing-your-first-dependency"},{default:o(()=>n[4]||(n[4]=[e("Back to Installing Your First Dependency")])),_:1,__:[4]})])])]),s("li",null,[a(l,{to:"#using-installed-pods"},{default:o(()=>n[5]||(n[5]=[e("Using Installed Pods")])),_:1,__:[5]})]),s("li",null,[a(l,{to:"#now-for-a-tasty-topping"},{default:o(()=>n[6]||(n[6]=[e("Now for a Tasty Topping")])),_:1,__:[6]}),s("ul",null,[s("li",null,[a(l,{to:"#semantic-versioning"},{default:o(()=>n[7]||(n[7]=[e("Semantic Versioning")])),_:1,__:[7]})]),s("li",null,[a(l,{to:"#challenge-time"},{default:o(()=>n[8]||(n[8]=[e("Challenge Time")])),_:1,__:[8]})]),s("li",null,[a(l,{to:"#showing-progress"},{default:o(()=>n[9]||(n[9]=[e("Showing Progress")])),_:1,__:[9]})])])]),s("li",null,[a(l,{to:"#where-to-go-from-here"},{default:o(()=>n[10]||(n[10]=[e("Where to Go From Here?")])),_:1,__:[10]})])])]),n[100]||(n[100]=s("hr",null,null,-1)),a(g,{name:"CocoaPods Tutorial for Swift: Getting Started",desc:"Use this CocoaPods Tutorial for Swift to learn how to install and manage third-party library dependencies in your Swift projects.",url:"https://kodeco.com/7076593-cocoapods-tutorial-for-swift-getting-started",logo:"https://assets.carolus.kodeco.com/assets/murakami/category-icons/category-tools-libraries-ios-332bbe814d9611fbedd98b00454084a66e0f64042270ac273c27145f80902377.svg",preview:"https://koenig-media.raywenderlich.com/uploads/2020/01/HowToCreateCocoaPods-twitter.png"}),n[101]||(n[101]=i('<div class="hint-container note"><p class="hint-container-title">Update</p><p>Rony Rozen updated this tutorial for Xcode 11 and Swift 5. Joshua Greene wrote the original.</p></div><p>CocoaPods is a popular dependency manager for Swift and Objective-C Cocoa projects. Thousands of libraries and millions of apps use it, according to the <a href="http://cocoapods.org" target="_blank" rel="noopener noreferrer">CocoaPods website</a>. But what is a dependency manager and why do you need one?</p><p>A dependency manager makes it easy to add, remove, update and manage the third-party dependencies your app uses.</p><p>For example, instead of reinventing your own networking library, you can easily pull in <a href="https://kodeco.com/35-alamofire-tutorial-getting-started" target="_blank" rel="noopener noreferrer">Alamofire</a> using a dependency manager. You can specify either the exact version to use or a range of acceptable versions.</p><p>This means that even if Alamofire gets an update with changes that aren’t backward-compatible, your app can continue using the older version until you’re ready to update it.</p><p>In this tutorial, you’ll learn how to use CocoaPods with Swift. Specifically, you’ll:</p><ul><li>Install CocoaPods.</li><li>Work with a functional demo app that gets you thinking about ice cream.</li><li>Use CocoaPods to add networking.</li><li>Learn about semantic versioning.</li><li>Add another library using a flexible version.</li></ul><p>This tutorial also includes classes that use Core Graphics. While knowledge of Core Graphics is beneficial, it’s not required. If you’d like to learn more, read our <a href="https://kodeco.com/8003281-core-graphics-tutorial-getting-started" target="_blank" rel="noopener noreferrer">Modern Core Graphics With Swift</a> series.</p><div class="hint-container tip"><p class="hint-container-title">Note</p><p>This CocoaPods tutorial requires basic familiarity with iOS and Swift development. If you’re completely new to iOS and/or Swift, then please check out some of the other <a href="https://kodeco.com/ios/articles" target="_blank" rel="noopener noreferrer">written</a> and/or <a href="https://kodeco.com/ios/videos" target="_blank" rel="noopener noreferrer">video</a> tutorials on this site before doing this tutorial. Or, dive into our book, <a href="http://www.kodeco.com/store/ios-apprentice" target="_blank" rel="noopener noreferrer">iOS Apprentice</a>.</p></div><hr><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>Getting Started</span></a></h2>',11)),s("p",null,[n[12]||(n[12]=e("Download the starter project by clicking the ")),s("a",S,[a(t,{icon:"fas fa-download"}),n[11]||(n[11]=s("code",null,"[Download Materials]",-1))]),n[13]||(n[13]=e(" button at the top or bottom of the tutorial."))]),n[102]||(n[102]=i(`<p>Throughout this tutorial, you’ll work with an app called <strong>Ice Cream Shop, Inc</strong>. You’ll use CocoaPods to add dependencies to the app the easy way, instead of writing your own.</p><p>Before you can proceed with this tutorial, you need to install CocoaPods. Fortunately, CocoaPods uses Ruby, which ships with all versions of macOS X since version 10.7.</p><p>Open <strong>Terminal</strong> and enter the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> gem <span class="token function">install</span> cocoapods</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Enter your password when requested. The Terminal output will show various fetching, installing and documentation-related outputs, concluding with “XX gems installed”.</p><div class="hint-container tip"><p class="hint-container-title">Note</p><p>You must use <code>sudo</code> to install CocoaPods, but once it’s installed, you won’t need to use it again in this tutorial.</p></div><p>Finally, enter this command in Terminal to complete the setup:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">pod setup <span class="token parameter variable">--verbose</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,8)),s("p",null,[n[15]||(n[15]=e("This process takes a few minutes because it clones the ")),s("a",T,[a(t,{icon:"iconfont icon-github"}),n[14]||(n[14]=e("CocoaPods Master Specs repository"))]),n[16]||(n[16]=e(" into ")),a(t,{icon:"fas fa-folder-open"}),n[17]||(n[17]=s("code",null,"~/.cocoapods/",-1)),n[18]||(n[18]=e(" on your computer."))]),n[103]||(n[103]=s("p",null,[e("The "),s("code",null,"verbose"),e(" option logs progress as the process runs, allowing you to watch the process instead of seeing a seemingly “frozen” screen.")],-1)),n[104]||(n[104]=s("p",null,"Awesome, you’re now set up to use CocoaPods!",-1)),n[105]||(n[105]=s("hr",null,null,-1)),n[106]||(n[106]=s("h2",{id:"ice-cream-shop-inc",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ice-cream-shop-inc"},[s("span",null,"Ice Cream Shop, Inc.")])],-1)),n[107]||(n[107]=s("p",null,"Your top client is Ice Cream Shop, Inc. Their ice cream is so popular they can’t keep up with customer orders at the counter. They’ve recruited you to create a sleek iOS app that allows customers to order ice cream right from their iPhones.",-1)),s("p",null,[n[19]||(n[19]=e("You’ve started developing the app and it’s coming along well. Take a look at your progress by opening ")),a(t,{icon:"fas fa-file-lines"}),n[20]||(n[20]=s("code",null,"IceCreamShop.xcodeproj",-1)),n[21]||(n[21]=e(", then building and running. You’ll see a mouth-watering vanilla ice cream cone:"))]),n[108]||(n[108]=s("p",null,"![Ice Cream Shop, Inc.'s start page](https://koenig-media.raywenderlich.com/uploads/2015/03/icecreamshop_starter.png =240x)",-1)),n[109]||(n[109]=s("p",null,"The user should be able to choose an ice cream flavor from this screen, but that’s not possible yet. Your first step is to finish implementing this functionality.",-1)),s("p",null,[n[22]||(n[22]=e("Open ")),a(t,{icon:"fas fa-file-lines"}),n[23]||(n[23]=s("code",null,"Main.storyboard",-1)),n[24]||(n[24]=e(" from the ")),n[25]||(n[25]=s("code",null,"Views/Storyboards & Nibs",-1)),n[26]||(n[26]=e(" group to see the app’s layout. Here’s a quick overview of the heart of the app, the ")),a(t,{icon:"iconfont icon-select"}),n[27]||(n[27]=s("code",null,"[Choose Your Flavor]",-1)),n[28]||(n[28]=e(" scene:"))]),s("figure",null,[n[32]||(n[32]=s("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/04/ChooseYourFlavor-427x500.png",alt:'Components of the <VPIcon icon="iconfont icon-select"/> scene',tabindex:"0",loading:"lazy"},null,-1)),s("figcaption",null,[n[29]||(n[29]=e("Components of the ")),a(t,{icon:"iconfont icon-select"}),n[30]||(n[30]=s("code",null,"[Choose Your Flavor]",-1)),n[31]||(n[31]=e(" scene"))])]),n[110]||(n[110]=i("<ul><li><code>PickFlavorViewController</code> is the view controller for this scene. It handles user interaction and provides the data for the collection view that displays the different ice cream flavors.</li><li><code>IceCreamView</code> is a custom view that displays an ice cream cone based on the backing mode, <code>Flavor</code>.</li><li><code>ScoopCell</code> is a custom collection view cell that contains a <code>ScoopView</code>, which gets colors from a <code>Flavor</code> model.</li></ul><p>While every Ice Cream Shop, Inc. location has signature flavors in common, each carries its own local flavors, too. For this reason, a web service needs to provide the data for the <code>Flavor</code>s.</p><p>However, this still doesn’t explain why users can’t select their ice cream flavors.</p>",3)),s("p",null,[n[33]||(n[33]=e("Open ")),a(t,{icon:"fa-brands fa-swift"}),n[34]||(n[34]=s("code",null,"PickFlavorViewController.swift",-1)),n[35]||(n[35]=e(", found under the ")),n[36]||(n[36]=s("code",null,"Controllers",-1)),n[37]||(n[37]=e(" group, and you’ll see a stubbed method:"))]),n[111]||(n[111]=i(`<div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">loadFlavors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// TO-DO: Implement this</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Aha, there are no flavors! You need to implement the function!</p>`,2)),s("p",null,[n[39]||(n[39]=e("While you could use ")),n[40]||(n[40]=s("code",null,"URLSession",-1)),n[41]||(n[41]=e(" and write your own networking classes, there’s an easier way: Use ")),s("a",A,[a(t,{icon:"iconfont icon-github"}),n[38]||(n[38]=s("code",null,"Alamofire/Alamofire",-1))]),n[42]||(n[42]=e("!"))]),n[112]||(n[112]=s("p",null,"You might be tempted to download this library and drag the source files right into your project. However, that’d be doing it the hard way. CocoaPods provides a much more elegant and nimble solution.",-1)),n[113]||(n[113]=s("hr",null,null,-1)),n[114]||(n[114]=s("h2",{id:"installing-your-first-dependency",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#installing-your-first-dependency"},[s("span",null,"Installing Your First Dependency")])],-1)),n[115]||(n[115]=s("p",null,[e("Your first step is to "),s("strong",null,"close Xcode"),e(". Yeah, you read that right.")],-1)),s("p",null,[n[43]||(n[43]=e("It’s time to create the ")),a(t,{icon:"fas fa-file-lines"}),n[44]||(n[44]=s("code",null,"Podfile",-1)),n[45]||(n[45]=e(", where you’ll define your project’s dependencies."))]),n[116]||(n[116]=i(`<p>Open <strong>Terminal</strong> and navigate to the directory that contains your <strong>IceCreamShop</strong> project by using the <code>cd</code> command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">cd</span> ~/Path/To/Folder/Containing/IceCreamShop</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Next, enter the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">pod init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This creates a <a href="https://guides.cocoapods.org/using/the-podfile.html" target="_blank" rel="noopener noreferrer">Podfile</a> for your project.</p><p>Finally, type the following command to open the Podfile using Xcode for editing:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">open</span> <span class="token parameter variable">-a</span> Xcode Podfile</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Note</p><p>Don’t use TextEdit to edit the Podfile because it replaces standard quotes with more graphically-appealing typeset quotes. This can cause CocoaPods to become confused and throw errors. Instead, use Xcode or another programming text editor to edit your Podfile.</p></div><p>The default Podfile looks like this:</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line"><span class="token comment"># Uncomment the next line to define a global platform for your project</span></span>
<span class="line"><span class="token comment"># platform :ios, &#39;9.0&#39;</span></span>
<span class="line"></span>
<span class="line">target <span class="token string-literal"><span class="token string">&#39;IceCreamShop&#39;</span></span> <span class="token keyword">do</span></span>
<span class="line">  <span class="token comment"># Comment the next line if you&#39;re not using Swift and don&#39;t want to use dynamic frameworks</span></span>
<span class="line">  use_frameworks<span class="token operator">!</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment"># Pods for IceCreamShop</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Delete the <code>#</code> and space before <code>platform</code>, then delete the other lines starting with <code>#</code>.</p><p>Your Podfile should now look like this:</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line">platform <span class="token symbol">:ios</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;9.0&#39;</span></span></span>
<span class="line"></span>
<span class="line">target <span class="token string-literal"><span class="token string">&#39;IceCreamShop&#39;</span></span> <span class="token keyword">do</span></span>
<span class="line">  use_frameworks<span class="token operator">!</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This tells CocoaPods your project targets iOS 9.0 and will use frameworks instead of static libraries. While Swift and CocoaPods both support static linking, not all libraries you include do. One of them that you’ll use in this project does not.</p><p>If you’ve only programmed in Swift, this may look a bit strange. That’s because the Podfile is actually written in Ruby. You don’t need to know Ruby to use CocoaPods, but you should be aware that even minor text errors will cause CocoaPods to throw errors.</p><h3 id="a-word-about-libraries" tabindex="-1"><a class="header-anchor" href="#a-word-about-libraries"><span>A Word About Libraries</span></a></h3><p>You’ll see the term <strong>library</strong> often used as a general term that actually means a library or framework. This tutorial is guilty of casually intermixing these words, too.</p><p>You may be wondering about the differences between a library, a framework and a CocoaPod. It’s OK if you find the terminology a bit confusing!</p><p>A <strong>CocoaPod</strong>, or <strong>pod</strong> for short, is a general term for either a library or framework that’s added to your project using CocoaPods.</p><p>iOS 8 introduced <strong>dynamic frameworks</strong>, which allow you to bundle code, images and other assets together. Prior to iOS 8, you created CocoaPods as “fat” <strong>static libraries</strong>. “Fat” means they contained several code instruction sets, like i386 for the simulator, armv7 for devices, etc. However, Swift doesn’t allow static libraries to contain resources such as images or assets.</p><h3 id="back-to-installing-your-first-dependency" tabindex="-1"><a class="header-anchor" href="#back-to-installing-your-first-dependency"><span>Back to Installing Your First Dependency</span></a></h3>`,21)),s("p",null,[n[46]||(n[46]=e("It’s finally time to add your first dependency using CocoaPods. Add the following to your")),a(t,{icon:"fas fa-file-lines"}),n[47]||(n[47]=s("code",null,"Podfile",-1)),n[48]||(n[48]=e(", right after ")),n[49]||(n[49]=s("code",null,"use_frameworks!",-1)),n[50]||(n[50]=e(":"))]),n[117]||(n[117]=i(`<div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line">pod <span class="token string-literal"><span class="token string">&#39;Alamofire&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;4.9.1&#39;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This tells CocoaPods you want to include Alamofire version 4.9.1 as a dependency for your project.</p>`,2)),s("p",null,[n[51]||(n[51]=e("Save and close the ")),a(t,{icon:"fas fa-file-lines"}),n[52]||(n[52]=s("code",null,"Podfile",-1)),n[53]||(n[53]=e("."))]),n[118]||(n[118]=s("p",null,"You now need to tell CocoaPods to install the dependencies for your project.",-1)),s("p",null,[n[54]||(n[54]=e("Enter the following command in ")),n[55]||(n[55]=s("strong",null,"Terminal",-1)),n[56]||(n[56]=e(", after ensuring you’re still in the directory containing the ")),n[57]||(n[57]=s("code",null,"IceCreamShop",-1)),n[58]||(n[58]=e(" project and ")),a(t,{icon:"fas fa-file-lines"}),n[59]||(n[59]=s("code",null,"Podfile",-1)),n[60]||(n[60]=e(":"))]),n[119]||(n[119]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">pod <span class="token function">install</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># Analyzing dependencies</span></span>
<span class="line"><span class="token comment"># Adding spec repo \`trunk\` with CDN \`https://cdn.cocoapods.org/\`</span></span>
<span class="line"><span class="token comment"># Downloading dependencies</span></span>
<span class="line"><span class="token comment"># Installing Alamofire (4.9.1)</span></span>
<span class="line"><span class="token comment"># Generating Pods project</span></span>
<span class="line"><span class="token comment"># Integrating client project</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># [!] Please close any current Xcode sessions and use \`IceCreamShop.xcworkspace\` for this project from now on.</span></span>
<span class="line"><span class="token comment"># Pod installation complete! There is 1 dependency from the Podfile and 1 total pod installed.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[61]||(n[61]=e("Open the ")),n[62]||(n[62]=s("strong",null,"project folder",-1)),n[63]||(n[63]=e(" using ")),n[64]||(n[64]=s("strong",null,"Finder",-1)),n[65]||(n[65]=e(" and you’ll see CocoaPods created a new ")),a(t,{icon:"fas fa-file-lines"}),n[66]||(n[66]=s("code",null,"IceCreamShop.xcworkspace",-1)),n[67]||(n[67]=e(" file and a Pods folder to store all the project’s dependencies."))]),n[120]||(n[120]=i('<div class="hint-container tip"><p class="hint-container-title">Note</p><p>From now on, as the command line warning mentioned, you must always open the project with the <code>.xcworkspace</code> file and not the <code>.xcodeproj</code>. Otherwise, you’ll encounter build errors.</p></div><p>Excellent! You’ve just added your first dependency using CocoaPods!</p><hr><h2 id="using-installed-pods" tabindex="-1"><a class="header-anchor" href="#using-installed-pods"><span>Using Installed Pods</span></a></h2><p>Now, you’ll use your brand new dependency, Alamofire.</p>',5)),s("p",null,[n[68]||(n[68]=e("If the Xcode project is open, close it now and open ")),a(t,{icon:"fas fa-file-lines"}),n[69]||(n[69]=s("code",null,"IceCreamShop.xcworkspace",-1)),n[70]||(n[70]=e("."))]),s("p",null,[n[71]||(n[71]=e("Open ")),a(t,{icon:"fa-brands fa-swift"}),n[72]||(n[72]=s("code",null,"PickFlavorViewController.swift",-1)),n[73]||(n[73]=e(" and add the following just below the existing import:"))]),n[121]||(n[121]=i(`<div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">import</span> <span class="token class-name">Alamofire</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Build and run. You’ll see no change yet but rest assured that Alamofire is now available.</p><p>![First compilation after integrating Alamofire dependency](https://koenig-media.raywenderlich.com/uploads/2020/01/Simulator-Screen-Shot-iPhone-11-Pro-Max-2020-01-16-at-20.19.34-231x500.png =240x)</p><p>Next, replace <code>loadFlavors()</code> with the following:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line">  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">loadFlavors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 1    </span></span>
<span class="line">    <span class="token class-name">Alamofire</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token string-literal"><span class="token string">&quot;https://www.raywenderlich.com/downloads/Flavors.plist&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">      method<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">,</span></span>
<span class="line">      encoding<span class="token punctuation">:</span> <span class="token class-name">PropertyListEncoding</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <span class="token punctuation">.</span>xml<span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span>responsePropertyList <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token keyword">weak</span> <span class="token keyword">self</span><span class="token punctuation">]</span> response <span class="token keyword">in</span></span>
<span class="line">        <span class="token comment">// 2</span></span>
<span class="line">        <span class="token keyword">guard</span> <span class="token keyword">let</span> <span class="token keyword">self</span> <span class="token operator">=</span> <span class="token keyword">self</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 3        </span></span>
<span class="line">        <span class="token keyword">guard</span> </span>
<span class="line">          response<span class="token punctuation">.</span>result<span class="token punctuation">.</span>isSuccess<span class="token punctuation">,</span></span>
<span class="line">          <span class="token keyword">let</span> dictionaryArray <span class="token operator">=</span> response<span class="token punctuation">.</span>result<span class="token punctuation">.</span>value <span class="token keyword">as</span><span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span> </span>
<span class="line">          <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 4</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>flavors <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>flavorFactory<span class="token punctuation">.</span><span class="token function">flavors</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> dictionaryArray<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 5</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>collectionView<span class="token punctuation">.</span><span class="token function">reloadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">selectFirstFlavor</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here’s the play-by-play of what’s happening in this code:</p><ol><li>You use Alamofire to create a <strong>GET</strong> request and download a plist containing ice cream flavors.</li><li>To break a strong reference cycle, you use a weak reference to <code>self</code> in the response completion block. Once the block executes, you immediately get a strong reference to <code>self</code> so you can set properties on it later.</li><li>Next, you verify the <code>response.result</code> shows success and the <code>response.result.value</code> is an array of dictionaries.</li><li>Now, you set <code>self.flavors</code> to an array of <code>Flavor</code> objects that <code>FlavorFactory</code> creates. This is a class a “colleague” wrote for you (you’re welcome!), which takes an array of dictionaries and uses them to create instances of <code>Flavor</code>.</li><li>Finally, you reload the collection view and select the first flavor.</li></ol><p>Build and run. You can now choose an ice cream flavor!</p><p>![Choose Flavor](https://koenig-media.raywenderlich.com/uploads/2015/03/choose_flavor-282x500.png =240x)</p><hr><h2 id="now-for-a-tasty-topping" tabindex="-1"><a class="header-anchor" href="#now-for-a-tasty-topping"><span>Now for a Tasty Topping</span></a></h2><p>The app looks good, but you can still improve it.</p><p>Did you notice the app takes a second to download the flavors file? If you’re on a fast Internet connection, you might not notice the delay, but your customers won’t always be so lucky.</p>`,13)),s("p",null,[n[75]||(n[75]=e("Your next step is to show a loading indicator in your app, to help customers understand it’s loading data and not just twiddling its libraries. ")),s("a",I,[a(t,{icon:"iconfont icon-github"}),n[74]||(n[74]=s("code",null,"jdg/MBProgressHUD",-1))]),n[76]||(n[76]=e(" is a really nice indicator that will work well here. And it supports CocoaPods; what a coincidence!"))]),n[122]||(n[122]=s("p",null,"To use this pod, you need to add it to your Podfile. Rather than opening the Podfile from the command line, you can now find it in the Pods target in the workspace:",-1)),n[123]||(n[123]=s("figure",null,[s("img",{src:"https://koenig-media.raywenderlich.com/uploads/2015/03/pods_in_workspace-365x320.png",alt:"Pods in Workspace",tabindex:"0",loading:"lazy"}),s("figcaption",null,"Pods in Workspace")],-1)),s("p",null,[n[77]||(n[77]=e("Open ")),a(t,{icon:"fas fa-file-lines"}),n[78]||(n[78]=s("code",null,"Podfile",-1)),n[79]||(n[79]=e(" and add the following, right after the ")),n[80]||(n[80]=s("strong",null,"Alamofire",-1)),n[81]||(n[81]=e(" line:"))]),n[124]||(n[124]=i(`<div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line">pod <span class="token string-literal"><span class="token string">&#39;MBProgressHUD&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;~&gt; 1.0&#39;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Save the file and install the dependencies via <code>pod install</code> in Terminal, just as you did before.</p><p>Notice anything different this time? Yep, you specified the version number as <code>~&gt; 1.0</code>. But why?</p><p>CocoaPods recommends that all pods use <a href="http://semver.org/" target="_blank" rel="noopener noreferrer">Semantic Versioning</a>. Take a moment to understand what that is.</p><h3 id="semantic-versioning" tabindex="-1"><a class="header-anchor" href="#semantic-versioning"><span>Semantic Versioning</span></a></h3><p>Many times, you’ll see a version written like this: 1.0.0. Those three numbers are <strong>major</strong>, <strong>minor</strong> and <strong>patch</strong> version numbers.</p><p>For example, for the version number <strong>1.0.0</strong>, 1 is the major number, the first 0 is the minor number, and the second 0 is the patch number.</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/04/sem_versioning.png" alt="Semantic Versioning Example" tabindex="0" loading="lazy"><figcaption>Semantic Versioning Example</figcaption></figure><p>If the <strong>major</strong> number increases, it indicates that the version contains non-backward-compatible changes. When you upgrade a pod to the next major version, you may need to fix build errors or the pod may behave differently than before.</p><p>If the <strong>minor</strong> number increases, it indicates that the version contains new functionality that <em>is</em> backward-compatible. When you decide to upgrade, you may or may not need the new functionality, but it shouldn’t cause any build errors or change existing behavior.</p><p>If the <strong>patch</strong> number increases, it means the new version contains bug fixes but no new functionality or behavior changes. In general, you always want to upgrade patch versions as soon as possible to have the latest, stable version of the pod.</p><p>Finally, when you increase the highest-order number — <strong>major</strong>, then <strong>minor</strong> then <strong>patch</strong> — per the above rules, you must reset any lower-order numbers to zero.</p><p>Here’s an example:</p><p>Consider a pod that has a current version number of <strong>1.2.3</strong>.</p><p>If you make changes that are <em>not</em> backward-compatible, don’t have new functionality, but fix existing bugs, you’d give it version <strong>2.0.0</strong>.</p><h3 id="challenge-time" tabindex="-1"><a class="header-anchor" href="#challenge-time"><span>Challenge Time</span></a></h3>`,16)),a(c,{data:[{id:"Q1"},{id:"A1"}],active:0},{title0:o(({value:r,isActive:p})=>n[82]||(n[82]=[e("Q1")])),title1:o(({value:r,isActive:p})=>n[83]||(n[83]=[e("A1")])),tab0:o(({value:r,isActive:p})=>n[84]||(n[84]=[s("p",null,[e("If a pod has a current version of "),s("strong",null,"2.4.6"),e(" and you make changes that fix bugs and add backward-compatible functionality, what should the new version number be?")],-1)])),tab1:o(({value:r,isActive:p})=>n[85]||(n[85]=[s("ul",null,[s("li",null,[e("Answer: "),s("strong",null,"2.5.0")]),s("li",null,[e("Explanation: If you make changes that include new functionality that’s backward-compatible, you increase the "),s("strong",null,"minor"),e(" number and reset the "),s("strong",null,"patch"),e(" to zero.")])],-1)])),_:1}),a(c,{data:[{id:"Q2"},{id:"A2"}],active:0},{title0:o(({value:r,isActive:p})=>n[86]||(n[86]=[e("Q2")])),title1:o(({value:r,isActive:p})=>n[87]||(n[87]=[e("A2")])),tab0:o(({value:r,isActive:p})=>n[88]||(n[88]=[s("p",null,[e("If a pod has a current version of "),s("strong",null,"3.5.8"),e(" and you make changes to existing functionality which aren’t backward-compatible, what should the new version number be?")],-1)])),tab1:o(({value:r,isActive:p})=>n[89]||(n[89]=[s("ul",null,[s("li",null,[e("Answer: "),s("strong",null,"4.0.0")]),s("li",null,[e("Explanation: If changes modify existing behavior and are not backward-compatible, you must increase the "),s("strong",null,"major"),e(" number and reset the "),s("strong",null,"minor"),e(" and "),s("strong",null,"patch"),e(" numbers to zero.")])],-1)])),_:1}),a(c,{data:[{id:"Q3"},{id:"A3"}],active:0},{title0:o(({value:r,isActive:p})=>n[90]||(n[90]=[e("Q3")])),title1:o(({value:r,isActive:p})=>n[91]||(n[91]=[e("A3")])),tab0:o(({value:r,isActive:p})=>n[92]||(n[92]=[s("p",null,[e("If a pod has a current version of "),s("strong",null,"10.20.30"),e(" and you only fix bugs, what should the new version number be?")],-1),s("p",null,null,-1)])),tab1:o(({value:r,isActive:p})=>n[93]||(n[93]=[s("ul",null,[s("li",null,[e("Answer: "),s("strong",null,"10.20.31")]),s("li",null,[e("Explanation: If you only fix bugs, you only increase the "),s("strong",null,"patch"),e(" number.")])],-1)])),_:1}),n[125]||(n[125]=i('<p>Having said all this, there’s one exception to these rules:</p><p>If a pod’s version number is less than <strong>1.0.0</strong>, it’s considered a beta version. Minor number increases <em>may</em> include changes that aren’t backward-compatible.</p><p>So back to <code>MBProgressHUB</code>: Using <code>~&gt; 1.0</code> means you should install the latest version that’s greater than or equal to <code>1.0</code> but less than <code>2.0</code>.</p><p>This ensures you get the latest bug fixes and features when you install this pod, but you won’t accidentally pull in backward-incompatible changes.</p><p>There are several other operators you can use as well. For a complete list, see the <a href="http://guides.cocoapods.org/syntax/podfile.html#pod" target="_blank" rel="noopener noreferrer">Podfile Syntax Reference</a>.</p><p>Now that you’ve learned how operators work with your CocoaPods, it’s time to finish your app.</p><h3 id="showing-progress" tabindex="-1"><a class="header-anchor" href="#showing-progress"><span>Showing Progress</span></a></h3><p>If you recall, you were building a progress indicator to show your users when flavors are loading in the app.</p>',8)),s("p",null,[n[94]||(n[94]=e("To finish this feature, go back to ")),a(t,{icon:"fa-brands fa-swift"}),n[95]||(n[95]=s("code",null,"PickFlavorViewController.swift",-1)),n[96]||(n[96]=e(" and add the following right after the other imports:"))]),n[126]||(n[126]=i(`<div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">import</span> <span class="token class-name">MBProgressHUD</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Next, add the following helper methods after <code>loadFlavors()</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">showLoadingHUD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> hud <span class="token operator">=</span> <span class="token class-name">MBProgressHUD</span><span class="token punctuation">.</span><span class="token function">showAdded</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> contentView<span class="token punctuation">,</span> animated<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">  hud<span class="token punctuation">.</span>label<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Loading...&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">hideLoadingHUD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">MBProgressHUD</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> contentView<span class="token punctuation">,</span> animated<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, in <code>loadFlavors()</code>, add the following two lines (as indicated):</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line">  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">loadFlavors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">showLoadingHUD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &lt;-- Add this line</span></span>
<span class="line">    </span>
<span class="line">    <span class="token class-name">Alamofire</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token string-literal"><span class="token string">&quot;https://www.raywenderlich.com/downloads/Flavors.plist&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">      method<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">,</span></span>
<span class="line">      encoding<span class="token punctuation">:</span> <span class="token class-name">PropertyListEncoding</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <span class="token punctuation">.</span>xml<span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span>responsePropertyList <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token keyword">weak</span> <span class="token keyword">self</span><span class="token punctuation">]</span> response <span class="token keyword">in</span></span>
<span class="line">        <span class="token keyword">guard</span> <span class="token keyword">let</span> <span class="token keyword">self</span> <span class="token operator">=</span> <span class="token keyword">self</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">hideLoadingHUD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &lt;-- Add this line</span></span>
<span class="line">      <span class="token comment">// ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As the method names imply, <code>showLoadingHUD()</code> shows an instance of <code>MBProgressHUD</code> while the GET request downloads. <code>hideLoadingHUD()</code> hides the HUD when the request finishes. Since <code>showLoadingHUD()</code> is outside the closure, it doesn&#39;t need the <code>self</code> prefix.</p><p>Build and run. You&#39;ll now see a loading indicator while the flavors are loading. If your internet connection is too fast for this, you can add a <code>sleep(_:)</code> statement just before <code>hideLoadingHUD()</code> so that you can experience the goodness that is <strong>MBProgressHUD</strong>.</p><p>![App with loading symbol](https://koenig-media.raywenderlich.com/uploads/2017/04/HUD_Loading-281x500.png =240x)</p><p>Great work! Customers can now select their favorite ice cream flavor and they see a loading indicator while flavors are downloading.</p><hr><h2 id="where-to-go-from-here" tabindex="-1"><a class="header-anchor" href="#where-to-go-from-here"><span>Where to Go From Here?</span></a></h2>`,11)),s("p",null,[n[98]||(n[98]=e("You can download the completed project using the ")),s("a",j,[a(t,{icon:"fas fa-download"}),n[97]||(n[97]=s("code",null,"[Download Materials]",-1))]),n[99]||(n[99]=e(" button at the top or bottom of this page."))]),n[127]||(n[127]=s("p",null,"Congratulations! You now know the basics of using CocoaPods, including creating and modifying dependencies and understanding semantic versioning. You're now ready to start using them in your own projects!",-1)),n[128]||(n[128]=s("p",null,[e("There's lots more that you can do with CocoaPods. You can search for existing pods on the official "),s("a",{href:"http://cocoapods.org",target:"_blank",rel:"noopener noreferrer"},"CocoaPods website"),e(". Also, refer to the "),s("a",{href:"http://guides.cocoapods.org",target:"_blank",rel:"noopener noreferrer"},"CocoaPods Guides"),e(" to learn the finer details of this excellent tool. But be warned, once you begin using it, you'll wonder how you ever managed without it!")],-1)),n[129]||(n[129]=s("p",null,"I hope you enjoyed reading this CocoaPods tutorial as much I did writing it. What are some of your favorite CocoaPods? Which ones do you rely on the most for everyday projects? Feel free to share, or to ask any questions, in the comments below!",-1))])}const H=f(y,[["render",F]]),U=JSON.parse('{"path":"/kodeco.com/7076593-cocoapods-tutorial-for-swift-getting-started.html","title":"CocoaPods Tutorial for Swift: Getting Started","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"CocoaPods Tutorial for Swift: Getting Started","description":"Article(s) > CocoaPods Tutorial for Swift: Getting Started","icon":"fa-brands fa-swift","category":["Swift","Article(s)"],"tag":["blog","kodeco.com","swift","ios","xcode"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CocoaPods Tutorial for Swift: Getting Started\\",\\"image\\":[\\"https://koenig-media.raywenderlich.com/uploads/2015/03/icecreamshop_starter.png =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/ChooseYourFlavor-427x500.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2020/01/Simulator-Screen-Shot-iPhone-11-Pro-Max-2020-01-16-at-20.19.34-231x500.png =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2015/03/choose_flavor-282x500.png =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2015/03/pods_in_workspace-365x320.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/sem_versioning.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/04/HUD_Loading-281x500.png =240x\\"],\\"datePublished\\":\\"2020-01-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/kodeco.com/7076593-cocoapods-tutorial-for-swift-getting-started.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"CocoaPods Tutorial for Swift: Getting Started"}],["meta",{"property":"og:description","content":"Article(s) > CocoaPods Tutorial for Swift: Getting Started"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://koenig-media.raywenderlich.com/uploads/2020/01/HowToCreateCocoaPods-twitter.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://koenig-media.raywenderlich.com/uploads/2020/01/HowToCreateCocoaPods-twitter.png"}],["meta",{"name":"twitter:image:alt","content":"CocoaPods Tutorial for Swift: Getting Started"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"kodeco.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2020-01-27T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > CocoaPods Tutorial for Swift: Getting Started"},{"property":"og:description","content":"CocoaPods Tutorial for Swift: Getting Started"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/kodeco.com/6747815-uigesturerecognizer-tutorial-getting-started.html"}]],"prev":"/programming/swift/articles/README.md","date":"2020-01-27T00:00:00.000Z","isOriginal":false,"cover":"https://koenig-media.raywenderlich.com/uploads/2020/01/HowToCreateCocoaPods-twitter.png"},"git":{},"readingTime":{"minutes":10.8,"words":3239},"filePathRelative":"kodeco.com/7076593-cocoapods-tutorial-for-swift-getting-started.md"}');export{H as comp,U as data};
