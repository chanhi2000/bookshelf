import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as m,d as s,f as t,b as h,a as v,t as b,n as c,g as r,w as u,e as a,r as o,o as g}from"./app-BVguHYKu.js";const w={},y={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},S={class:"table-of-contents"},A={class:"hint-container info"},I={href:"https://youtube.com/playlist?list=PL_I3TGB7aK6jNBMZkw3FYdJXyf7quHdI8",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/amitshekhariitbhu/android-interview-questions",target:"_blank",rel:"noopener noreferrer"},T={class:"hint-container info"},C={href:"https://twitter.com/amitiitbhu",target:"_blank",rel:"noopener noreferrer"},D={href:"https://linkedin.com/in/amit-shekhar-iitbhu",target:"_blank",rel:"noopener noreferrer"},N={href:"https://youtube.com/@amitshekhar",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/amitshekhariitbhu",target:"_blank",rel:"noopener noreferrer"},O={href:"https://twitter.com/outcome_school",target:"_blank",rel:"noopener noreferrer"},x={href:"https://linkedin.com/company/outcomeschool",target:"_blank",rel:"noopener noreferrer"},j={href:"https://youtube.com/@OutcomeSchool",target:"_blank",rel:"noopener noreferrer"},P={href:"http://github.com/OutcomeSchool",target:"_blank",rel:"noopener noreferrer"};function J(d,n){const l=o("VPCard"),p=o("router-link"),i=o("SiteInfo"),e=o("VPIcon");return g(),m("div",null,[s("h1",y,[s("a",f,[s("span",null,b(d.$frontmatter.title)+" 관련",1)])]),t(l,c(r({title:"Java > Article(s)",desc:"Article(s)",link:"/programming/java/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",S,[s("ul",null,[s("li",null,[t(p,{to:"#what-is-a-data-class-in-kotlin"},{default:u(()=>n[0]||(n[0]=[a("What is a data class in Kotlin?")])),_:1,__:[0]})]),s("li",null,[t(p,{to:"#how-does-it-work-internally"},{default:u(()=>n[1]||(n[1]=[a("How does it work internally?")])),_:1,__:[1]})])])]),n[34]||(n[34]=s("hr",null,null,-1)),t(i,{name:"data class in Kotlin",desc:"In this blog, we will learn about the data class in Kotlin. We will also learn how it works internally.",url:"https://outcomeschool.com/data-class-in-kotlin",logo:"https://outcomeschool.com/static/favicons/apple-touch-icon.png",preview:"https://outcomeschool.com/static/images/blog/data-class-in-kotlin.png"}),s("div",A,[n[5]||(n[5]=s("p",{class:"hint-container-title"},"Info",-1)),s("p",null,[n[3]||(n[3]=a("Before we start, I would like to mention that, I have released a video playlist to help you crack the Android Interview: Check out ")),s("a",I,[t(e,{icon:"fa-brands fa-youtube"}),n[2]||(n[2]=a("Android Interview Questions and Answers"))]),n[4]||(n[4]=a("."))])]),n[35]||(n[35]=h(`<p>In this blog, we will learn about the <strong>data class</strong> in Kotlin. We will also learn how it works internally.</p><hr><h2 id="what-is-a-data-class-in-kotlin" tabindex="-1"><a class="header-anchor" href="#what-is-a-data-class-in-kotlin"><span>What is a data class in Kotlin?</span></a></h2><p>A data class in Kotlin is a special kind of class mainly used to hold data. It automatically generates useful methods based on the properties we define in the primary constructor. These include methods like <code>equals()</code>, <code>hashCode()</code>, <code>toString()</code>, <code>copy()</code>, and <code>componentN()</code>.</p><p>All of these happen without writing a lot of boilerplate code.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>It automatically generates useful methods based on the properties we define in the <strong>primary constructor</strong>. It is important to note that we have only mentioned the <strong>primary constructor</strong>.</p></div><p>Let&#39;s understand it with an example:</p><p>Let&#39;s create a data class <code>Developer</code>:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Developer</span><span class="token punctuation">(</span><span class="token keyword">var</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">var</span> age<span class="token operator">:</span> Int<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>That&#39;s it; our data class is ready.</p><p>Now, we will try to understand the above code.</p><ul><li><code>data</code> is the keyword used to create a data class in Kotlin.</li><li>We have two properties in the primary constructor: <code>name</code> and <code>age</code>.</li></ul><p>Data classes in Kotlin make it easier to store data without all the extra code needed in Java to create a POJO. This means we don&#39;t have to write getters, setters, or methods like equals() and hashCode(), making our model classes cleaner and easier to read.</p><hr><h2 id="how-does-it-work-internally" tabindex="-1"><a class="header-anchor" href="#how-does-it-work-internally"><span>How does it work internally?</span></a></h2><p>The Kotlin compiler automatically generates the methods for a data class. When you declare a class as a data class, the compiler generates the following methods based on the properties defined in the primary constructor:</p><ul><li><code>equals()</code></li><li><code>hashCode()</code></li><li><code>toString()</code></li><li><code>copy()</code></li><li><code>componentN()</code></li></ul><p>Now, we need to decompile this code. For that, we will have to convert this Kotlin source file to a Java source file.</p><p>Steps to convert from Kotlin source file to Java source file and decompile in Android Studio:</p><ul><li><code>Tools</code> &gt; <code>Kotlin</code> &gt; <code>Show Kotlin Bytecode</code>. You will get the bytecode of your Kotlin file.</li><li>Now click on the <code>Decompile</code> button to get your Java code from the bytecode.</li></ul><p>Here, I have kept only the important lines of the code and removed other lines for brevity.</p><p>We will get the following output:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Developer</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span></span>
<span class="line">   <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> var1<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> var1<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token class-name">Developer</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">component1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">component2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">Developer</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Developer</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token string">&quot;Developer(name=&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;, age=&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">(</span>var10000 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> var10000<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">31</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">!=</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">if</span> <span class="token punctuation">(</span>var1 <span class="token keyword">instanceof</span> <span class="token class-name">Developer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Developer</span> var2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Developer</span><span class="token punctuation">)</span>var1<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Intrinsics</span><span class="token punctuation">.</span><span class="token function">areEqual</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> var2<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">==</span> var2<span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">               <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">         <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">         <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Earlier, we used to write all of these methods in Java. Now, in Kotlin, these methods are generated automatically, reducing the need for boilerplate code. The Kotlin compiler handles this for us.</p><p><strong>Things to take care of while creating data class:</strong></p><ul><li><strong>Primary constructor</strong>: Must have at least one parameter.</li><li><strong>Properties</strong>: All primary constructor parameters must be val or var.</li><li><strong>Limitations</strong>: The data class cannot be abstract, open, sealed, or inner.</li></ul><p><strong>Use Cases:</strong></p><ul><li>Model Classes</li><li>DTOs (Data Transfer Objects)</li><li>Representing State</li><li>Immutable Objects</li></ul><p>One question for you: Can we extend a data class? For the answer, refer to the limitations mentioned above.</p>`,29)),s("p",null,[n[9]||(n[9]=a("Prepare yourself for Android Interview: ")),s("a",K,[n[6]||(n[6]=a("Android Interview Questions (")),t(e,{icon:"iconfont icon-github"}),n[7]||(n[7]=s("code",null,"amitshekhariitbhu/android-interview-questions",-1)),n[8]||(n[8]=a(")"))])]),t(i,{name:"amitshekhariitbhu/android-interview-questions",desc:"Your Cheat Sheet For Android Interview - Android Interview Questions and Answers",url:"https://github.com/amitshekhariitbhu/android-interview-questions/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://repository-images.githubusercontent.com/96704265/3a1039a7-29ee-425d-b4ea-53fcff2c1db7"}),n[36]||(n[36]=s("p",null,"That's it for now.",-1)),n[37]||(n[37]=s("p",null,"Thanks",-1)),s("div",T,[n[31]||(n[31]=s("p",{class:"hint-container-title"},"Amit Shekhar",-1)),n[32]||(n[32]=s("p",null,"You can connect with me on:",-1)),s("ul",null,[s("li",null,[s("a",C,[n[10]||(n[10]=a("X (")),t(e,{icon:"fa-brands fa-x-twitter"}),n[11]||(n[11]=s("code",null,"amitiitbhu",-1))])]),s("li",null,[s("a",D,[n[12]||(n[12]=a("LinkedIn (")),t(e,{icon:"fa-brands fa-linkedin"}),n[13]||(n[13]=s("code",null,"amit-shekhar-iitbhu",-1))])]),s("li",null,[s("a",N,[n[14]||(n[14]=a("YouTube (")),t(e,{icon:"fa-brands fa-youtube"}),n[15]||(n[15]=s("code",null,"amitshekhar",-1)),n[16]||(n[16]=a(")"))])]),s("li",null,[s("a",q,[n[17]||(n[17]=a("GitHub (")),t(e,{icon:"iconfont icon-github"}),n[18]||(n[18]=s("code",null,"amitshekhariitbhu",-1))])])]),n[33]||(n[33]=s("p",null,"Follow Outcome School on:",-1)),s("ul",null,[s("li",null,[s("a",O,[n[19]||(n[19]=a("X (")),t(e,{icon:"fa-brands fa-x-twitter"}),n[20]||(n[20]=s("code",null,"outcome_school",-1)),n[21]||(n[21]=a(")"))])]),s("li",null,[s("a",x,[n[22]||(n[22]=a("LinkedIn (")),t(e,{icon:"fa-brands fa-linkedin"}),n[23]||(n[23]=s("code",null,"outcomeschool",-1)),n[24]||(n[24]=a(")"))])]),s("li",null,[s("a",j,[n[25]||(n[25]=a("YouTube (")),t(e,{icon:"fa-brands fa-youtube"}),n[26]||(n[26]=s("code",null,"OutcomeSchool",-1)),n[27]||(n[27]=a(")"))])]),s("li",null,[s("a",P,[n[28]||(n[28]=a("GitHub (")),t(e,{icon:"iconfont icon-github"}),n[29]||(n[29]=s("code",null,"OutcomeSchool",-1)),n[30]||(n[30]=a(")"))])])])]),v(" TODO: add ARTICLE CARD "),t(l,c(r({title:"data class in Kotlin",desc:"In this blog, we will learn about the data class in Kotlin. We will also learn how it works internally.",link:"https://chanhi2000.github.io/bookshelf/outcomeschool.com/data-class-in-kotlin.html",logo:"https://outcomeschool.com/static/favicons/apple-touch-icon.png",background:"rgba(78,70,220,0.2)"})),null,16)])}const E=k(w,[["render",J]]),W=JSON.parse('{"path":"/outcomeschool.com/data-class-in-kotlin.html","title":"data class in Kotlin","lang":"en-US","frontmatter":{"lang":"en-US","title":"data class in Kotlin","description":"Article(s) > data class in Kotlin","icon":"iconfont icon-kotlin","category":["Java","Kotlin","Article(s)"],"tag":["blog","outcomeschool.com","java","kotlin"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"data class in Kotlin\\",\\"image\\":[\\"https://outcomeschool.com/static/images/blog/data-class-in-kotlin.png\\"],\\"datePublished\\":\\"2024-08-22T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amit Shekhar\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/outcomeschool.com/data-class-in-kotlin.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"data class in Kotlin"}],["meta",{"property":"og:description","content":"Article(s) > data class in Kotlin"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://outcomeschool.com/static/images/blog/data-class-in-kotlin.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://outcomeschool.com/static/images/blog/data-class-in-kotlin.png"}],["meta",{"name":"twitter:image:alt","content":"data class in Kotlin"}],["meta",{"property":"article:author","content":"Amit Shekhar"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"outcomeschool.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-08-22T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > data class in Kotlin"},{"property":"og:description","content":"data class in Kotlin"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/outcomeschool.com/data-class-in-kotlin.html"}]],"prev":"/programming/java/articles/README.md","date":"2024-08-22T00:00:00.000Z","isOriginal":false,"author":"Amit Shekhar","cover":"https://outcomeschool.com/static/images/blog/data-class-in-kotlin.png"},"git":{},"readingTime":{"minutes":3.3,"words":991},"filePathRelative":"outcomeschool.com/data-class-in-kotlin.md","copyright":{"author":"Amit Shekhar"}}');export{E as comp,W as data};
