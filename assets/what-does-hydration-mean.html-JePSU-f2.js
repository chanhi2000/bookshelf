import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as t,f as e,b as l,a as k,t as f,n as c,g as u,w as i,e as a,r as o,o as y}from"./app-BVguHYKu.js";const v={},b={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},S={href:"https://nuxt.com/docs/api/composables/use-hydration",target:"_blank",rel:"noopener noreferrer"},T={href:"https://react.dev/reference/react-dom/client/hydrateRoot",target:"_blank",rel:"noopener noreferrer"},j={href:"https://kryogenix.org/code/browser/everyonehasjs.html",target:"_blank",rel:"noopener noreferrer"},M={href:"https://nextjsstarter.com/blog/nextjs-hydration-errors-causes-fixes-tips/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://astro.build/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://frontendmasters.com/courses/astro/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://qwik.dev/",target:"_blank",rel:"noopener noreferrer"};function C(d,n){const p=o("VPCard"),r=o("router-link"),h=o("SiteInfo"),s=o("VPIcon");return y(),g("div",null,[t("h1",b,[t("a",w,[t("span",null,f(d.$frontmatter.title)+" 관련",1)])]),e(p,c(u({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t("nav",x,[t("ul",null,[t("li",null,[e(r,{to:"#tradeoffs"},{default:i(()=>n[0]||(n[0]=[a("Tradeoffs")])),_:1,__:[0]})]),t("li",null,[e(r,{to:"#what-can-go-wrong"},{default:i(()=>n[1]||(n[1]=[a("What can go wrong?")])),_:1,__:[1]})]),t("li",null,[e(r,{to:"#does-using-a-javascript-framework-with-ssr-absolutely-require-hydration"},{default:i(()=>n[2]||(n[2]=[a("Does using a JavaScript framework with SSR absolutely require hydration?")])),_:1,__:[2]})])])]),n[24]||(n[24]=t("hr",null,null,-1)),e(h,{name:"What Does Hydration Mean?",desc:"Hydration refers to JavaScript frameworks making server-side rendered HTML interactive. ",url:"https://frontendmasters.com/blog/what-does-hydration-mean/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3769"}),n[25]||(n[25]=t("p",null,[a("The term "),t("strong",null,"hydration"),a(" gets thrown around a bunch when talking about JavaScript frameworks.")],-1)),n[26]||(n[26]=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"Short answer"),t("p",null,"it’s the process which JavaScript executes, reconciles, and makes interactive the HTML that is already in the DOM via server-side rendering (SSR).")],-1)),n[27]||(n[27]=t("p",null,"I’ll elaborate for clarity.",-1)),t("p",null,[n[5]||(n[5]=a("The JavaScript framework Next.js, a React-based framework, is capable of server-side rendering and hydration, so let’s start there, knowing that ")),t("a",S,[e(s,{icon:"iconfont icon-nuxt"}),n[3]||(n[3]=a("other major frameworks do this too"))]),n[6]||(n[6]=a(". I appreciate the clarity of ")),t("a",T,[e(s,{icon:"fa-brands fa-react"}),n[4]||(n[4]=a("the docs"))]),n[7]||(n[7]=a(" of React itself:"))]),n[28]||(n[28]=l(`<blockquote><p>In React, “hydration” is how React “attaches” to existing HTML that was already rendered by React in a server environment. During hydration, React will attempt to attach event listeners to the existing markup and take over rendering the app on the client.</p></blockquote><p>But first, let’s begin with client-side only rendering. Say we have some fruit inventory. We loop over it making buttons that, when clicked, show the inventory. Ya know, like every very real world application.</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">FruitPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> inventory <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Apple&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">10</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Orange&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">8</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">27</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Check Fruit Quantities</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span>
<span class="line">      </span><span class="token punctuation">{</span>inventory<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span></span>
<span class="line">            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">There are </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fruit<span class="token punctuation">.</span>quantity<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fruit<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fruit<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token punctuation">{</span>fruit<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>\`</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>I’ll chuck that on CodePen here, which will run no build step here and just client side render it:</p><p>CodePen Embed Fallback</p><p>The HTML that the browser receives for that page is sometime referred to as an “empty shell”. It’s an HTML document, but it doesn’t have any of the real content that we’re intending to put there. We get this:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7)),t("p",null,[n[9]||(n[9]=a("The client-side rendered application gets rendered inside that when it’s ready. I’m not going to say that there is no place in this world for client-side-only rendering, but I’ll say it’s not ideal generally and I like that more and more it’s not the default. Why not ideal? If ")),t("a",j,[e(s,{icon:"fas fa-globe"}),n[8]||(n[8]=a("JavaScript doesn’t load for any reason"))]),n[10]||(n[10]=a(", there is no website at all. And there are lots of reasons why JavaScript wouldn’t load (much moreso than HTML), like a mistake is throwing an error, there was a network hiccup, it’s a large file that is taking an unexpectedly long time on the user’s network, the user is intentionally or unintentionally blocking it, etc."))]),n[29]||(n[29]=l('<p>If we run this is an off-the-shelf Next.js build instead, which <em>does</em> have a build step, the HTML output will look like this instead:</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/CleanShot-2024-09-09-at-06.57.52%402x.png?resize=1024%2C333&amp;ssl=1" alt="Screenshot of view source of the SSR React example where the content is properly in the HTML." tabindex="0" loading="lazy"><figcaption>Screenshot of view source of the SSR React example where the content is properly in the HTML.</figcaption></figure><p>I’ve highlighted the minified HTML there to show that the HTML we’ve written in React/JSX makes it’s way into the HTML that is served by the app.</p><p>This is much better! Content is being rendered here directly in HTML in that first response from the server. The browser can work with that and get it rendered immediately. And any programmatic method for hitting the URL for content (e.g. a bot, a curl, etc) will succeed.</p><p>Then JavaScript loads and <strong>hydrates that HTML</strong>. Remember how the buttons had <code>onClick</code> handlers on them? That interactivity will <em>not</em> be present on that first HTML render of site. That’s not ideal (and maybe makes buttons a bad example for SSR), but the point is that the <em>content</em> is there. We could be talking about the entire contents of an important marketing landing page, for example.</p><hr><h2 id="tradeoffs" tabindex="-1"><a class="header-anchor" href="#tradeoffs"><span>Tradeoffs</span></a></h2><p>There are tradeoffs here. We’re layering on another framework to our framework and adding a build process. We’re adding dependencies and thus long term fragility to our setup. But for the most part, serving “real HTML” to the browser is considered A Good Thing™ and I’ll go ahead and go on the record for saying you should be serving HTML with content to browsers from servers.</p><p>It could be argued that going with a framework that uses SSR then hydrates leads to more complex code. You always have to be thinking and coding around the fact that a component can be rendered both by a server and on the client. You’re writing JavaScript, and it may <em>feel</em> client-side-y. You might reach for the <code>window</code> object or a method on it and be wrist-slapped that that doesn’t exist in a server context, so you write conditionals to code around that, which can cause different issues. You might have to fetch data in a way that is server-first and perhaps handled differently than you would on the client. Not to mention: you need a server! Pure-client rendered apps can get away with being served from purely static hosting, which is much more likely to be cheap or free.</p><hr><h2 id="what-can-go-wrong" tabindex="-1"><a class="header-anchor" href="#what-can-go-wrong"><span>What can go wrong?</span></a></h2>',11)),t("p",null,[n[12]||(n[12]=a("The most likely problem is mis-matching HTML. Since we started with Next.js, ")),t("a",M,[e(s,{icon:"fas fa-globe"}),n[11]||(n[11]=a("here’s a post"))]),n[13]||(n[13]=a(" showing off a variety of examples of how this can happen with that framework. In development, you’ll likely face show-stopping full page errors with hydration errors, because the framework really wants you to fix them, and you should. ")),n[14]||(n[14]=t("em",null,"Generally",-1)),n[15]||(n[15]=a(", the production build of the site with smooth over the user-facing errors so that the site is still functional. The trouble is that then the site is quite literally doing double the work and the SSR page is being blown away entirely when the client one comes in and doesn’t match. I’ve seen user-facing hydration errors breaking a site entirely, so again: possibly fragility here. Dealing with these kind of problems is work and may introduce complexity again."))]),n[30]||(n[30]=t("hr",null,null,-1)),n[31]||(n[31]=t("h2",{id:"does-using-a-javascript-framework-with-ssr-absolutely-require-hydration",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#does-using-a-javascript-framework-with-ssr-absolutely-require-hydration"},[t("span",null,"Does using a JavaScript framework with SSR absolutely require hydration?")])],-1)),t("p",null,[n[18]||(n[18]=a("If you don’t need any interactivity at all, no. Personally, I like the component model of building sites with JavaScript-based components even if it’s largely just static content. ")),t("a",H,[e(s,{icon:"fas fa-globe"}),n[16]||(n[16]=a("Astro"))]),n[19]||(n[19]=a(" excels at that (")),t("a",R,[e(s,{icon:"fas fa-globe"}),n[17]||(n[17]=a("here’s a course"))]),n[20]||(n[20]=a("), but other frameworks can be configured to not output any JavaScript (thus skipping any hydration process)."))]),n[32]||(n[32]=t("p",null,[a("A blog post famously said "),t("a",{href:"https://builder.io/blog/hydration-is-pure-overhead",target:"_blank",rel:"noopener noreferrer"},"“Hydration is pure overhead.”")],-1)),n[33]||(n[33]=t("div",{class:"hint-container info"},[t("p",{class:"hint-container-title"},"Builder.io"),t("p",null,"… hydration is recovering event handlers by downloading and re-executing all components in the SSR/SSG-rendered HTML. The site is sent to the client twice, once as HTML, and again as JavaScript.")],-1)),n[34]||(n[34]=t("p",null,"Overhead indeed. Perhaps not ideal, but probably worth it.",-1)),t("p",null,[n[22]||(n[22]=a("The framework ")),t("a",q,[e(s,{icon:"fas fa-globe"}),n[21]||(n[21]=a("Qwik"))]),n[23]||(n[23]=a(" avoids hydration at all with a concept it coined as “resumability”. I honestly don’t know enough about it to fully understand the tradeoffs there (I promise: there are always tradeoffs), but if you’re certain that hydration is your main problem, it’s worth a look."))]),n[35]||(n[35]=t("p",null,"You should also drink more water.",-1)),k(" TODO: add ARTICLE CARD "),e(p,c(u({title:"What Does Hydration Mean?",desc:"Hydration refers to JavaScript frameworks making server-side rendered HTML interactive. ",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/what-does-hydration-mean.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const D=m(v,[["render",C]]),W=JSON.parse('{"path":"/frontendmasters.com/what-does-hydration-mean.html","title":"What Does Hydration Mean?","lang":"en-US","frontmatter":{"lang":"en-US","title":"What Does Hydration Mean?","description":"Article(s) > What Does Hydration Mean?","icon":"fa-brands fa-react","category":["Node.js","React.js","Article(s)"],"tag":["blog","frontendmasters.com","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What Does Hydration Mean?\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/09/CleanShot-2024-09-09-at-06.57.52%402x.png?resize=1024%2C333&ssl=1\\"],\\"datePublished\\":\\"2024-09-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/what-does-hydration-mean.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"What Does Hydration Mean?"}],["meta",{"property":"og:description","content":"Article(s) > What Does Hydration Mean?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3769"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3769"}],["meta",{"name":"twitter:image:alt","content":"What Does Hydration Mean?"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-09-09T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > What Does Hydration Mean?"},{"property":"og:description","content":"What Does Hydration Mean?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/what-does-hydration-mean.html"}]],"prev":"/programming/js-react/articles/README.md","date":"2024-09-09T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/3769"},"git":{},"readingTime":{"minutes":4.64,"words":1392},"filePathRelative":"frontendmasters.com/what-does-hydration-mean.md","copyright":{"author":"Chris Coyier"}}');export{D as comp,W as data};
