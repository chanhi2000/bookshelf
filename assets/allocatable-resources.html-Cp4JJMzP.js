import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as s,f as t,b as m,a as b,t as y,n as o,g as r,w as p,e as a,r as c,o as f}from"./app-BVguHYKu.js";const x={},v={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},w={class:"table-of-contents"},A={href:"https://github.com/kubernetes/node-problem-detector",target:"_blank",rel:"noopener noreferrer"},P={href:"https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#eviction-thresholds",target:"_blank",rel:"noopener noreferrer"},B={href:"https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#eviction-thresholds",target:"_blank",rel:"noopener noreferrer"},K={href:"https://cloud.google.com/kubernetes-engine",target:"_blank",rel:"noopener noreferrer"},G={href:"https://aws.amazon.com/eks/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://cloud.google.com/kubernetes-engine/docs/concepts/plan-node-sizes#memory_and_cpu_reservations",target:"_blank",rel:"noopener noreferrer"},C={class:"hint-container note"},E={href:"https://github.com/awslabs/amazon-eks-ami/blob/d87c6c49638216907cbd6630b6cadfd4825aed20/templates/al2/runtime/bootstrap.sh#L517",target:"_blank",rel:"noopener noreferrer"},S={href:"https://docs.aws.amazon.com/eks/latest/userguide/cni-increase-ip-addresses.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://isovalent.com/blog/post/cilium-release-112/",target:"_blank",rel:"noopener noreferrer"},U={href:"https://docs.aws.amazon.com/eks/latest/userguide/choosing-instance-type.html",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/awslabs/amazon-eks-ami/blob/d87c6c49638216907cbd6630b6cadfd4825aed20/templates/al2/runtime/bootstrap.sh#L285",target:"_blank",rel:"noopener noreferrer"},T={href:"https://docs.microsoft.com/en-us/azure/aks/concepts-clusters-workloads#resource-reservations",target:"_blank",rel:"noopener noreferrer"};function R(d,e){const l=c("VPCard"),i=c("router-link"),u=c("SiteInfo"),n=c("VPIcon");return f(),h("div",null,[e[48]||(e[48]=s("hr",null,null,-1)),s("h1",v,[s("a",k,[s("span",null,y(d.$frontmatter.title)+" 관련",1)])]),t(l,o(r({title:"Kubernetes > Article(s)",desc:"Article(s)",link:"/devops/k8s/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t(l,o(r({title:"AWS > Article(s)",desc:"Article(s)",link:"/devops/aws/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t(l,o(r({title:"Microsoft Azure > Article(s)",desc:"Article(s)",link:"/devops/azure/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t(l,o(r({title:"Google Cloud > Article(s)",desc:"Article(s)",link:"/devops/gcp/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",w,[s("ul",null,[s("li",null,[t(i,{to:"#how-resources-are-allocated-in-cluster-nodes"},{default:p(()=>e[0]||(e[0]=[a("How resources are allocated in cluster nodes")])),_:1,__:[0]})]),s("li",null,[t(i,{to:"#google-kubernetes-engine-gke"},{default:p(()=>e[1]||(e[1]=[a("Google Kubernetes Engine (GKE)")])),_:1,__:[1]})]),s("li",null,[t(i,{to:"#elastic-kubernetes-service-eks"},{default:p(()=>e[2]||(e[2]=[a("Elastic Kubernetes Service (EKS)")])),_:1,__:[2]})]),s("li",null,[t(i,{to:"#azure-kubernetes-service"},{default:p(()=>e[3]||(e[3]=[a("Azure Kubernetes Service")])),_:1,__:[3]})]),s("li",null,[t(i,{to:"#summary"},{default:p(()=>e[4]||(e[4]=[a("Summary")])),_:1,__:[4]})])])]),e[49]||(e[49]=s("hr",null,null,-1)),t(u,{name:"Allocatable memory and CPU in Kubernetes Nodes",desc:"Pods deployed in your Kubernetes cluster consume resources such as memory, CPU and storage. However, not all resources in a Node can be used to run Pods.",url:"https://learnk8s.io/allocatable-resources",logo:"https://static.learnk8s.io/f7e5160d4744cf05c46161170b5c11c9.svg",preview:"https://static.learnk8s.io/2f459b0416493403e14ea04caf12bd45.png"}),e[50]||(e[50]=s("div",{class:"hint-container important"},[s("p",{class:"hint-container-title"},"TL;DR"),s("p",null,"Not all CPU and memory in your Kubernetes nodes can be used to run Pods.")],-1)),e[51]||(e[51]=s("hr",null,null,-1)),e[52]||(e[52]=s("h2",{id:"how-resources-are-allocated-in-cluster-nodes",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#how-resources-are-allocated-in-cluster-nodes"},[s("span",null,"How resources are allocated in cluster nodes")])],-1)),e[53]||(e[53]=s("p",null,"Pods deployed in your Kubernetes cluster consume memory, CPU and storage resources.",-1)),e[54]||(e[54]=s("p",null,[s("strong",null,"However, not all resources in a Node can be used to run Pods.")],-1)),e[55]||(e[55]=s("p",null,"The operating system and the kubelet require memory and CPU, too, and you should cater for those extra resources.",-1)),e[56]||(e[56]=s("p",null,"If you look closely at a single Node, you can divide the available resources into:",-1)),s("ol",null,[e[13]||(e[13]=s("li",null,"Resources needed to run the operating system and system daemons such as SSH, systemd, etc.",-1)),s("li",null,[e[8]||(e[8]=a("Resources necessary to run Kubernetes agents such as the Kubelet, the container runtime, ")),s("a",A,[e[5]||(e[5]=a("node problem detector (")),t(n,{icon:"iconfont icon-github"}),e[6]||(e[6]=s("code",null,"kubernetes/node-problem-detector",-1)),e[7]||(e[7]=a(")"))]),e[9]||(e[9]=a(", etc."))]),e[14]||(e[14]=s("li",null,"Resources available to Pods.",-1)),s("li",null,[e[11]||(e[11]=a("Resources reserved to the ")),s("a",P,[t(n,{icon:"iconfont icon-k8s"}),e[10]||(e[10]=a("eviction threshold"))]),e[12]||(e[12]=a("."))])]),e[57]||(e[57]=s("figure",null,[s("img",{src:"https://learnk8s.io/a/35bda739ecd82613ebe2bc144122a051.svg",alt:"The amount of compute resources that are available to Pods",tabindex:"0",loading:"lazy"}),s("figcaption",null,"The amount of compute resources that are available to Pods")],-1)),s("p",null,[e[16]||(e[16]=a("As you can guess, ")),s("a",B,[t(n,{icon:"iconfont icon-k8s"}),e[15]||(e[15]=a("all of those quotas are customisable."))])]),e[58]||(e[58]=s("p",null,"However, please note that reserving 100MB of memory for the operating system doesn't mean that the OS is limited to using only that amount.",-1)),e[59]||(e[59]=s("p",null,"It could use more (or less) resources—you're just allocating and estimating memory and CPU usage to the best of your ability.",-1)),e[60]||(e[60]=s("p",null,[s("em",null,"But how do you decide how to assign resources?")],-1)),e[61]||(e[61]=s("p",null,[a("Unfortunately, there isn't a "),s("em",null,"fixed"),a(" answer, as it depends on your cluster.")],-1)),s("p",null,[e[19]||(e[19]=a("However, there's consensus in the major managed Kubernetes services ")),s("a",K,[t(n,{icon:"fa-brands fa-google"}),e[17]||(e[17]=a("Google Kubernetes Engine (GKE)"))]),e[20]||(e[20]=a(", ")),t(n,{icon:"iconfont icon-microsoftazure"}),e[21]||(e[21]=s("a",{href:"https://docs.microsoft.com/en-us/azure/aks/intro-kubernetes",target:"_blank",rel:"noopener noreferrer"},"Azure Kubernetes Service (AKS)",-1)),e[22]||(e[22]=a(", and ")),s("a",G,[t(n,{icon:"fa-brands fa-aws"}),e[18]||(e[18]=a("Elastic Kubernetes Service (EKS)"))]),e[23]||(e[23]=a(", and it's worth discussing how they partition the available resources."))]),e[62]||(e[62]=s("hr",null,null,-1)),e[63]||(e[63]=s("h2",{id:"google-kubernetes-engine-gke",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#google-kubernetes-engine-gke"},[s("span",null,"Google Kubernetes Engine (GKE)")])],-1)),s("p",null,[e[25]||(e[25]=a("Google Kubernetes Engine (GKE) has ")),s("a",M,[t(n,{icon:"fa-brands fa-google"}),e[24]||(e[24]=a("a well-defined list of rules to assign memory and CPU to a Node"))]),e[26]||(e[26]=a("."))]),e[64]||(e[64]=m('<p>For memory resources, GKE reserves the following:</p><ul><li>255 MiB of memory for machines with less than 1 GiB of memory</li><li>25% of the first 4GiB of memory</li><li>20% of the next 4GiB of memory (up to 8GiB)</li><li>10% of the next 8GiB of memory (up to 16GiB)</li><li>6% of the next 112GiB of memory (up to 128GiB)</li><li>2% of any memory above 128GiB</li></ul><p>For CPU resources, GKE reserves the following:</p><ul><li>6% of the first core</li><li>1% of the following core (up to 2 cores)</li><li>0.5% of the following 2 cores (up to 4 cores)</li><li>0.25% of any cores above 4 cores</li></ul><p><em>Let&#39;s look at an example.</em></p><p>A virtual machine of type <code>n1-standard-2</code> has 2 vCPU and 7.5GiB of memory.</p><p>According to the above rules, the CPU reserved is:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mtext>Allocatable</mtext><mtext> </mtext><mtext>CPU</mtext></mrow><mo>=</mo><mn>0.06</mn><mo>×</mo><mn>1</mn><mtext> </mtext><mo stretchy="false">(</mo><mrow><mtext>first</mtext><mtext> </mtext><mtext>core</mtext></mrow><mo stretchy="false">)</mo><mo>+</mo><mn>0.01</mn><mo>×</mo><mn>1</mn><mtext> </mtext><mo stretchy="false">(</mo><mrow><mtext>second</mtext><mtext> </mtext><mtext>core</mtext></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\text{Allocatable\\:CPU}=0.06\\times{1}\\:(\\text{first\\:core})+0.01\\times{1}\\:(\\text{second\\:core}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">Allocatable</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">CPU</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.06</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">1</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">first</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">core</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.01</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">1</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">second</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">core</span></span><span class="mclose">)</span></span></span></span></span></p><p><strong>That totals 70 millicores or 3.5% — a modest amount.</strong></p><p>The allocatable memory is more interesting:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mtext>Allocatable</mtext><mtext> </mtext><mtext>CPU</mtext></mrow><mo>=</mo><mn>0.25</mn><mo>×</mo><mn>4</mn><mtext> </mtext><mo stretchy="false">(</mo><mtext>first</mtext><mtext> </mtext><mn>4</mn><mtext>GB</mtext><mo stretchy="false">)</mo><mo>+</mo><mn>0.2</mn><mo>×</mo><mn>3.5</mn><mtext> </mtext><mo stretchy="false">(</mo><mtext>remaining</mtext><mtext> </mtext><mn>3.5</mn><mtext>GB</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\text{Allocatable\\:CPU}=0.25\\times{4}\\:(\\text{first}\\:4\\text{GB})+0.2\\times{3.5}\\:(\\text{remaining}\\:3.5\\text{GB}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">Allocatable</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">CPU</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.25</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">4</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">first</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mord text"><span class="mord">GB</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">3.5</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">remaining</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">3.5</span><span class="mord text"><span class="mord">GB</span></span><span class="mclose">)</span></span></span></span></span></p><p><strong>The total is 1.7GB of memory reserved for the kubelet.</strong></p><p>At this point, you might think that the remaining memory <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7.5</mn><mtext>GB</mtext><mo>−</mo><mn>1.7</mn><mtext>GB</mtext><mo>=</mo><mn>5.8</mn><mtext>GB</mtext></mrow><annotation encoding="application/x-tex">7.5\\text{GB}-1.7\\text{GB}=5.8\\text{GB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">7.5</span><span class="mord text"><span class="mord">GB</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1.7</span><span class="mord text"><span class="mord">GB</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">5.8</span><span class="mord text"><span class="mord">GB</span></span></span></span></span> is something you can use for your Pods.</p><p><em>Not really.</em></p><p><strong>The kubelet reserves an extra 100MB for the eviction threshold.</strong></p><p>In other words, you started with a virtual machine with <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7.5</mn><mtext>GiB</mtext></mrow><annotation encoding="application/x-tex">7.5\\text{GiB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">7.5</span><span class="mord text"><span class="mord">GiB</span></span></span></span></span> of memory, but you can only use <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5.7</mn><mtext>GB</mtext></mrow><annotation encoding="application/x-tex">5.7\\text{GB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">5.7</span><span class="mord text"><span class="mord">GB</span></span></span></span></span> for your Pods.</p><p><strong>That&#39;s close to ~75% of the overall capacity.</strong></p><figure><img src="https://learnk8s.io/a/d31a4f9aaebabe0ac73b5bb090c92bcb.svg" alt="Allocatable CPU and memory in Google Kubernetes Engine (GKE)" tabindex="0" loading="lazy"><figcaption>Allocatable CPU and memory in Google Kubernetes Engine (GKE)</figcaption></figure><p>You can be more efficient if you decide to use larger instances.</p><p>The instance type <code>n1-standard-96</code> has 96 vCPU and 360GiB of memory.</p><p>If you do the maths, that amounts to:</p><ul><li>405 millicores are reserved for Kubelet and operating system</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>14.26</mn><mtext>GB</mtext></mrow><annotation encoding="application/x-tex">14.26\\text{GB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">14.26</span><span class="mord text"><span class="mord">GB</span></span></span></span></span> of memory are reserved for Operating System, kubernetes agent and eviction threshold.</li></ul><p><strong>In this extreme case, only 4% of memory is not allocatable.</strong></p><hr><h2 id="elastic-kubernetes-service-eks" tabindex="-1"><a class="header-anchor" href="#elastic-kubernetes-service-eks"><span>Elastic Kubernetes Service (EKS)</span></a></h2><p>Let&#39;s explore Elastic Kubernetes Service (EKS) allocations.</p>',26)),s("div",C,[e[32]||(e[32]=s("p",{class:"hint-container-title"},"Note",-1)),s("p",null,[e[30]||(e[30]=a("Unfortunately, Elastic Kubernetes Service (EKS) doesn't offer documentation for allocatable resources. You can ")),s("a",E,[e[27]||(e[27]=a("rely on their code implementation (")),t(n,{icon:"iconfont icon-github"}),e[28]||(e[28]=s("code",null,"awslabs/amazon-eks-ami",-1)),e[29]||(e[29]=a(")"))]),e[31]||(e[31]=a(" to extract the values."))])]),e[65]||(e[65]=m(`<p>EKS reserves the following memory for each Node:</p><p class="katex-block"><span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;EOF&#39;, got &#39;_&#39; at position 66: …\\times\\text{MAX_̲POD_PER_INSTANC…" style="color:#cc0000;">\\text{Reserved\\:memory}=255\\text{MiB}+11\\text{MiB}\\times\\text{MAX_POD_PER_INSTANCE} </span></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><em>What&#39;s <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>A</mi><msub><mi>X</mi><mi>P</mi></msub><mi>O</mi><msub><mi>D</mi><mi>P</mi></msub><mi>E</mi><msub><mi>R</mi><mi>I</mi></msub><mi>N</mi><mi>S</mi><mi>T</mi><mi>A</mi><mi>N</mi><mi>C</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">MAX_POD_PER_INSTANCE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">NST</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">NCE</span></span></span></span>?</em></p><p><strong>In Amazon Web Service, each instance type has a different upper limit on how many Pods it can run.</strong></p><p>For example, an <code>m5.large</code> instance can only run 29 Pods, but an <code>m5.4xlarge</code> can run up to 234. The reason is that each EC2 instance can only have a limited number of IP addresses assigned to it (in AWS lingo, those are called Elastic Network Interfaces (ENIs)).</p><p>The Container Network Interface (CNI) uses and assigns those IP addresses to Pods.</p>`,7)),s("p",null,[e[35]||(e[35]=a("However, this limit doesn't apply if you use ")),s("a",S,[t(n,{icon:"fa-brands fa-aws"}),e[33]||(e[33]=a("EC2 prefix delegation via the AWS-CNI"))]),e[36]||(e[36]=a(" or any other CNI that supports it (e.g. ")),s("a",z,[t(n,{icon:"fas fa-globe"}),e[34]||(e[34]=a("Cilium"))]),e[37]||(e[37]=a(")."))]),e[66]||(e[66]=s("p",null,"So, figuring out the limit for your EC2 instances isn't exactly obvious.",-1)),s("p",null,[e[39]||(e[39]=a("For this, ")),s("a",U,[t(n,{icon:"fa-brands fa-aws"}),e[38]||(e[38]=a("AWS offers a script you can execute to estimate the maximum number of pods per instance."))])]),e[67]||(e[67]=m(`<p>Let&#39;s have a look at an example.</p><p>If you run the script against an <code>m5.large</code> instance, you will see this:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">./max-pods-calculator.sh --instance-type m5.large --cni-version <span class="token number">1.9</span>.0-eksbuild.1</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># 29</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can only run 29 pods.</p><p>Let&#39;s enable prefix delegation and see what&#39;s the estimated number of pods for the same instance:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">./max-pods-calculator.sh --instance-type m5.large --cni-version <span class="token number">1.9</span>.0-eksbuild.1 --cni-prefix-delegation-enabled</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># 110</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Remember that bigger instances can host up to 250 pods with prefix delegation.</p><p>The Kubernetes project has a page dedicated to considerations for running large clusters, and it suggests 110 pods per node as the recommended standard.</p><p>However, all major Kubernetes managed services set this limit to 250 pods.</p><p>With that in mind, let&#39;s look at the two memory reservations for the <code>m5.large</code> instance.</p>`,10)),e[68]||(e[68]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.25em",columnalign:"right",columnspacing:""},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow",null,[s("mtext",null,"Reserved"),s("mtext",null," "),s("mtext",null,"memory")]),s("mtext",null," "),s("mo",{stretchy:"false"},"("),s("mn",null,"29"),s("mtext",null," "),s("mtext",null,"pods"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"255"),s("mtext",null,"Mi"),s("mo",null,"+"),s("mn",null,"11"),s("mtext",null,"MiB"),s("mo",null,"×"),s("mn",null,"29"),s("mo",null,"="),s("mn",null,"574"),s("mtext",null,"MiB")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow",null,[s("mtext",null,"Reserved"),s("mtext",null," "),s("mtext",null,"memory")]),s("mtext",null," "),s("mo",{stretchy:"false"},"("),s("mn",null,"110"),s("mtext",null," "),s("mtext",null,"pods"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"255"),s("mtext",null,"Mi"),s("mo",null,"+"),s("mn",null,"11"),s("mtext",null,"MiB"),s("mo",null,"×"),s("mn",null,"110"),s("mo",null,"="),s("mn",null,"1.5"),s("mtext",null,"GiB")])])])])]),s("annotation",{encoding:"application/x-tex"},"\\begin{align*} \\text{Reserved\\:memory}\\:(29\\:\\text{pods})=255\\text{Mi}+11\\text{MiB}\\times{29}=574\\text{MiB}\\\\ \\text{Reserved\\:memory}\\:(110\\:\\text{pods})=255\\text{Mi}+11\\text{MiB}\\times{110}=1.5\\text{GiB} \\end{align*} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3em","vertical-align":"-1.25em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.75em"}},[s("span",{style:{top:"-3.91em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"Reserved"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"memory")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"29"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"pods")]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"255"),s("span",{class:"mord text"},[s("span",{class:"mord"},"Mi")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"11"),s("span",{class:"mord text"},[s("span",{class:"mord"},"MiB")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"29")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"574"),s("span",{class:"mord text"},[s("span",{class:"mord"},"MiB")])])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"Reserved"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"memory")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"110"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"pods")]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"255"),s("span",{class:"mord text"},[s("span",{class:"mord"},"Mi")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"11"),s("span",{class:"mord text"},[s("span",{class:"mord"},"MiB")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"110")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"1.5"),s("span",{class:"mord text"},[s("span",{class:"mord"},"GiB")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.25em"}},[s("span")])])])])])])])])])])],-1)),s("p",null,[e[43]||(e[43]=a("For CPU resources, ")),s("a",N,[e[40]||(e[40]=a("EKS follows the GKE implementation (")),t(n,{icon:"iconfont icon-github"}),e[41]||(e[41]=s("code",null,"awslabs/amazon-eks-ami",-1)),e[42]||(e[42]=a(")"))]),e[44]||(e[44]=a(" and reserves:"))]),e[69]||(e[69]=m('<ul><li>6% of the first core</li><li>1% of the following core (up to 2 cores)</li><li>0.5% of the following 2 cores (up to 4 cores)</li><li>0.25% of any cores above 4 cores</li></ul><p><em>Let&#39;s look at an example.</em></p><p>An <code>m5.large</code> instance has 2 vCPU and 8GiB of memory:</p><ol><li>from the calculation above, you know that 574MiB (or 1.5GiB for 110 pods) of memory is reserved for the kubelet.</li><li>An extra 100MB of memory is reserved for the eviction threshold.</li><li>The reserved allocation for the CPU is the same 70 millicores (same as the <code>n1-standard-2</code> since they are both 2 vCPU and the quota is calculated similarly).</li></ol><figure><img src="https://learnk8s.io/a/d2f7ef5fb0ff243c733497905f91646c.svg" alt="Allocatable CPU and memory in Elastic Kubernetes Service (EKS)" tabindex="0" loading="lazy"><figcaption>Allocatable CPU and memory in Elastic Kubernetes Service (EKS)</figcaption></figure><p>It&#39;s interesting to note that the memory allocatable to Pods is 90% when prefix delegation is disabled and drops to 80.5% when enabled.</p><hr><h2 id="azure-kubernetes-service" tabindex="-1"><a class="header-anchor" href="#azure-kubernetes-service"><span>Azure Kubernetes Service</span></a></h2>',8)),s("p",null,[e[46]||(e[46]=a("Azure offers ")),s("a",T,[t(n,{icon:"iconfont icon-microsoftazure"}),e[45]||(e[45]=a("a detailed explanation of their resource allocations"))]),e[47]||(e[47]=a("."))]),e[70]||(e[70]=s("p",null,"The memory reserved for AKS with Kubernetes 1.29 and above is:",-1)),e[71]||(e[71]=s("ol",null,[s("li",null,"20MB for each pod supported on the node plus a fixed 50MB. Or"),s("li",null,"25% of the total system memory resources.")],-1)),e[72]||(e[72]=s("p",null,"AKS will select the lower value between the two.",-1)),e[73]||(e[73]=s("p",null,"Let's have a look at an example.",-1)),e[74]||(e[74]=s("p",null,"For an 8GB memory instance with a maximum of 110 pods, the two values are:",-1)),e[75]||(e[75]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.25em",columnalign:"right",columnspacing:""},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mn",null,"1."),s("mtext",null," "),s("mn",null,"20"),s("mtext",null,"MB"),s("mo",null,"×"),s("mn",null,"110"),s("mo",null,"="),s("mn",null,"2.2"),s("mtext",null,"GB")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mn",null,"2."),s("mtext",null," "),s("mn",null,"8"),s("mtext",null,"GB"),s("mo",null,"×"),s("mn",null,"0.25"),s("mo",null,"="),s("mn",null,"2"),s("mtext",null,"GB")])])])])]),s("annotation",{encoding:"application/x-tex"},"\\begin{align*} 1.\\:20\\text{MB}\\times{110}=2.2\\text{GB}\\\\ 2.\\:8\\text{GB}\\times{0.25}=2\\text{GB} \\end{align*} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3em","vertical-align":"-1.25em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.75em"}},[s("span",{style:{top:"-3.91em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"20"),s("span",{class:"mord text"},[s("span",{class:"mord"},"MB")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"110")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"2.2"),s("span",{class:"mord text"},[s("span",{class:"mord"},"GB")])])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"8"),s("span",{class:"mord text"},[s("span",{class:"mord"},"GB")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0.25")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord text"},[s("span",{class:"mord"},"GB")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.25em"}},[s("span")])])])])])])])])])])],-1)),e[76]||(e[76]=m('<p>Since option 2 is lower, AKS will select the one that has the reserved memory.</p><p>The CPU reserved for the Kubelet follows the following table:</p><table><thead><tr><th>CPU CORES</th><th>CPU Reserved (in millicores)</th></tr></thead><tbody><tr><td>1</td><td>60</td></tr><tr><td>2</td><td>100</td></tr><tr><td>4</td><td>140</td></tr><tr><td>8</td><td>180</td></tr><tr><td>16</td><td>260</td></tr><tr><td>32</td><td>420</td></tr><tr><td>64</td><td>740</td></tr></tbody></table><p>The values are slightly higher than their counterparts but still modest.</p><p>Overall, the CPU and memory reserved for AKS are remarkably similar to Google Kubernetes Engine (GKE).</p><p>AKS will reserve a further 100MB for the eviction threshold — just like GKE and EKS.</p><figure><img src="https://learnk8s.io/a/df04181e100dfe86154599d79cbd2a88.svg" alt="Allocatable CPU and memory in Azure Kubernetes Service (AKS)" tabindex="0" loading="lazy"><figcaption>Allocatable CPU and memory in Azure Kubernetes Service (AKS)</figcaption></figure><hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>You might be tempted to conclude that larger instances are the way to go as you maximise the allocable memory and CPU.</p><p><strong>Unfortunately, cost is only one factor when designing your cluster.</strong></p><p>If you&#39;re running large nodes, you should also consider:</p><ol><li>The <strong>overhead on the Kubernetes agents that run on the node</strong> — such as the container runtime (e.g. Docker), the kubelet, and cAdvisor.</li><li><strong>Your high-availability (HA) strategy.</strong> Pods can be deployed to a selected number of Nodes</li><li><strong>Blast radius.</strong> If you have only a few nodes, then the impact of a failing node is bigger than if you have many nodes.</li><li><strong>Autoscaling is less cost-effective</strong> as the next increment is a (very) large Node.</li></ol><p><em>Smaller nodes aren&#39;t a silver bullet either.</em></p><p>You should architect your cluster for the type of workloads you run rather than following the most common option.</p><p>To explore the pros and cons of different instance types, check out this blog post</p>',16)),t(l,o(r({title:"Architecting Kubernetes clusters — choosing a worker node size",desc:"What type of worker nodes should I use for my Kubernetes cluster? And how many of them?. This article looks at the pros and cons.",link:"learnk8s.io/kubernetes-node-size.md",logo:"https://static.learnk8s.io/f7e5160d4744cf05c46161170b5c11c9.svg",background:"rgba(102,152,204,0.2)"})),null,16),b(" TODO: add ARTICLE CARD "),t(l,o(r({title:"Allocatable memory and CPU in Kubernetes Nodes",desc:"Pods deployed in your Kubernetes cluster consume resources such as memory, CPU and storage. However, not all resources in a Node can be used to run Pods.",link:"https://chanhi2000.github.io/bookshelf/learnk8s.io/allocatable-resources.html",logo:"https://static.learnk8s.io/f7e5160d4744cf05c46161170b5c11c9.svg",background:"rgba(102,152,204,0.2)"})),null,16)])}const L=g(x,[["render",R]]),O=JSON.parse('{"path":"/learnk8s.io/allocatable-resources.html","title":"Allocatable memory and CPU in Kubernetes Nodes","lang":"en-US","frontmatter":{"lang":"en-US","title":"Allocatable memory and CPU in Kubernetes Nodes","description":"Article(s) > Allocatable memory and CPU in Kubernetes Nodes","icon":"iconfont icon-k8s","category":["DevOps","Kubernetes","AWS","Microsoft Azure","Google Cloud","Article(s)"],"tag":["blog","learnk8s.io","devops","kubernetes","k8s","aws","amazon-web-services","azure","microsoftazure","microsoft-azure","gcp","google-cloud-platform"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Allocatable memory and CPU in Kubernetes Nodes\\",\\"image\\":[\\"https://learnk8s.io/a/35bda739ecd82613ebe2bc144122a051.svg\\",\\"https://learnk8s.io/a/d31a4f9aaebabe0ac73b5bb090c92bcb.svg\\",\\"https://learnk8s.io/a/d2f7ef5fb0ff243c733497905f91646c.svg\\",\\"https://learnk8s.io/a/df04181e100dfe86154599d79cbd2a88.svg\\"],\\"datePublished\\":\\"2024-05-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Daniele Polencic\\",\\"url\\":\\"https://linkedin.com/in/danielepolencic\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/learnk8s.io/allocatable-resources.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Allocatable memory and CPU in Kubernetes Nodes"}],["meta",{"property":"og:description","content":"Article(s) > Allocatable memory and CPU in Kubernetes Nodes"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://static.learnk8s.io/2f459b0416493403e14ea04caf12bd45.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://static.learnk8s.io/2f459b0416493403e14ea04caf12bd45.png"}],["meta",{"name":"twitter:image:alt","content":"Allocatable memory and CPU in Kubernetes Nodes"}],["meta",{"property":"article:author","content":"Daniele Polencic"}],["meta",{"property":"article:tag","content":"google-cloud-platform"}],["meta",{"property":"article:tag","content":"gcp"}],["meta",{"property":"article:tag","content":"microsoft-azure"}],["meta",{"property":"article:tag","content":"microsoftazure"}],["meta",{"property":"article:tag","content":"azure"}],["meta",{"property":"article:tag","content":"amazon-web-services"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"k8s"}],["meta",{"property":"article:tag","content":"kubernetes"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"learnk8s.io"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-05-27T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Allocatable memory and CPU in Kubernetes Nodes"},{"property":"og:description","content":"Allocatable memory and CPU in Kubernetes Nodes"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/learnk8s.io/allocatable-resources.html"}]],"prev":"/devops/k8s/articles/README.md","date":"2024-05-27T00:00:00.000Z","isOriginal":false,"author":[{"name":"Daniele Polencic","url":"https://linkedin.com/in/danielepolencic"}],"cover":"https://static.learnk8s.io/2f459b0416493403e14ea04caf12bd45.png"},"git":{},"readingTime":{"minutes":6.72,"words":2016},"filePathRelative":"learnk8s.io/allocatable-resources.md","copyright":{"author":"Daniele Polencic"}}');export{L as comp,O as data};
