import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as s,f as e,b as o,a as u,t as f,n as r,g as d,w as p,e as a,r as i,o as y}from"./app-BVguHYKu.js";const h="/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/banner.png",S="/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/bulma-css-jeremy-thomas-css-time-writing-.avif",w="/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/css-module-final-app.png",x={},C={id:"frontmatter-title-관련",tabindex:"-1"},M={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"table-of-contents"},j={href:"https://github.com/css-modules/css-modules",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/css-modules/css-modules#composition",target:"_blank",rel:"noopener noreferrer"},E={href:"http://getbem.com/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://x.com/jgthms",target:"_blank",rel:"noopener noreferrer"},q={href:"https://bulma.io/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://en.wikipedia.org/wiki/Indirection",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/css-modules/icss",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/css-modules/css-modules/blob/master/docs/get-started.md#setting-up-css-modules",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/facebook/create-react-app",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/lawrenceagles/css-module-demo",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/gajus/babel-plugin-react-css-modules",target:"_blank",rel:"noopener noreferrer"};function J(m,n){const c=i("VPCard"),l=i("router-link"),k=i("SiteInfo"),t=i("VPIcon"),g=i("SandPack");return y(),b("div",null,[s("h1",C,[s("a",M,[s("span",null,f(m.$frontmatter.title)+" 관련",1)])]),e(c,r(d({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",A,[s("ul",null,[s("li",null,[e(l,{to:"#introduction"},{default:p(()=>n[0]||(n[0]=[a("Introduction")])),_:1,__:[0]})]),s("li",null,[e(l,{to:"#understanding-common-css-issues"},{default:p(()=>n[1]||(n[1]=[a("Understanding common CSS issues")])),_:1,__:[1]}),s("ul",null,[s("li",null,[e(l,{to:"#name-collision"},{default:p(()=>n[2]||(n[2]=[a("Name collision")])),_:1,__:[2]})]),s("li",null,[e(l,{to:"#difficulty-in-clearing-dead-codes"},{default:p(()=>n[3]||(n[3]=[a("Difficulty in clearing dead codes")])),_:1,__:[3]})]),s("li",null,[e(l,{to:"#dependency-management"},{default:p(()=>n[4]||(n[4]=[a("Dependency management")])),_:1,__:[4]})])])]),s("li",null,[e(l,{to:"#evaluating-solutions"},{default:p(()=>n[5]||(n[5]=[a("Evaluating solutions")])),_:1,__:[5]})]),s("li",null,[e(l,{to:"#advantages-of-css-module"},{default:p(()=>n[6]||(n[6]=[a("Advantages of CSS Module")])),_:1,__:[6]})]),s("li",null,[e(l,{to:"#how-css-module-works"},{default:p(()=>n[7]||(n[7]=[a("How CSS Module works")])),_:1,__:[7]}),s("ul",null,[s("li",null,[e(l,{to:"#understanding-icss"},{default:p(()=>n[8]||(n[8]=[a("Understanding ICSS")])),_:1,__:[8]})])])]),s("li",null,[e(l,{to:"#styling-a-react-application-with-css-module"},{default:p(()=>n[9]||(n[9]=[a("Styling a React application with CSS Module")])),_:1,__:[9]})]),s("li",null,[e(l,{to:"#conclusion"},{default:p(()=>n[10]||(n[10]=[a("Conclusion")])),_:1,__:[10]})])])]),n[103]||(n[103]=s("hr",null,null,-1)),e(k,{name:"A deep dive into CSS Module",desc:"Automate tedious naming methods using CSS Module, an extra layer of abstraction that locally scopes class names.",url:"https://blog.logrocket.com/a-deep-dive-into-css-modules",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/banner.png"}),n[104]||(n[104]=s("h2",{id:"introduction",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#introduction"},[s("span",null,"Introduction")])],-1)),s("p",null,[n[14]||(n[14]=a("According to the ")),s("a",j,[n[11]||(n[11]=a("official CSS Module GitHub repository (")),e(t,{icon:"iconfont icon-github"}),n[12]||(n[12]=s("code",null,"css-modules/css-modules",-1)),n[13]||(n[13]=a(")"))]),n[15]||(n[15]=a(", a CSS Module is a CSS file in which all class names and animation names are scoped locally by default. By contrast, in a typical CSS file, all CSS selectors live in the global scope."))]),n[105]||(n[105]=o('<figure><img src="'+h+`" alt="CSS Module Deep Dive" tabindex="0" loading="lazy"><figcaption>CSS Module Deep Dive</figcaption></figure><p>In this tutorial, we’ll look into some common issues that frequently arise when writing CSS and learn how CSS Module can help us avoid them. Then, we’ll integrate CSS Module into a React application.</p><p>Let’s get started!</p><div class="hint-container note"><p class="hint-container-title">Prerequisites</p><ul><li>Knowledge of HTML and CSS</li><li>Working knowledge of React</li></ul></div><p>Familiarity with CSS Module is an added bonus!</p><hr><h2 id="understanding-common-css-issues" tabindex="-1"><a class="header-anchor" href="#understanding-common-css-issues"><span>Understanding common CSS issues</span></a></h2><p>All selectors in CSS are global variables. As an application scales, working with global variables and managing dependencies becomes increasingly difficult. When several developers are working on the app, things become even trickier.</p><p>Here’s why:</p><h3 id="name-collision" tabindex="-1"><a class="header-anchor" href="#name-collision"><span>Name collision</span></a></h3><p>Let’s say that while styling a blog, we add the class name <code>post</code> to indicate posts on the homepage. Another developer creates the sidebar and also adds the class name <code>post</code> for posts on the sidebar. Mistakes like this lead to name collision, seen here:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="styles.css"><span>styles.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.main .post</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.sidebar .post</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #FFFFFF<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>As an application scales, you’re more likely to encounter name collision (potentially harming performance).</p><h3 id="difficulty-in-clearing-dead-codes" tabindex="-1"><a class="header-anchor" href="#difficulty-in-clearing-dead-codes"><span>Difficulty in clearing dead codes</span></a></h3><p>When an element or a React component is deleted from our code, we also need to delete its styles. However, in large applications, it can be very hard to determine whether a class is in use. CSS does not provide a solution out of the box.</p><h3 id="dependency-management" tabindex="-1"><a class="header-anchor" href="#dependency-management"><span>Dependency management</span></a></h3>`,16)),s("p",null,[n[19]||(n[19]=a("Dependencies are not explicitly defined when working with global variables, making it difficult to determine which styles would be inherited or applied through ")),s("a",B,[n[16]||(n[16]=a("composition (")),e(t,{icon:"iconfont icon-github"}),n[17]||(n[17]=s("code",null,"css-modules/css-modules",-1)),n[18]||(n[18]=a(")"))]),n[20]||(n[20]=a("."))]),n[106]||(n[106]=s("p",null,[a("There are other implicit dependencies in CSS that are not easily identified by merely scanning the code. For example, an element with "),s("code",null,"position: absolute"),a(" is relative to its parent element with "),s("code",null,"position: relative"),a(".")],-1)),n[107]||(n[107]=s("p",null,"Dependencies are a huge cause of concern, and the ease of maintaining our CSS code depends greatly on how well our dependencies are structured.",-1)),n[108]||(n[108]=s("hr",null,null,-1)),n[109]||(n[109]=s("h2",{id:"evaluating-solutions",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#evaluating-solutions"},[s("span",null,"Evaluating solutions")])],-1)),s("p",null,[s("a",E,[e(t,{icon:"fas fa-globe"}),n[21]||(n[21]=a("BEM — Block Element Modifier"))]),n[22]||(n[22]=a(" is a popular naming convention for classes in HTML and CSS that aims to help developers understand the relationship between both languages. BEM solves the problems described above by providing strict naming rules."))]),n[110]||(n[110]=o(`<p>In BEM, a <code>Block</code> is a standalone element that can make sense on its own; it is often a parent element like <code>.btn{}</code>. An <code>Element</code> refers to the child element of a <code>Block</code>; it has no standalone meaning and is denoted by two underscores following the name of the <code>Block</code> (e.g., <code>.btn__text</code>).</p><p>The modifier is a flag on the <code>Block</code> or <code>Element</code> used to style it. It is denoted by two hyphens to the name of the <code>Block</code> or <code>Element</code> (e.g., <code>.btn--primary {}</code>).</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/* Block Element */</span></span>
<span class="line"><span class="token selector">.btn</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* Element that depends on the Block often a child element */</span></span>
<span class="line"><span class="token selector">.btn__text</span> <span class="token punctuation">{</span></span>
<span class="line">  // rules</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* Modifiers that changes the styles of the block */</span></span>
<span class="line"><span class="token selector">.btn--primary</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.btn--small</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The benefit of the BEM naming methodology is that all selectors are scoped by the modifiers despite being global. However, adding BEM naming manually is repetitive, fairly tedious, and prone to human error.</p>`,4)),s("p",null,[n[27]||(n[27]=a("You may end up spending a significant amount of time figuring out whether something is a ")),n[28]||(n[28]=s("code",null,"Block",-1)),n[29]||(n[29]=a(" or ")),n[30]||(n[30]=s("code",null,"Element",-1)),n[31]||(n[31]=a(". In my opinion, ")),s("a",I,[n[23]||(n[23]=a("Jeremy Thomas (")),e(t,{icon:"fa-brands fa-x-twitter"}),n[24]||(n[24]=s("code",null,"jgthms",-1)),n[25]||(n[25]=a(")"))]),n[32]||(n[32]=a(", the creator of ")),s("a",q,[e(t,{icon:"fas fa-globe"}),n[26]||(n[26]=a("Bulma CSS"))]),n[33]||(n[33]=a(", perfectly summarizes the issue:"))]),n[111]||(n[111]=o('<figure><img src="'+S+`" alt="Bulma CSS Jeremy Thomas CSS Time Writing Graph" tabindex="0" loading="lazy"><figcaption>Bulma CSS Jeremy Thomas CSS Time Writing Graph</figcaption></figure><p>Development involves automating difficult problems, so we should be able to easily automate naming with the right tool.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>Although CSS Module enables us to scope our styles, we can still declare global classes by prefixing the class name with <code>:global</code>:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">:global .title</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><hr><h2 id="advantages-of-css-module" tabindex="-1"><a class="header-anchor" href="#advantages-of-css-module"><span>Advantages of CSS Module</span></a></h2><p>Most modern JavaScript and CSS workflows have trended towards component-based architecture, but progress on CSS has been purely conventional and not actually supported by the language.</p>`,6)),s("p",null,[n[35]||(n[35]=a("BEM, as previously discussed, is a perfect example. A familiar saying known as the ")),s("a",T,[e(t,{icon:"fa-brands fa-wikipedia-w"}),n[34]||(n[34]=a("fundamental theorem of software engineering"))]),n[36]||(n[36]=a(" declares that “every problem in computer science can be solved by one extra layer of abstraction”."))]),n[112]||(n[112]=o(`<p>CSS Module is a thin layer of abstraction that encapsulates new concepts introduced to the language. Consequently, CSS Module is written just like plain CSS, as seen in the following code snippet:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="styles.css"><span>styles.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.title</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.text</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,2)),s("p",null,[n[37]||(n[37]=a("One difference is that in CSS Module, all our markup is written in a JavaScript file like ")),e(t,{icon:"fa-brands fa-js"}),n[38]||(n[38]=s("code",null,"index.js",-1)),n[39]||(n[39]=a(":"))]),n[113]||(n[113]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="index.js"><span>index.js</span></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&quot;./styles.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  &lt;h1 class=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>styles<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;Hello Vanilla!&lt;/h1&gt;</span>
<span class="line">  &lt;div class=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>styles<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;</span>
<span class="line">    We use the same configuration as Parcel to bundle this sandbox, you can find more</span>
<span class="line">    info about Parcel </span>
<span class="line">  &lt;/div&gt;</span>
<span class="line"></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("p",null,[n[40]||(n[40]=a("When we import our CSS Module from our ")),e(t,{icon:"fa-brands fa-js"}),n[41]||(n[41]=s("code",null,"index.js",-1)),n[42]||(n[42]=a(" file, CSS Module exports an object with mappings from local names to global names:"))]),n[114]||(n[114]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;_src_styles__title&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;_src_styles__text&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),e(g,{rtl:"",theme:"dark",title:"hardcore-browser-me8ox%20",template:"vanilla",files:"eJxtkE9LAzEQxb/KGDwo1GwreFnbHgShgoIH0UsOzW5mu5HspCSz2lr2u5vtHy20t2Ty5uX93kZkkdcOoyxjFLmQbNkhbBQBVJ74JtofzOE2YHP/N/tGu6g5h8I7s52W3vmQQ8D+2ilSJBlXfGIzkueN7obDY5/CtbgzEgORWTK4kp99OtssfWDYJYYq+AaUkEcESqQ9RcaXbYPEcoH86LA/PqyfzJUSerlU4lpaIgyzt5dnmMBc0bgeQel0jJPLzd5s20M3naFzHt41Wef0xTirR9MkN/brRJ94u/QG8IHQRgSuEaJuMEFRZRdt0Gw9gY7wqkOJDthD0ZJJbXNtY9KSKfxqAGvfQqkJqgQOjQ/Ym1qqPOjCt3xYTzGylCN9OU/M/0XV3LhU1TajNZM98vQgFt0vhN+stQ==",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrrgUAAXUA+Q=="}),u(" https://codesandbox.io/p/sandbox/hardcore-browser-me8ox "),n[115]||(n[115]=o(`<p>We can see that CSS Module dynamically generates unique class names, automating naming for our whole team.</p><hr><h2 id="how-css-module-works" tabindex="-1"><a class="header-anchor" href="#how-css-module-works"><span>How CSS Module works</span></a></h2><p>Modern tooling like webpack, Browsify, and JSPM enables us to explicitly define cross-language dependencies. Consequently, we can explicitly describe each file’s dependencies, regardless of the type of source file.</p><p>In the code snippet below, whenever <code>MyComponent</code> is loaded or bundled, the corresponding CSS is loaded just like any other dependency:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MyComponent.jsx"><span>MyComponent.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token string">&#39;./my-component-name.css&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// component codes</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>CSS Module includes this new technique, which is the key capability of modern loaders. However, at the fundamental level, there is a need for a new specification to describe how these symbols are shared.</p><h3 id="understanding-icss" tabindex="-1"><a class="header-anchor" href="#understanding-icss"><span>Understanding ICSS</span></a></h3>`,8)),s("p",null,[n[46]||(n[46]=a("Although CSS Module is written like plain CSS, it actually compiles to a low-level interchangeable format called ICSS ")),s("a",D,[n[43]||(n[43]=a("(Interoperable CSS (")),e(t,{icon:"iconfont icon-github"}),n[44]||(n[44]=s("code",null,"css-modules/icss",-1)),n[45]||(n[45]=a(")"))]),n[47]||(n[47]=a(" that is designed for loader implementers, not end-users. It is a superset of standard CSS and a low-level file format that enhances CSS."))]),s("p",null,[n[51]||(n[51]=a("You can incorporate CSS Module into a ")),s("a",F,[n[48]||(n[48]=a("wide range of applications (")),e(t,{icon:"iconfont icon-github"}),n[49]||(n[49]=s("code",null,"css-modules/css-modules",-1)),n[50]||(n[50]=a(")"))]),n[52]||(n[52]=a(", however, we’ll style a React app."))]),n[116]||(n[116]=s("hr",null,null,-1)),n[117]||(n[117]=s("h2",{id:"styling-a-react-application-with-css-module",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#styling-a-react-application-with-css-module"},[s("span",null,"Styling a React application with CSS Module")])],-1)),s("p",null,[s("a",N,[n[53]||(n[53]=a("Create React App v2 (")),e(t,{icon:"iconfont icon-github"}),n[54]||(n[54]=s("code",null,"facebook/create-react-app",-1)),n[55]||(n[55]=a(")"))]),n[56]||(n[56]=a(" (and higher) support CSS Module out of the box. All we have to do is use the following naming convention:"))]),n[118]||(n[118]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="file"><span>file</span></div><div class="language-output line-numbers-mode" data-highlighter="prismjs" data-ext="output"><pre><code class="language-output"><span class="line">[name].module.css</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Let’s see it in action by building a simple React app! First, let’s bootstrap and run our application:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">npx create-react-app button-stack</span>
<span class="line"><span class="token builtin class-name">cd</span> botton-stack</span>
<span class="line"><span class="token function">npm</span> start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),s("p",null,[n[57]||(n[57]=a("Next, we’ll add CSS module support for our app by simply renaming the ")),e(t,{icon:"fa-brands fa-css3-alt"}),n[58]||(n[58]=s("code",null,"App.css",-1)),n[59]||(n[59]=a(" file to ")),e(t,{icon:"fa-brands fa-css3-alt"}),n[60]||(n[60]=s("code",null,"App.module.css",-1)),n[61]||(n[61]=a(". Update the import statement in the ")),e(t,{icon:"fa-brands fa-react"}),n[62]||(n[62]=s("code",null,"App.js",-1)),n[63]||(n[63]=a(" file to avoid error:"))]),n[119]||(n[119]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.module.css"><span>App.module.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.shadow</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>50<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span> 0 5px 5px 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.app</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.title</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">margin-top</span><span class="token punctuation">:</span> 25%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("p",null,[n[64]||(n[64]=a("Update the ")),e(t,{icon:"fa-brands fa-css3-alt"}),n[65]||(n[65]=s("code",null,"Index.css",-1)),n[66]||(n[66]=a(" file to ")),e(t,{icon:"fa-brands fa-css3-alth"}),n[67]||(n[67]=s("code",null,"Index.module.css",-1)),n[68]||(n[68]=a(", as well as the import statement in the ")),n[69]||(n[69]=s("code",null,"Index.js",-1)),n[70]||(n[70]=a(" file. Next, in our ")),e(t,{icon:"fa-brands fa-react"}),n[71]||(n[71]=s("code",null,"App.js",-1)),n[72]||(n[72]=a(" file, add the following code:"))]),n[120]||(n[120]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> title<span class="token punctuation">,</span> app <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./App.module.css&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">&#39;./components/Button&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">CSS Module Buttons</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>app<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Though most of this code should be familiar, there are a few things we need to look out for. First, we are destructuring <code>title</code> and <code>app</code>. The styles we need are from the <code>styles</code> object, which is exported by CSS Module.</p>`,2)),s("p",null,[n[73]||(n[73]=a("Now, we’ll need to create the ")),n[74]||(n[74]=s("code",null,"Button component",-1)),n[75]||(n[75]=a(". In the ")),n[76]||(n[76]=s("code",null,"src",-1)),n[77]||(n[77]=a(" directory, create a ")),n[78]||(n[78]=s("code",null,"components",-1)),n[79]||(n[79]=a(" folder. Inside the folder, create a ")),e(t,{icon:"fa-brands fa-react"}),n[80]||(n[80]=s("code",null,"Button.js",-1)),n[81]||(n[81]=a(" and a ")),e(t,{icon:"fa-brands fa-css3-alt"}),n[82]||(n[82]=s("code",null,"Button.module.css",-1)),n[83]||(n[83]=a(" file; add the following code in the ")),e(t,{icon:"fa-brands fa-css3-alt"}),n[84]||(n[84]=s("code",null,"Button.module.css",-1)),n[85]||(n[85]=a(" file:"))]),n[121]||(n[121]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="Button.module.css"><span>Button.module.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.normal-button</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">line-height</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 1px 60px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;IBM Plex Sans&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> shadow from <span class="token string">&quot;../App.module.css&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.danger</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> normal-button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 8<span class="token punctuation">,</span> 8<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 8<span class="token punctuation">,</span> 8<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.secondary</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> normal-button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>128<span class="token punctuation">,</span> 118<span class="token punctuation">,</span> 118<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">rgb</span><span class="token punctuation">(</span>128<span class="token punctuation">,</span> 118<span class="token punctuation">,</span> 118<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.info</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> normal-button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>6<span class="token punctuation">,</span> 218<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">rgb</span><span class="token punctuation">(</span>6<span class="token punctuation">,</span> 218<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.warning</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> normal-button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>248<span class="token punctuation">,</span> 202<span class="token punctuation">,</span> 49<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">rgb</span><span class="token punctuation">(</span>248<span class="token punctuation">,</span> 202<span class="token punctuation">,</span> 49<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.success</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> normal-button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span> 156<span class="token punctuation">,</span> 41<span class="token punctuation">,</span> 0.966<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">rgba</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span> 156<span class="token punctuation">,</span> 41<span class="token punctuation">,</span> 0.966<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.primary</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">composes</span><span class="token punctuation">:</span> normal-button<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>33<span class="token punctuation">,</span> 124<span class="token punctuation">,</span> 243<span class="token punctuation">,</span> 0.849<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">rgba</span><span class="token punctuation">(</span>33<span class="token punctuation">,</span> 124<span class="token punctuation">,</span> 243<span class="token punctuation">,</span> 0.849<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #FFFFFF<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("p",null,[n[86]||(n[86]=a("In this file, we have a normal button class ")),n[87]||(n[87]=s("code",null,".normal-button",-1)),n[88]||(n[88]=a(" that composes the ")),n[89]||(n[89]=s("code",null,"shadow class",-1)),n[90]||(n[90]=a(" from the ")),e(t,{icon:"fa-brands fa-css3-alt"}),n[91]||(n[91]=s("code",null,"App.module.css",-1)),n[92]||(n[92]=a("."))]),n[122]||(n[122]=o("<p>Composition is a feature in CSS Module that enables us to compose selectors. Consequently, we can compose a class by inheriting styles from another class, but these <code>composes</code> rules must come before other rules.</p><p>For example, the <code>.danger</code>, <code>.info</code>, <code>.primary</code>, <code>.warning</code>, and <code>.success</code> classes all inherit styles from <code>.normal-botton</code> via composition.</p>",2)),s("p",null,[n[93]||(n[93]=a("Our ")),e(t,{icon:"fa-brands fa-react"}),n[94]||(n[94]=s("code",null,"App.js",-1)),n[95]||(n[95]=a(" file should now look like the code below:"))]),n[123]||(n[123]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> title<span class="token punctuation">,</span> app <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./App.module.css&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">&#39;./components/Button&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">CSS Module Buttons</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>app<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Our app display should look like the image here:</p><figure><img src="`+w+'" alt="CSS Module Final App" tabindex="0" loading="lazy"><figcaption>CSS Module Final App</figcaption></figure>',3)),s("p",null,[n[98]||(n[98]=a("You can view the ")),s("a",R,[n[96]||(n[96]=a("full code ")),e(t,{icon:"iconfont icon-github"}),n[97]||(n[97]=s("code",null,"lawrenceagles/css-module-demo",-1))]),n[99]||(n[99]=a(" for the tutorial."))]),n[124]||(n[124]=s("hr",null,null,-1)),n[125]||(n[125]=s("h2",{id:"conclusion",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#conclusion"},[s("span",null,"Conclusion")])],-1)),n[126]||(n[126]=s("p",null,"Without a doubt, CSS Module provides one of the most significant improvements to the CSS language in years! One of the best things about CSS Module is that we get to write good old CSS that can be incorporated into a variety of applications. It simply adds more power to CSS!",-1)),s("p",null,[n[101]||(n[101]=a("If your React app does not use Create React App, or it uses a version lower than version 2, you can still add support for CSS module by using the ")),s("a",z,[e(t,{icon:"iconfont icon-github"}),n[100]||(n[100]=s("code",null,"gajus/babel-plugin-react-css-modules",-1))]),n[102]||(n[102]=a("."))]),u(" TODO: add ARTICLE CARD "),e(c,r(d({title:"A deep dive into CSS Module",desc:"Automate tedious naming methods using CSS Module, an extra layer of abstraction that locally scopes class names.",link:"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/a-deep-dive-into-css-modules.html",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16)])}const U=v(x,[["render",J]]),O=JSON.parse('{"path":"/blog.logrocket.com/a-deep-dive-into-css-modules.html","title":"A deep dive into CSS Module","lang":"en-US","frontmatter":{"lang":"en-US","title":"A deep dive into CSS Module","description":"Article(s) > A deep dive into CSS Module","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","blog.logrocket.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A deep dive into CSS Module\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/banner.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/bulma-css-jeremy-thomas-css-time-writing-.avif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/css-module-final-app.png\\"],\\"datePublished\\":\\"2021-06-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lawrence Eagles\\",\\"url\\":\\"https://blog.logrocket.com/author/lawrenceoputa/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/a-deep-dive-into-css-modules.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"A deep dive into CSS Module"}],["meta",{"property":"og:description","content":"Article(s) > A deep dive into CSS Module"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/banner.png"}],["meta",{"name":"twitter:image:alt","content":"A deep dive into CSS Module"}],["meta",{"property":"article:author","content":"Lawrence Eagles"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2021-06-07T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > A deep dive into CSS Module"},{"property":"og:description","content":"A deep dive into CSS Module"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/a-deep-dive-into-css-modules.html"}]],"prev":"/programming/css/articles/README.md","date":"2021-06-07T00:00:00.000Z","isOriginal":false,"author":[{"name":"Lawrence Eagles","url":"https://blog.logrocket.com/author/lawrenceoputa/"}],"cover":"/assets/image/blog.logrocket.com/a-deep-dive-into-css-modules/banner.png"},"git":{},"readingTime":{"minutes":7.4,"words":2221},"filePathRelative":"blog.logrocket.com/a-deep-dive-into-css-modules.md","copyright":{"author":"Lawrence Eagles"}}');export{U as comp,O as data};
