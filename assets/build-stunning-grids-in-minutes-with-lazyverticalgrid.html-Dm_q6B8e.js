import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as m,d as s,f as t,b as v,a as g,t as f,n as u,g as r,w as e,e as a,r as l,o as b}from"./app-BVguHYKu.js";const h={},y={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},S={class:"table-of-contents"},P={href:"https://play.google.com/store/apps/dev?id=7614313297301862853&hl=en_US",target:"_blank",rel:"noopener noreferrer"},C={href:"https://x.com/BrickyardApps",target:"_blank",rel:"noopener noreferrer"},G={href:"https://instagram.com/brickyardmobile",target:"_blank",rel:"noopener noreferrer"},x={class:"hint-container info"},B={href:"https://proandroiddev.com/build-stunning-grids-in-minutes-with-lazyverticalgrid-17702887cccb",target:"_blank",rel:"noopener noreferrer"};function L(k,n){const c=l("VPCard"),p=l("router-link"),i=l("SiteInfo"),o=l("VPIcon");return b(),m("div",null,[s("h1",y,[s("a",w,[s("span",null,f(k.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),t(c,u(r({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",S,[s("ul",null,[s("li",null,[t(p,{to:"#ui-composable"},{default:e(()=>n[0]||(n[0]=[a("UI Composable")])),_:1,__:[0]})]),s("li",null,[t(p,{to:"#compose-fun-fact"},{default:e(()=>n[1]||(n[1]=[a("Compose Fun Fact")])),_:1,__:[1]})]),s("li",null,[t(p,{to:"#the-cell"},{default:e(()=>n[2]||(n[2]=[a("The Cell")])),_:1,__:[2]})]),s("li",null,[t(p,{to:"#preview-the-grid-in-android-studio"},{default:e(()=>n[3]||(n[3]=[a("@Preview the Grid in Android Studio")])),_:1,__:[3]})]),s("li",null,[t(p,{to:"#don-t-forget-to-test-test-test-üß™üß™üß™"},{default:e(()=>n[4]||(n[4]=[a("DON‚ÄôT FORGET TO TEST, TEST, TEST: üß™üß™üß™")])),_:1,__:[4]})])])]),n[21]||(n[21]=s("hr",null,null,-1)),t(i,{name:"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |",desc:"Want to create stunning grid layouts in your Jetpack Compose app? Look no further than LazyVerticalGrid. This powerful tool simplifies the process of designing and implementing efficient grid-based interfaces. In this comprehensive tutorial, I‚Äôll share my insights and experience using LazyVerticalGrid in a real-world production app on Google Play. I‚Äôll explore its key features, best practices, and practical tips to help you create stunning grids that captivate your users. ü§ì",url:"https://droidcon.com/2024/10/28/build-stunning-grids-in-minutes-with-lazyverticalgrid-%F0%93%88%88-%F0%93%8A%81-%F0%93%8A%82-%F0%93%90%96",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/10/1_L595ZfuVwNGgoBuPr5mzBQ-600x600.webp"}),n[22]||(n[22]=v(`<figure><img src="https://droidcon.com/wp-content/uploads/2024/10/1_L595ZfuVwNGgoBuPr5mzBQ-600x600.webp" alt="Jetpack Compose  in action in the NHL Hockey app on Google Play." tabindex="0" loading="lazy"><figcaption>Jetpack Compose <code>LazyVerticalGrid</code> in action in the NHL Hockey app on Google Play.</figcaption></figure><p>Want to create stunning grid layouts in your Jetpack Compose app? Look no further than<code>LazyVerticalGrid</code>. This powerful tool<strong>simplifies</strong>the process of designing and implementing efficient grid-based interfaces. In this comprehensive tutorial, I‚Äôll share my insights and experience using<code>LazyVerticalGrid</code>in a real-world<strong>production</strong>app on Google Play. I‚Äôll explore its key features, best practices, and practical tips to help you create stunning grids that captivate your users. ü§ì</p><p><strong>To populate the grid with player data, I make a network call to retrieve information for the selected season.</strong> Here‚Äôs how I have implemented that:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"> <span class="token comment">// Wrapper for state management</span></span>
<span class="line"><span class="token keyword">sealed</span> <span class="token keyword">class</span> PlayersUiState <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">data</span> <span class="token keyword">object</span> Loading <span class="token operator">:</span> <span class="token function">PlayersUiState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Success</span><span class="token punctuation">(</span><span class="token keyword">val</span> players<span class="token operator">:</span> List<span class="token operator">&lt;</span>Player<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">PlayersUiState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token keyword">val</span> throwable<span class="token operator">:</span> Throwable<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">PlayersUiState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"> <span class="token keyword">private</span> <span class="token keyword">val</span> _uiState <span class="token operator">=</span> MutableStateFlow<span class="token operator">&lt;</span>PlayersUiState<span class="token operator">&gt;</span><span class="token punctuation">(</span>PlayersUiState<span class="token punctuation">.</span>Loading<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> uiState<span class="token operator">:</span> StateFlow<span class="token operator">&lt;</span>PlayersUiState<span class="token operator">&gt;</span> <span class="token operator">=</span> _uiState<span class="token punctuation">.</span><span class="token function">asStateFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> coroutineExceptionHandler <span class="token operator">=</span> CoroutineExceptionHandler <span class="token punctuation">{</span> _<span class="token punctuation">,</span> throwable <span class="token operator">-&gt;</span></span>
<span class="line">        viewModelScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">            _uiState<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>PlayersUiState<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>throwable <span class="token operator">=</span> throwable<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">getSkatersAndGoalies</span><span class="token punctuation">(</span>season<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    viewModelScope<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>context <span class="token operator">=</span> ioDispatcher <span class="token operator">+</span> coroutineExceptionHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        repository<span class="token punctuation">.</span><span class="token function">getAllNhlPlayers</span><span class="token punctuation">(</span>season<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">catch</span> <span class="token punctuation">{</span> e <span class="token operator">-&gt;</span></span>
<span class="line">                _uiState<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>PlayersUiState<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token function">Throwable</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message <span class="token operator">?:</span> <span class="token string-literal singleline"><span class="token string">&quot;Unknown error&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">collectLatest</span> <span class="token punctuation">{</span> players <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token keyword">val</span> sortedPlayers <span class="token operator">=</span> <span class="token punctuation">(</span>players<span class="token punctuation">.</span>forwards <span class="token operator">+</span> players<span class="token punctuation">.</span>defensemen <span class="token operator">+</span> players<span class="token punctuation">.</span>goalies<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortedBy</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>lastName<span class="token punctuation">.</span>default <span class="token punctuation">}</span></span>
<span class="line">                _uiState<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>PlayersUiState<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>sortedPlayers<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>**Fetch player data:**Use<code>repository.getAllNhlPlayers(season)</code>to retrieve player data for the specified season.</li><li>**Handle errors:**Catch any exceptions that might occur during the network call and emit an error state to the UI.</li><li>**Sort players:**Combine the forwards, defensemen, and goalies, then sort them by last name.</li><li>**Emit success:**Emit a success state to the UI, including the sorted players and the transformed season string.</li></ul><hr><h2 id="ui-composable" tabindex="-1"><a class="header-anchor" href="#ui-composable"><span>UI Composable</span></a></h2><p>**Now I bring the state to life by connecting it to the UI components.**Here‚Äôs how I‚Äôve implemented it:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ShowLazyVerticalGridPlayers</span><span class="token punctuation">(</span>uiState<span class="token operator">:</span> PlayersUiState<span class="token punctuation">.</span>Success<span class="token punctuation">,</span> navController<span class="token operator">:</span> NavController<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> players <span class="token operator">=</span> uiState<span class="token punctuation">.</span>players</span>
<span class="line">    <span class="token keyword">val</span> scrollBehavior <span class="token operator">=</span> TopAppBarDefaults<span class="token punctuation">.</span><span class="token function">exitUntilCollapsedScrollBehavior</span><span class="token punctuation">(</span><span class="token function">rememberTopAppBarState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> isCollapsed <span class="token keyword">by</span> remember <span class="token punctuation">{</span> derivedStateOf <span class="token punctuation">{</span> scrollBehavior<span class="token punctuation">.</span>state<span class="token punctuation">.</span>collapsedFraction <span class="token operator">==</span> <span class="token number">1f</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">val</span> title <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isCollapsed<span class="token punctuation">)</span> <span class="token string-literal singleline"><span class="token string">&quot;ALL NHL\\\\nPLAYERS&quot;</span></span> <span class="token keyword">else</span> <span class="token string-literal singleline"><span class="token string">&quot;PLAYERS&quot;</span></span></span>
<span class="line">    <span class="token function">Scaffold</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">nestedScroll</span><span class="token punctuation">(</span>scrollBehavior<span class="token punctuation">.</span>nestedScrollConnection<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        topBar <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ParallaxToolBarV2</span><span class="token punctuation">(</span></span>
<span class="line">                scrollBehavior <span class="token operator">=</span> scrollBehavior<span class="token punctuation">,</span></span>
<span class="line">                navController <span class="token operator">=</span> navController<span class="token punctuation">,</span></span>
<span class="line">                title <span class="token operator">=</span> title<span class="token punctuation">,</span></span>
<span class="line">                color <span class="token operator">=</span> DefaultBlack<span class="token punctuation">,</span></span>
<span class="line">                actions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">AsyncImage</span><span class="token punctuation">(</span></span>
<span class="line">                        model <span class="token operator">=</span> ImageRequest<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span>LocalContext<span class="token punctuation">.</span>current<span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>DefaultNhlTeam<span class="token punctuation">.</span>teamLogo<span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">decoderFactory</span><span class="token punctuation">(</span>SvgDecoder<span class="token punctuation">.</span><span class="token function">Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">crossfade</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">diskCachePolicy</span><span class="token punctuation">(</span>CachePolicy<span class="token punctuation">.</span>ENABLED<span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Spacer</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token function">dimensionResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>dimen<span class="token punctuation">.</span>margin_medium_large<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        bottomBar <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function">BottomAppBar</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">SetAdmobAdaptiveBanner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span> padding <span class="token operator">-&gt;</span></span>
<span class="line">        <span class="token function">LazyVerticalGrid</span><span class="token punctuation">(</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            columns <span class="token operator">=</span> GridCells<span class="token punctuation">.</span><span class="token function">Fixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            contentPadding <span class="token operator">=</span> <span class="token function">PaddingValues</span><span class="token punctuation">(</span>start <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> top <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> bottom <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            content <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">items</span><span class="token punctuation">(</span>players<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span> index <span class="token operator">-&gt;</span></span>
<span class="line">                    <span class="token function">PlayerCell</span><span class="token punctuation">(</span>players\\<span class="token punctuation">[</span>index\\<span class="token punctuation">]</span><span class="token punctuation">,</span> navController<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The<code>LazyVerticalGrid</code>component creates a grid layout with 3 columns. It applies padding around the grid and its content, and populates the grid with<code>PlayerCell</code>components based on the<code>players</code>list.</p><hr><h2 id="compose-fun-fact" tabindex="-1"><a class="header-anchor" href="#compose-fun-fact"><span>Compose Fun Fact</span></a></h2><p><strong>You should hoist UI state to the lowest common ancestor between all the composables that read and write it.</strong></p><div class="hint-container note"><p class="hint-container-title">Note</p><p>You shouldn‚Äôt pass ViewModel instances down to other composables. (You can‚Äôt build**@Preview**) ‚ùåüëÄ</p><p>‚Äî Instead ‚Äî</p><p>Use:<strong>Property drilling</strong></p><p>‚ÄúProperty drilling‚Äù refers to passing data through several nested children components to the location where they‚Äôre read.</p></div><hr><h2 id="the-cell" tabindex="-1"><a class="header-anchor" href="#the-cell"><span>The Cell</span></a></h2><p>**The <code>PlayerCell</code> composable displays each player‚Äôs information in a simple card format.**It includes the player‚Äôs headshot, name, and a ‚ÄúPROFILE‚Äù button to navigate to their details. Here‚Äôs how it‚Äôs structured:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">PlayerCell</span><span class="token punctuation">(</span>player<span class="token operator">:</span> Player<span class="token punctuation">,</span> navController<span class="token operator">:</span> NavController<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> scope <span class="token operator">=</span> <span class="token function">rememberCoroutineScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">DisposableEffect</span><span class="token punctuation">(</span>scope<span class="token punctuation">)</span> <span class="token punctuation">{</span> onDispose <span class="token punctuation">{</span> scope<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">Card</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        border <span class="token operator">=</span> <span class="token function">BorderStroke</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> <span class="token function">colorResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>whiteSmokeColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        colors <span class="token operator">=</span> CardDefaults<span class="token punctuation">.</span><span class="token function">cardColors</span><span class="token punctuation">(</span>containerColor <span class="token operator">=</span> <span class="token function">colorResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>whiteColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            verticalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>Center<span class="token punctuation">,</span> horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Spacer</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Box</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">clip</span><span class="token punctuation">(</span>CircleShape<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">74</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token function">colorResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>offWhiteColor<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span>shape <span class="token operator">=</span> CircleShape<span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token function">colorResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>whiteSmokeColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">AsyncImage</span><span class="token punctuation">(</span>model <span class="token operator">=</span> player<span class="token punctuation">.</span>headshot<span class="token punctuation">,</span> contentDescription <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">clip</span><span class="token punctuation">(</span>CircleShape<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">Spacer</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                text <span class="token operator">=</span> player<span class="token punctuation">.</span>firstName<span class="token punctuation">.</span>default<span class="token punctuation">,</span></span>
<span class="line">                style <span class="token operator">=</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>platformStyle <span class="token operator">=</span> <span class="token function">PlatformTextStyle</span><span class="token punctuation">(</span>includeFontPadding <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                fontSize <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span>value<span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> lastName <span class="token operator">=</span> player<span class="token punctuation">.</span>lastName<span class="token punctuation">.</span>default<span class="token punctuation">.</span><span class="token function">takeIf</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">9</span> <span class="token punctuation">}</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;..&quot;</span></span><span class="token punctuation">)</span> <span class="token operator">?:</span> player<span class="token punctuation">.</span>lastName<span class="token punctuation">.</span>default</span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                text <span class="token operator">=</span> lastName<span class="token punctuation">,</span></span>
<span class="line">                fontWeight <span class="token operator">=</span> FontWeight<span class="token punctuation">.</span>Bold<span class="token punctuation">,</span></span>
<span class="line">                style <span class="token operator">=</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>platformStyle <span class="token operator">=</span> <span class="token function">PlatformTextStyle</span><span class="token punctuation">(</span>includeFontPadding <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                fontSize <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span>value<span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Spacer</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;PROFILE&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                textAlign <span class="token operator">=</span> TextAlign<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">                fontSize <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span>value<span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                fontWeight <span class="token operator">=</span> FontWeight<span class="token punctuation">.</span>SemiBold<span class="token punctuation">,</span></span>
<span class="line">                style <span class="token operator">=</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>platformStyle <span class="token operator">=</span> <span class="token function">PlatformTextStyle</span><span class="token punctuation">(</span>includeFontPadding <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span>shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Transparent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> vertical <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">clickable</span> <span class="token punctuation">{</span> scope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span> navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>PlayerProfile<span class="token punctuation">.</span><span class="token function">createRoute</span><span class="token punctuation">(</span>id <span class="token operator">=</span> player<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Spacer</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="preview-the-grid-in-android-studio" tabindex="-1"><a class="header-anchor" href="#preview-the-grid-in-android-studio"><span><code>@Preview</code> the Grid in Android Studio</span></a></h2><p><code>ShowLazyVerticalGridPlayersScreenPreview</code>composable, allowing developers to visualize how the<code>ShowLazyVerticalGridPlayersScreen</code>component will look and behave without running the entire app. It uses a<code>@Preview</code>annotation to specify the preview configuration and provides a sample list of players to populate the grid.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@RequiresApi</span><span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>O<span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation builtin">@Preview</span><span class="token punctuation">(</span>showBackground <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> showSystemUi <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">ShowLazyVerticalGridPlayersScreenPreview</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token annotation builtin">@PreviewParameter</span><span class="token punctuation">(</span>ShowLazyVerticalGridPlayersScreenPreviewParameterProvider<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span> players<span class="token operator">:</span> List<span class="token operator">&lt;</span>Player<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    Column <span class="token punctuation">{</span></span>
<span class="line"><span class="token function">ShowLazyVerticalGridPlayers</span><span class="token punctuation">(</span>PlayersUiState<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span>players<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rememberNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">class</span> ShowLazyVerticalGridPlayersScreenPreviewParameterProvider <span class="token operator">:</span> PreviewParameterProvider<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Player<span class="token operator">&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">val</span> values<span class="token operator">:</span> Sequence<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Player<span class="token operator">&gt;</span><span class="token operator">&gt;</span> <span class="token operator">=</span></span>
<span class="line">            <span class="token function">sequenceOf</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Player</span><span class="token punctuation">(</span>firstName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Connor&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;McDavid&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Player</span><span class="token punctuation">(</span>firstName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;James&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;van Riemsdyk&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Player</span><span class="token punctuation">(</span>firstName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;John&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Brackenborough&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Player</span><span class="token punctuation">(</span>firstName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Sidney&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Crosby&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Player</span><span class="token punctuation">(</span>firstName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Bobby&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Brink&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Player</span><span class="token punctuation">(</span>firstName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Austin&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastName <span class="token operator">=</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Matthews&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://droidcon.com/wp-content/uploads/2024/10/1_JjXTO8WqJFHnDGBibTB2vA-600x278.webp" alt=" Screen in Android Studio" tabindex="0" loading="lazy"><figcaption><code>LazyVerticalGrid</code> Screen in Android Studio</figcaption></figure><hr><h2 id="don-t-forget-to-test-test-test-üß™üß™üß™" tabindex="-1"><a class="header-anchor" href="#don-t-forget-to-test-test-test-üß™üß™üß™"><span>DON‚ÄôT FORGET TO TEST, TEST, TEST: üß™üß™üß™</span></a></h2><p><strong>To ensure the <code>getSkatersAndGoalies</code> function is working correctly, I have written a unit test to verify its behavior.</strong> Here‚Äôs a breakdown of the test:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Test</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">\`getSkatersAndGoalies() should emit list of skaters\`</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> runTest <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Given</span></span>
<span class="line">    <span class="token keyword">val</span> goalie <span class="token operator">=</span> <span class="token function">Player</span><span class="token punctuation">(</span>positionCode <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;G&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> skater <span class="token operator">=</span> <span class="token function">Player</span><span class="token punctuation">(</span>positionCode <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;C&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> mockPlayers <span class="token operator">=</span> <span class="token function">Players</span><span class="token punctuation">(</span>forwards <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span>skater<span class="token punctuation">)</span><span class="token punctuation">,</span> goalies <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span>goalie<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> mockSeason <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;20232024&quot;</span></span></span>
<span class="line">    <span class="token comment">// When</span></span>
<span class="line">    coEvery <span class="token punctuation">{</span> mockDateUtilsRepository<span class="token punctuation">.</span><span class="token function">getCurrentSeasonInYears</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> returns mockSeason</span>
<span class="line">    coEvery <span class="token punctuation">{</span> mockRepository<span class="token punctuation">.</span><span class="token function">getAllNhlPlayers</span><span class="token punctuation">(</span>mockSeason<span class="token punctuation">)</span> <span class="token punctuation">}</span> returns <span class="token function">flowOf</span><span class="token punctuation">(</span>mockPlayers<span class="token punctuation">)</span></span>
<span class="line">    viewModel<span class="token punctuation">.</span><span class="token function">getSkatersAndGoalies</span><span class="token punctuation">(</span>mockSeason<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">advanceUntilIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// Then</span></span>
<span class="line">    <span class="token keyword">val</span> actualPlayers <span class="token operator">=</span> <span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>uiState<span class="token punctuation">.</span>value <span class="token keyword">as</span><span class="token operator">?</span> PlayersUiState<span class="token punctuation">.</span>Success<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>players<span class="token punctuation">.</span><span class="token function">orEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> actualPlayers<span class="token punctuation">.</span>size<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Major tech companies (<em>PayPal, Google, Meta, Salesforce‚Ä¶</em>)<strong>value engineers who understand the significance of testing</strong>for building reliable and high-quality applications and may help you land that big bank jobby-job. ü§ûüèΩüòÉüí∞</p>`,28)),s("p",null,[n[6]||(n[6]=a("**That‚Äôs a wrap!**With")),n[7]||(n[7]=s("code",null,"LazyVerticalGrid",-1)),n[8]||(n[8]=a(", you‚Äôve unlocked the power to build stunning grid layouts in your Jetpack Compose app. Ready to see it in action?")),s("a",P,[s("strong",null,[t(o,{icon:"fa-brands fa-google-play"}),n[5]||(n[5]=a("Download the NHL Hockey app on Google Play"))])]),n[9]||(n[9]=a("and experience the magic firsthand. Don‚Äôt forget to leave a review and let me know what you think!"))]),s("p",null,[n[16]||(n[16]=a("üó£Ô∏è: reach out on")),s("a",C,[n[10]||(n[10]=a("X (")),t(o,{icon:"fa-brands fa-x-twitter"}),n[11]||(n[11]=s("code",null,"BrickyardApps",-1)),n[12]||(n[12]=a(")"))]),n[17]||(n[17]=a("or")),s("a",G,[n[13]||(n[13]=a("Insta (")),t(o,{icon:"fa-brands fa-instagram"}),n[14]||(n[14]=s("code",null,"brickyardmobile",-1)),n[15]||(n[15]=a(")"))])]),t(i,{name:"Android Apps by Brickyard Mobile on Google Play",desc:"Simple and fun one-tap apps.",url:"https://play.google.com/store/apps/dev?id=7614313297301862853&hl=en_US/",logo:"https://gstatic.com/android/market_images/web/favicon_v3.ico",preview:"https://play-lh.googleusercontent.com/Tmsp7WXv-LSWek3RCAaiD_1jgSSM3lOA-oWpkh73iITKGGQX8FWd0sF_7S4aq0WYE84"}),s("div",x,[n[20]||(n[20]=s("p",{class:"hint-container-title"},"Info",-1)),s("p",null,[n[19]||(n[19]=a("This article is previously published on ")),s("a",B,[t(o,{icon:"fa-brands fa-medium"}),n[18]||(n[18]=s("code",null,"proandroiddev",-1))])]),t(i,{name:"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |",desc:"Want to create stunning grid layouts in your Jetpack Compose app? Look no further than LazyVerticalGrid. This powerful tool simplifies the‚Ä¶",url:"https://proandroiddev.com/build-stunning-grids-in-minutes-with-lazyverticalgrid-17702887cccb/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*L595ZfuVwNGgoBuPr5mzBQ.jpeg"})]),g(" TODO: add ARTICLE CARD "),t(c,u(r({title:"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |",desc:"Want to create stunning grid layouts in your Jetpack Compose app? Look no further than LazyVerticalGrid. This powerful tool simplifies the process of designing and implementing efficient grid-based interfaces. In this comprehensive tutorial, I‚Äôll share my insights and experience using LazyVerticalGrid in a real-world production app on Google Play. I‚Äôll explore its key features, best practices, and practical tips to help you create stunning grids that captivate your users. ü§ì",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/build-stunning-grids-in-minutes-with-lazyverticalgrid-%F0%93%88%88-%F0%93%8A%81-%F0%93%8A%82-%F0%93%90%96.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const A=d(h,[["render",L]]),V=JSON.parse('{"path":"/droidcon.com/build-stunning-grids-in-minutes-with-lazyverticalgrid.html","title":"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |","lang":"en-US","frontmatter":{"lang":"en-US","title":"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |","description":"Article(s) > Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |","icon":"fa-brands fa-android","category":["Java","Kotlin","Android","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |\\",\\"image\\":[\\"https://droidcon.com/wp-content/uploads/2024/10/1_L595ZfuVwNGgoBuPr5mzBQ-600x600.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/10/1_JjXTO8WqJFHnDGBibTB2vA-600x278.webp\\"],\\"datePublished\\":\\"2024-10-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"droidcon\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/build-stunning-grids-in-minutes-with-lazyverticalgrid.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |"}],["meta",{"property":"og:description","content":"Article(s) > Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/10/1_L595ZfuVwNGgoBuPr5mzBQ-600x600.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/10/1_L595ZfuVwNGgoBuPr5mzBQ-600x600.webp"}],["meta",{"name":"twitter:image:alt","content":"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |"}],["meta",{"property":"article:author","content":"droidcon"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-10-28T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |"},{"property":"og:description","content":"Build Stunning Grids in Minutes with LazyVerticalGrid | ìàà ìäÅ ìäÇ ìêñ |"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/build-stunning-grids-in-minutes-with-lazyverticalgrid-%F0%93%88%88-%F0%93%8A%81-%F0%93%8A%82-%F0%93%90%96.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-10-28T00:00:00.000Z","isOriginal":false,"author":"droidcon","cover":"https://droidcon.com/wp-content/uploads/2024/10/1_L595ZfuVwNGgoBuPr5mzBQ-600x600.webp"},"git":{},"readingTime":{"minutes":5.01,"words":1504},"filePathRelative":"droidcon.com/build-stunning-grids-in-minutes-with-lazyverticalgrid.md","copyright":{"author":"droidcon"}}');export{A as comp,V as data};
