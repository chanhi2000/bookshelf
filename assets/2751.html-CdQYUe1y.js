import{_ as y}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,d as l,f as o,b as u,a as e,t as w,n as m,g as p,w as r,e as t,r as a,o as G}from"./app-BVguHYKu.js";const z={},O={id:"frontmatter-title-관련",tabindex:"-1"},L={class:"header-anchor",href:"#frontmatter-title-관련"},v={class:"table-of-contents"},T={href:"https://github.com/k8sgpt-ai/k8sgpt",target:"_blank",rel:"noopener noreferrer"},x={class:"hint-container note"},P={href:"https://ollama.com/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://ollama.com/blog/tool-support",target:"_blank",rel:"noopener noreferrer"},A={href:"https://huggingface.co/FlagAlpha",target:"_blank",rel:"noopener noreferrer"},M={href:"https://huggingface.co/FlagAlpha/Llama3-Chinese-8B-Instruct/tree/main",target:"_blank",rel:"noopener noreferrer"},F={href:"https://huggingface.co/docs/hub/security-tokens",target:"_blank",rel:"noopener noreferrer"},K={href:"https://huggingface.co/FlagAlpha/Llama3-Chinese-8B-Instruct",target:"_blank",rel:"noopener noreferrer"},U={class:"hint-container info"},D={href:"https://huggingface.co/docs/safetensors/index",target:"_blank",rel:"noopener noreferrer"},E={href:"https://huggingface.co/docs/diffusers/main/ko/using-diffusers/using_safetensors",target:"_blank",rel:"noopener noreferrer"},V={href:"https://ai.atsit.in/posts/458772629/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://huggingface.co/docs/safetensors/index",target:"_blank",rel:"noopener noreferrer"},C={class:"hint-container info"},R={href:"https://github.com/ggerganov",target:"_blank",rel:"noopener noreferrer"},S={href:"https://medium.com/@sandyeep70/ggml-to-gguf-a-leap-in-language-model-file-formats-cd5d3a6058f9",target:"_blank",rel:"noopener noreferrer"},B={href:"https://ibm.com/think/topics/gguf-versus-ggml",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/ggerganov/ggml/blob/master/docs/gguf.md",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/ggerganov/llama.cpp.git",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://huggingface.co/second-state/Mistral-Nemo-Instruct-2407-GGUF/tree/main",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://wikidocs.net/251903",target:"_blank",rel:"noopener noreferrer"},j={class:"hint-container info"},J={href:"https://tulip-phalange-a1e.notion.site/a947f0efb8eb4813a533b0d957134f6d",target:"_blank",rel:"noopener noreferrer"},h={class:"hint-container info"},H={href:"https://wikidocs.net/21697",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/ggerganov/llama.cpp/pull/1684",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/k8sgpt-ai/k8sgpt",target:"_blank",rel:"noopener noreferrer"},X={class:"hint-container note"},c={href:"https://ollama.com/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://ollama.com/blog/tool-support",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/ollama/ollama/blob/main/docs/modelfile.md",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://reddit.com/r/ollama/comments/1dn7mx0/prompt_for_llama_3_8b_instruct/",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://pkg.go.dev/text/template",target:"_blank",rel:"noopener noreferrer"},on={class:"hint-container note"},en={href:"https://kccncossaidevchn2024.sched.com/event/1eYZI",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://youtu.be/xy7tJTIfyg8",target:"_blank",rel:"noopener noreferrer"};function rn(f,n){const g=a("VPCard"),s=a("router-link"),d=a("SiteInfo"),i=a("VPIcon"),b=a("VidStack");return G(),k("div",null,[l("h1",O,[l("a",L,[l("span",null,w(f.$frontmatter.title)+" 관련",1)])]),o(g,m(p({title:"Google Gemini > Article(s)",desc:"Article(s)",link:"/ai/llama/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),l("nav",v,[l("ul",null,[l("li",null,[o(s,{to:"#_0단계-사전-준비"},{default:r(()=>n[0]||(n[0]=[t("0단계: 사전 준비")])),_:1,__:[0]})]),l("li",null,[o(s,{to:"#_1단계-허깅페이스-hugging-face-에서-모델-내려받기"},{default:r(()=>n[1]||(n[1]=[t("1단계: 허깅페이스(Hugging Face)에서 모델 내려받기")])),_:1,__:[1]})]),l("li",null,[o(s,{to:"#_2단계-모델을-gguf-파일-형식으로-변환하기"},{default:r(()=>n[2]||(n[2]=[t("2단계: 모델을 GGUF 파일 형식으로 변환하기")])),_:1,__:[2]})]),l("li",null,[o(s,{to:"#_3단계-f16-gguf-모델을-q5-k-m으로-양자화"},{default:r(()=>n[3]||(n[3]=[t("3단계: f16 GGUF 모델을 Q5_K_M으로 양자화")])),_:1,__:[3]})]),l("li",null,[o(s,{to:"#_4단계-gguf-파일을-ollama에-불러-사용하기"},{default:r(()=>n[4]||(n[4]=[t("4단계: GGUF 파일을 Ollama에 불러 사용하기")])),_:1,__:[4]}),l("ul",null,[l("li",null,[o(s,{to:"#모델파일-modelfile"},{default:r(()=>n[5]||(n[5]=[t("모델파일(modelfile)")])),_:1,__:[5]})])])]),l("li",null,[o(s,{to:"#_5단계-ollama에-추가된-모델을-k8sgpt-분석에-사용하기"},{default:r(()=>n[6]||(n[6]=[t("5단계: Ollama에 추가된 모델을 K8sGPT 분석에 사용하기")])),_:1,__:[6]})]),l("li",null,[o(s,{to:"#마치며"},{default:r(()=>n[7]||(n[7]=[t("마치며")])),_:1,__:[7]})])])]),n[144]||(n[144]=l("hr",null,null,-1)),o(d,{name:"Ollama에 없는 모델 내가 만들어 사용하기 (1) | 요즘IT",desc:"K8sGPT는 쿠버네티스 클러스터의 정보를 스캐닝하여 이슈를 발견하고, 그 이슈의 원인과 결과, 해결 방안을 알려 줍니다. 이 프로젝트는 처음에는 오픈소스 LLM과 함께 시작했지만, 이제 직접 접근하고 관리할 수 있는 AI 제공자를 구성해 활용하는 기능을 제공합니다. 구성을 위해 필요한 것은 AI 모델의 실행과 해당 모델에게 요청할 API 주소, 두 가지입니다. 이때 권장하는 도구는 바로 Ollama입니다. 이번 글에서는 Ollama의 create 명령을 사용해 내가 필요한 모델을 활용하는 방법을 알아보겠습니다. 꼭 K8sGPT를 활용하지 않더라도 Ollama 활용법에 관심이 있는 분들에게 도움이 될 것으로 기대합니다.",url:"https://yozm.wishket.com/magazine/detail/2751/",logo:"https://yozm.wishket.com/favicon.ico",preview:"https://yozm.wishket.com/media/news/2751/image1.png"}),l("p",null,[l("a",T,[n[8]||(n[8]=t("K8sGPT (")),o(i,{icon:"iconfont icon-github"}),n[9]||(n[9]=l("code",null,"k8sgpt-ai/k8sgpt",-1)),n[10]||(n[10]=t(")"))]),n[11]||(n[11]=t("는 쿠버네티스와 대규모언어모델(이하 LLM) GPT를 결합해 만들어진 오픈소스 프로젝트입니다. 쿠버네티스 클러스터의 정보를 스캐닝하여 이슈를 발견하고, 그 이슈의 원인과 결과, 해결 방안을 알려 줍니다."))]),n[145]||(n[145]=l("p",null,"이 프로젝트는 처음에는 오픈소스 LLM과 함께 시작했지만, 이제 직접 접근하고 관리할 수 있는 AI 제공자를 구성해 활용하는 기능을 제공합니다. 따라서 데이터가 노출되는 것을 우려하거나 환경에 따라 또는 토큰을 크게 쓰고 싶은 경우, 로컬에서 LLM 환경을 만들고 이를 적용할 수 있습니다.",-1)),l("div",x,[n[12]||(n[12]=l("p",{class:"hint-container-title"},"참고 글",-1)),o(g,m(p({title:"로컬 LLM에서 K8sGPT로 쿠버네티스 AIOps 실행하기 (1,2) | 요즘IT",desc:"로컬 LLM에서 K8sGPT로 쿠버네티스 AIOps 실행하기",link:"/yozm.wishket.com/2515.md",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16)]),l("p",null,[n[14]||(n[14]=t("구성을 위해 필요한 것은 AI 모델의 실행과 해당 모델에게 요청할 API 주소, 두 가지입니다. 이때 권장하는 도구는 바로 ")),l("a",P,[o(i,{icon:"fas fa-globe"}),n[13]||(n[13]=t("Ollama"))]),n[15]||(n[15]=t("입니다. 로컬 환경에 LLM을 손쉽게 구현하도록 도와주는 도구죠. Ollama에는 llama3.1을 비롯해 다양한 공개 모델들이 매우 빠르게 포팅되어 올라옵니다. 따라서 활용 시 특별히 신경 써야 할 부분은 없습니다."))]),n[146]||(n[146]=u('<p>그럼에도 공개된 LLM 또는 sLM 모델을 모두 받을 수 있는 것은 아닙니다. 이를 위해 Ollama는 필요에 따라 다른 곳에 공개된 모델을 사용할 수 있도록 <code>create</code> 명령을 제공합니다.</p><figure><img src="https://yozm.wishket.com/media/news/2751/image1.png" alt="Ollama에서 llama3 또는 그 이상의 중국어 모델을 사용하고자 검색했으나 없는 경우" tabindex="0" loading="lazy"><figcaption>Ollama에서 llama3 또는 그 이상의 중국어 모델을 사용하고자 검색했으나 없는 경우</figcaption></figure><p>따라서 이번 기고에서는 create 명령을 사용하기 위한 절차, 그리고 준비 과정을 살펴보며 전반적인 구조에 대한 이해를 높이려고 합니다. 꼭 K8sGPT를 활용하지 않더라도 Ollama 활용법에 관심이 있는 분들에게 도움이 될 것으로 기대합니다. 작업 순서는 아래와 같습니다.</p><blockquote><ol><li>공개된 모델 내려받기</li><li>파이토치(PyTorch) 프레임워크를 사용한 모델을 GGUF 포맷으로 변환하기</li><li>기본 f16으로 생성된 GGUF 모델을 Q5_K_M으로 양자화</li><li>Ollama의 create 명령을 사용해 모델 추가하기</li><li>Ollama에 추가된 모델을 K8sGPT 분석에 사용하기</li></ol></blockquote><p>1부 글에서는 내가 활용하고자 하는 모델을 Ollama에 활용하기 좋게 변환하는 작업까지 알아볼 예정입니다.</p>',5)),l("figure",null,[n[21]||(n[21]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image5.png",alt:'Ollama 로고를 응용한 그림 <br/><출처: <VPIcon icon="fas fa-globe"/>Ollama 블로그>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[17]||(n[17]=t("Ollama 로고를 응용한 그림 ")),n[18]||(n[18]=l("br",null,null,-1)),n[19]||(n[19]=t("<출처: ")),l("a",I,[o(i,{icon:"fas fa-globe"}),n[16]||(n[16]=t("Ollama 블로그"))]),n[20]||(n[20]=t(">"))])]),n[147]||(n[147]=l("hr",null,null,-1)),n[148]||(n[148]=l("h2",{id:"_0단계-사전-준비",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_0단계-사전-준비"},[l("span",null,"0단계: 사전 준비")])],-1)),n[149]||(n[149]=l("p",null,"작업을 진행하려면 아래 도구들이 설치되어 있어야 합니다. (마이너 버전은 시기에 따라 다소 달라질 수 있습니다.)",-1)),n[150]||(n[150]=l("ul",null,[l("li",null,"python3"),l("li",null,"pip3"),l("li",null,"huggingface-cli")],-1)),n[151]||(n[151]=l("p",null,"또한 다음과 같은 구조로 만든 디렉터리를 작업에 활용할 예정입니다.",-1)),n[152]||(n[152]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/1.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[153]||(n[153]=l("hr",null,null,-1)),n[154]||(n[154]=l("h2",{id:"_1단계-허깅페이스-hugging-face-에서-모델-내려받기",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_1단계-허깅페이스-hugging-face-에서-모델-내려받기"},[l("span",null,"1단계: 허깅페이스(Hugging Face)에서 모델 내려받기")])],-1)),n[155]||(n[155]=l("p",null,"가장 먼저 해야 할 일은 허깅페이스에서 어떤 LLM을 내려받을 지 결정하는 것입니다.",-1)),n[156]||(n[156]=l("p",null,[t("이번 실습에 활용할 모델은 Llama3-Chinese-8B-Instruct 모델입니다. 그에 앞서 우선 Ollama에 llama2-chinese를 올려둔 곳에서 따로 제공하는 llama3이 있는지 해당 조직 저장소로 이동해 확인해 봅니다. 저장소에 아래 이미지처럼 "),l("code",null,"Llama3-Chinese-8B-Instruct"),t("이 있는 것을 확인할 수 있습니다.")],-1)),l("figure",null,[n[27]||(n[27]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image2.png",alt:'FlagAlpha에서 제공하는 모델 <br/><출처: 허깅페이스, <VPIcon icon="iconfont icon-huggingface"/>>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[23]||(n[23]=t("FlagAlpha에서 제공하는 모델 ")),n[24]||(n[24]=l("br",null,null,-1)),n[25]||(n[25]=t("<출처: 허깅페이스, ")),l("a",A,[o(i,{icon:"iconfont icon-huggingface"}),n[22]||(n[22]=l("code",null,"FlagAlpha",-1))]),n[26]||(n[26]=t(">"))])]),n[157]||(n[157]=l("p",null,"다음으로는 페이지에서 어떤 포맷으로 모델을 제공하는 지 확인해야 합니다. 모델이 세이프텐서(safetensor) 포맷으로 제공되는 것을 확인했습니다. 참고로 허깅페이스에서 제공하는 모델은 대부분 세이프텐서 형태로 제공합니다.",-1)),l("figure",null,[n[33]||(n[33]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image8.png",alt:'FlagAlpha에서 제공하는 Llama3-Chinese-8B-Instruct 모델의 세부 사항들 <br/><출처: 허깅페이스, <VPIcon icon="iconfont icon-huggingface"/>FlagAlpha>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[29]||(n[29]=t("FlagAlpha에서 제공하는 Llama3-Chinese-8B-Instruct 모델의 세부 사항들 ")),n[30]||(n[30]=l("br",null,null,-1)),n[31]||(n[31]=t("<출처: 허깅페이스, ")),l("a",M,[o(i,{icon:"iconfont icon-huggingface"}),n[28]||(n[28]=t("FlagAlpha"))]),n[32]||(n[32]=t(">"))])]),l("p",null,[n[35]||(n[35]=t("해당 모델을 내려받으려면 ")),n[36]||(n[36]=l("code",null,"huggingface-cli login",-1)),n[37]||(n[37]=t(" 명령어로 허깅페이스에 로그인을 해야 합니다. 허깅페이스 로그인 토큰을 받으려면 마찬가지 ")),l("a",F,[o(i,{icon:"iconfont icon-huggingface"}),n[34]||(n[34]=t("허깅페이스 공식 문서"))]),n[38]||(n[38]=t("를 참고할 수 있습니다."))]),n[158]||(n[158]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/2.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[159]||(n[159]=l("p",null,"이제 허깅페이스에서 모델을 내려받기 위해 주소를 웹 페이지에서 복사합니다.",-1)),l("figure",null,[n[44]||(n[44]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image15.png",alt:'FlagAlpha의 Llama3-Chinese-8B-Instruct 소개 페이지 <br/><출처: 허깅페이스, <VPIcon icon="iconfont icon-huggingface"/>FlagAlpha>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[40]||(n[40]=t("FlagAlpha의 Llama3-Chinese-8B-Instruct 소개 페이지 ")),n[41]||(n[41]=l("br",null,null,-1)),n[42]||(n[42]=t("<출처: 허깅페이스, ")),l("a",K,[o(i,{icon:"iconfont icon-huggingface"}),n[39]||(n[39]=t("FlagAlpha"))]),n[43]||(n[43]=t(">"))])]),n[160]||(n[160]=l("p",null,[t("모델 다운로드에는 "),l("code",null,"download"),t(" 명령을 활용합니다. 내려받는 주소를 정확하게 지정해 받기 위해 "),l("code",null,"--local-dir"),t(" 명령어도 함께 활용했습니다.")],-1)),n[161]||(n[161]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/3.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[162]||(n[162]=l("p",null,"다운로드가 끝난 다음, 내려받은 모델과 관련 파일을 확인합니다.",-1)),n[163]||(n[163]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/4.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),n[164]||(n[164]=l("hr",null,null,-1)),n[165]||(n[165]=l("h2",{id:"_2단계-모델을-gguf-파일-형식으로-변환하기",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_2단계-모델을-gguf-파일-형식으로-변환하기"},[l("span",null,"2단계: 모델을 GGUF 파일 형식으로 변환하기")])],-1)),n[166]||(n[166]=l("p",null,"앞서 확인했듯 허깅페이스에서 내려받은 모델은 세이프텐서(safetensors) 형식입니다. 허깅페이스에서 배포되는 모델이 주로 세이프텐서를 쓰는 주된 이유는 pt(PyTorch) 모델의 가중치에 악성코드가 포함될 수 있는 위험을 줄이기 위해서입니다. 아울러 이 형식은 효율적인 직렬화 및 압축 알고리즘으로 대용량 텐서의 크기를 줄여 줍니다.",-1)),l("div",U,[n[52]||(n[52]=l("p",{class:"hint-container-title"},"Info",-1)),l("p",null,[n[48]||(n[48]=t("세이프텐서에 대한 자세한 내용은 ")),l("a",D,[o(i,{icon:"iconfont icon-huggingface"}),n[45]||(n[45]=l("code",null,"safetensors",-1))]),n[49]||(n[49]=t(", ")),l("a",E,[o(i,{icon:"iconfont icon-huggingface"}),n[46]||(n[46]=t("세이프텐서 로드"))]),n[50]||(n[50]=t(", ")),l("a",V,[o(i,{icon:"fas fa-globe"}),n[47]||(n[47]=t("세이프티 센서 소개"))]),n[51]||(n[51]=t(" 문서를 참고해 보세요."))])]),l("figure",null,[n[58]||(n[58]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image13.png",alt:'세이프텐서 형식의 내부 구조 <br/><출처: <VPIcon icon="iconfont icon-huggingface"/>허깅페이스>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[54]||(n[54]=t("세이프텐서 형식의 내부 구조 ")),n[55]||(n[55]=l("br",null,null,-1)),n[56]||(n[56]=t("<출처: ")),l("a",q,[o(i,{icon:"iconfont icon-huggingface"}),n[53]||(n[53]=t("허깅페이스"))]),n[57]||(n[57]=t(">"))])]),n[167]||(n[167]=l("p",null,"하지만 세이프텐서 형식의 모델을 Ollama에서는 사용할 수 없습니다. Ollama에서 주로 추가해서 사용하는 파일 형식은 GGUF(GPT-Generated Unified Format)입니다.",-1)),n[168]||(n[168]=l("p",null,"2023년 8월 공개된 GGUF는 딥러닝 모델을 단일 파일로 저장하기 위해 사용됩니다. GGUF 등장 이전에는 GGML(GPT-Generated Model Language)이라는 파일 형식을 주로 활용했습니다. 다만 GGML은 모델에 추가 정보를 넣기 어렵다는 점, 모델 간의 호환성 문제, 그리고 rope-freq-base와 같은 값을 자주 바꿔줘야 하는 문제 등이 있었습니다. GGUF는 이를 개선한 형식으로 현재 시점에서 모델 저장을 위해 널리 쓰이고 있습니다.",-1)),l("div",C,[n[68]||(n[68]=l("p",{class:"hint-container-title"},"Info",-1)),l("p",null,[n[64]||(n[64]=t("GGML과 GGUF 모두 ")),l("a",R,[n[59]||(n[59]=t("Georgi Gerganov(")),o(i,{icon:"iconfont icon-github"}),n[60]||(n[60]=l("code",null,"ggerganov",-1)),n[61]||(n[61]=t(")"))]),n[65]||(n[65]=t("의 주도로 만들어졌습니다. 두 가지 형식의 상세한 차이가 궁금한 분은 ")),l("a",S,[o(i,{icon:"fa-brands fa-medium"}),n[62]||(n[62]=t("문서1"))]),n[66]||(n[66]=t(", ")),l("a",B,[o(i,{icon:"iconfont icon-ibm"}),n[63]||(n[63]=t("문서2"))]),n[67]||(n[67]=t("를 참고하세요."))])]),n[169]||(n[169]=l("p",null,"GGUF 파일은 아래 이미지와 같은 세부 정보를 1개의 파일에 모두 담고 있습니다.",-1)),l("figure",null,[n[76]||(n[76]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image6.png",alt:'GGUF 파일이 담고 있는 세부 정보 <br/><출처: ggerganov 깃허브 (<VPIcon icon="iconfont icon-github"/>)>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[72]||(n[72]=t("GGUF 파일이 담고 있는 세부 정보 ")),n[73]||(n[73]=l("br",null,null,-1)),n[74]||(n[74]=t("<출처: ")),l("a",Q,[n[69]||(n[69]=t("ggerganov 깃허브 (")),o(i,{icon:"iconfont icon-github"}),n[70]||(n[70]=l("code",null,"ggerganov/ggml",-1)),n[71]||(n[71]=t(")"))]),n[75]||(n[75]=t(">"))])]),l("p",null,[n[80]||(n[80]=t("따라서 Ollama에서 세이프텐서 형식의 모델을 쓰려면 GGUF로 변환하는 과정이 필요합니다. 변환을 위해서는 GGUF 형식 개발을 주도한 개발자가 직접 만든 ")),l("a",N,[n[77]||(n[77]=t("llama.cpp (")),o(i,{icon:"iconfont icon-github"}),n[78]||(n[78]=l("code",null,"ggerganov/llama.cpp",-1)),n[79]||(n[79]=t(")"))]),n[81]||(n[81]=t(" 프로젝트의 도움을 받는 것이 편리합니다. 특히 해당 프로젝트는 단순히 GGUF 변환 뿐만 아니라 다양한 종류의 양자화(Quantization)도 제공하고 있어 CPU와 메모리가 부족한 기기에서도 모델이 동작할 수 있게 해줍니다."))]),n[170]||(n[170]=l("p",null,"이제 본격적으로 변환 과정을 따라가 보겠습니다.",-1)),n[171]||(n[171]=l("p",null,[t("우선 가장 먼저 "),l("code",null,"llama.cpp"),t(" 프로젝트를 "),l("code",null,"git clone"),t(" 명령어로 로컬에 내려받습니다.")],-1)),n[172]||(n[172]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/5.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[173]||(n[173]=l("p",null,[t("곧이어 llama.cpp 프로젝트 구동을 위한 파이썬 관련 패키지를 "),l("code",null,"pip3"),t("로 설치합니다.")],-1)),n[174]||(n[174]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/6.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[175]||(n[175]=l("p",null,[t("설치가 끝나면 llama.cpp에 미리 작성된 "),l("code",null,"convert_hf_to_gguf.py"),t("를 이용해 f16(float16) 수준의 gguf를 생성합니다. 하단의 "),l("code",null,"2.f16-modes"),t(" 디렉터리는 미리 만들어져 있습니다. 단순 파일로도 변환할 수 있습니다.")],-1)),n[176]||(n[176]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/7.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[177]||(n[177]=l("p",null,"생성된 gguf 파일과 그 파일의 사이즈를 확인합니다.",-1)),n[178]||(n[178]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/8.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[179]||(n[179]=l("p",null,[t("문제가 없다면, 양자화(Quantization)를 진행해 보겠습니다. 다만 "),l("code",null,"convert_hf_to_gguf.py"),t(" 명령에서는 양자화 옵션을 "),l("code",null,"f32,f16, bf16, q8_0, auto"),t("만 제공합니다. 좀 더 나은 양자화 방법이 필요해 보입니다.")],-1)),n[180]||(n[180]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/9.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[181]||(n[181]=l("hr",null,null,-1)),n[182]||(n[182]=l("h2",{id:"_3단계-f16-gguf-모델을-q5-k-m으로-양자화",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_3단계-f16-gguf-모델을-q5-k-m으로-양자화"},[l("span",null,"3단계: f16 GGUF 모델을 Q5_K_M으로 양자화")])],-1)),n[183]||(n[183]=l("p",null,"양자화(Quantization)란 모델의 성능을 일정 수준 유지하면서도 사이즈와 동작에 필요한 리소스를 효과적으로 줄이기 위해 가장 많이 쓰이는 방법 중 하나입니다. 현재 기본값인 f16은 용량이 다소 큰 편으로 허깅페이스에서 배포된 모델은 여러 종류의 양자화 모델을 함께 제공합니다.",-1)),l("figure",null,[n[87]||(n[87]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image21.png",alt:'second-state에서 제공하는 다양한 종류의 양자화 gguf 모델 <br/><출처: 허깅페이스, <VPIcon icon="iconfont icon-huggingface"/>second-state>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[83]||(n[83]=t("second-state에서 제공하는 다양한 종류의 양자화 gguf 모델 ")),n[84]||(n[84]=l("br",null,null,-1)),n[85]||(n[85]=t("<출처: 허깅페이스, ")),l("a",Y,[o(i,{icon:"iconfont icon-huggingface"}),n[82]||(n[82]=t("second-state"))]),n[86]||(n[86]=t(">"))])]),n[184]||(n[184]=l("p",null,"양자화로 모델의 비트가 낮아지면 일반적으로 정확도가 내려갑니다. 하지만 그만큼 용량이 줄어 들어 모델을 동작할 때 필요한 리소스를 줄일 수 있습니다.",-1)),l("p",null,[n[89]||(n[89]=t("허깅페이스에서 배포되는 대부분 모델은 README 문서에서 레벨을 Q5라고 소개합니다. 그 외 K_M, K-L 등 ")),l("a",Z,[o(i,{icon:"fas fa-globe"}),n[88]||(n[88]=t("표기"))]),n[90]||(n[90]=t("로 레벨을 더 자세히 알려 줍니다. 여기서 K는 양자화에 K-평균 알고리즘(means clustering)을 활용했음을, 그 다음 대문자는 모델의 사이즈를 의미합니다. S(Small)와 M(Medium), 그리고 L(Large)을 사용합니다."))]),l("div",j,[n[94]||(n[94]=l("p",{class:"hint-container-title"},"Info",-1)),l("p",null,[n[92]||(n[92]=t("양자화에 대해서는 이 ")),l("a",J,[o(i,{icon:"fas fa-globe"}),n[91]||(n[91]=t("문서"))]),n[93]||(n[93]=t("도 함께 보면 좋습니다."))])]),n[185]||(n[185]=l("p",null,[t("양자화 모델 중 주로 사용하는 것은 "),l("code",null,"Q5_K_M"),t("입니다. 언어 모델의 주요 성능 지표인 펄플렉시티(perplexity, PPL)*이 허용 가능한 수준이며 모델의 사이즈도 적게 만든 모델이기 때문입니다.")],-1)),l("div",h,[n[97]||(n[97]=l("p",{class:"hint-container-title"},"Info",-1)),l("p",null,[l("a",H,[o(i,{icon:"fas fa-globe"}),n[95]||(n[95]=t("펄플렉시티(perplexity, PPL)"))]),n[96]||(n[96]=t(": 문장을 생성할 때 선택해야 하는 가짓수가 많을수록 모델은 혼란을 겪습니다. 잘 학습된 모델일수록 이러한 가짓수가 적습니다. 따라서 모델의 혼란스러움을 나타내는 수치가 낮은 것, 즉 펄플렉시티가 낮을수록 성능이 좋다고 볼 수 있습니다."))])]),l("figure",null,[n[105]||(n[105]=l("img",{src:"https://yozm.wishket.com/media/news/2751/image9.png",alt:'양자화에 따라 모델의 사이즈를 줄이면 펄플렉시티가 높다는 것을 보여주는 그래프 <br/><출처: llama.cpp 깃허브 (<VPIcon icon="iconfont icon-github"/>)>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[101]||(n[101]=t("양자화에 따라 모델의 사이즈를 줄이면 펄플렉시티가 높다는 것을 보여주는 그래프 ")),n[102]||(n[102]=l("br",null,null,-1)),n[103]||(n[103]=t("<출처: ")),l("a",$,[n[98]||(n[98]=t("llama.cpp 깃허브 (")),o(i,{icon:"iconfont icon-github"}),n[99]||(n[99]=l("code",null,"ggerganov/llama.cpp",-1)),n[100]||(n[100]=t(")"))]),n[104]||(n[104]=t(">"))])]),n[186]||(n[186]=l("p",null,[t("따라서 이번에도 역시 기본 제공 양자화 외에 추가로 작업해 Q5_K_M를 만들어 보겠습니다. 이를 위해 llama.cpp 디렉터리에서 "),l("code",null,"make"),t("를 실행합니다. 해당 명령으로 플랫폼에 맞는 다양한 명령어가 생성되는데, 그 중 "),l("code",null,"llama-quantize"),t("를 사용하겠습니다. 참고로 새로 생성되는 명령어는 "),l("code",null,"llama-"),t("로 시작됩니다.")],-1)),n[187]||(n[187]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/10.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[188]||(n[188]=l("p",null,[l("code",null,"llama-quantize"),t(" 명령어를 실행하기 전에 "),l("code",null,"--help"),t(" 명령어로 허용되는 양자화 타입을 확인합니다. "),l("code",null,"Q5_K_M"),t("이 존재하는 것을 확인합니다.")],-1)),n[189]||(n[189]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/11.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[190]||(n[190]=l("p",null,[t("f16으로 양자화 되어 있는 gguf 파일을 "),l("code",null,"Q5_K_M"),t("으로 변환했습니다. 변환 후에 줄어든 용량도 확인해 보겠습니다.")],-1)),n[191]||(n[191]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2751/12.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[192]||(n[192]=l("hr",null,null,-1)),o(d,{name:"Ollama에 없는 모델 내가 만들어 사용하기 (2) | 요즘IT",desc:"K8sGPT에 로컬 AI 제공자를 만들어 적용하기 위해 Ollama의 create 명령으로 내가 필요한 모델을 적용하는 방법을 알아보고 있습니다. 앞서 1부 글에서는 모델을 내려받아 Ollama에 활용하기 좋게 변환하는 작업을 진행했습니다. 이번 2부 글에서는 본격적으로 Ollama create 명령을 활용해 모델을 추가하는 것부터 시작합니다. 꼭 K8sGPT를 활용하지 않더라도 Ollama 활용법에 관심이 있는 분들에게 도움이 될 것으로 기대합니다.",url:"https://yozm.wishket.com/magazine/detail/2752/",logo:"https://yozm.wishket.com/favicon.ico",preview:"https://yozm.wishket.com/media/news/2752/image5.png"}),l("p",null,[l("a",W,[n[106]||(n[106]=t("K8sGPT (")),o(i,{icon:"iconfont icon-github"}),n[107]||(n[107]=l("code",null,"k8sgpt-ai/k8sgpt",-1)),n[108]||(n[108]=t(")"))]),n[109]||(n[109]=t("는 쿠버네티스와 대규모언어모델(이하 LLM)을 결합해 만들어진 오픈소스 프로젝트입니다. 쿠버네티스 클러스터의 정보를 스캐닝하여 이슈를 발견하고, 그 이슈의 원인과 결과, 해결 방안을 알려 줍니다."))]),n[193]||(n[193]=l("p",null,"이 프로젝트는 처음에는 오픈소스 LLM과 함께 시작했지만, 이제 직접 접근하고 관리할 수 있는 AI 제공자를 구성해 활용하는 기능을 제공합니다. 따라서 데이터가 노출되는 것을 우려하거나 환경에 따라 또는 토큰을 크게 쓰고 싶은 경우, 로컬에서 LLM 환경을 만들고 이를 적용할 수 있습니다.",-1)),l("div",X,[n[110]||(n[110]=l("p",{class:"hint-container-title"},"참고 글",-1)),o(g,m(p({title:"로컬 LLM에서 K8sGPT로 쿠버네티스 AIOps 실행하기 (1,2) | 요즘IT",desc:"로컬 LLM에서 K8sGPT로 쿠버네티스 AIOps 실행하기",link:"/yozm.wishket.com/2515.md",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16)]),l("p",null,[n[112]||(n[112]=t("구성을 위해 필요한 것은 AI 모델의 실행과 해당 모델에게 요청할 API 주소, 두 가지입니다. 이때 권장하는 도구는 바로 ")),l("a",c,[o(i,{icon:"fas fa-globe"}),n[111]||(n[111]=t("Ollama"))]),n[113]||(n[113]=t("입니다. 이번 기고에서는 Ollama의 create 명령을 사용해 내가 필요한 모델을 활용하는 방법을 알아보겠습니다. 꼭 K8sGPT를 활용하지 않더라도 Ollama 활용법에 관심이 있는 분들에게 도움이 될 것으로 기대합니다. 작업 순서는 아래와 같습니다."))]),n[194]||(n[194]=l("blockquote",null,[l("ol",null,[l("li",null,"공개된 모델 내려받기"),l("li",null,"파이토치(PyTorch) 프레임워크를 사용한 모델을 GGUF 포맷으로 변환하기"),l("li",null,"기본 f16으로 생성된 GGUF 모델을 Q5_K_M으로 양자화"),l("li",null,"Ollama의 create 명령을 사용해 모델 추가하기"),l("li",null,"Ollama에 추가된 모델을 K8sGPT 분석에 사용하기")])],-1)),l("figure",null,[n[119]||(n[119]=l("img",{src:"https://yozm.wishket.com/media/news/2752/image5.png",alt:'Ollama 로고를 응용한 그림 <br/><출처: <VPIcon icon="fas fa-globe"/>Ollama 블로그>',tabindex:"0",loading:"lazy"},null,-1)),l("figcaption",null,[n[115]||(n[115]=t("Ollama 로고를 응용한 그림 ")),n[116]||(n[116]=l("br",null,null,-1)),n[117]||(n[117]=t("<출처: ")),l("a",_,[o(i,{icon:"fas fa-globe"}),n[114]||(n[114]=t("Ollama 블로그"))]),n[118]||(n[118]=t(">"))])]),n[195]||(n[195]=l("hr",null,null,-1)),n[196]||(n[196]=l("h2",{id:"_4단계-gguf-파일을-ollama에-불러-사용하기",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_4단계-gguf-파일을-ollama에-불러-사용하기"},[l("span",null,"4단계: GGUF 파일을 Ollama에 불러 사용하기")])],-1)),n[197]||(n[197]=l("p",null,"Ollama에서는 GGUF를 간단하게 불러 곧바로 사용할 수 있습니다. 하지만 더 잘 활용하고 싶은 이들을 위해 모델 파라미터를 변경하고 어느 정도 프롬프트 엔지니어링을 할 수 있는 옵션도 제공됩니다. 이번에는 이 옵션을 함께 활용해 보겠습니다.",-1)),n[198]||(n[198]=l("p",null,"우선 양자화된 GGUF 파일을 작업할 디렉터리를 만들어 옮깁니다. 해당 디렉터리의 이름은 현재 모델을 제공한 조직의 이름으로 했습니다.",-1)),n[199]||(n[199]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/1.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[200]||(n[200]=l("p",null,"작업할 디렉터리로 이동해 모델파일(modelfile)을 추가합니다. 모델파일은 Ollama에 모델을 추가하며 변경할 수 있는 다양한 설정을 제공합니다.",-1)),n[201]||(n[201]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/2.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[202]||(n[202]=l("h3",{id:"모델파일-modelfile",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#모델파일-modelfile"},[l("span",null,"모델파일(modelfile)")])],-1)),n[203]||(n[203]=l("p",null,"Ollama에서는 모델파일이라는 형식으로 모델을 추가합니다. 이때 세부 설정이나 프롬프트 엔지니어링에 가까운 항목을 추가할 수 있습니다.",-1)),l("p",null,[l("a",nn,[n[120]||(n[120]=t("공식 홈페이지 (")),o(i,{icon:"iconfont icon-github"}),n[121]||(n[121]=l("code",null,"ollama/ollama",-1)),n[122]||(n[122]=t(")"))]),n[123]||(n[123]=t("에서 설명하는 핵심 구문은 다음과 같습니다."))]),n[204]||(n[204]=u(`<div class="language-modelfile line-numbers-mode" data-highlighter="prismjs" data-ext="modelfile"><pre><code class="language-modelfile"><span class="line">FROM llama3</span>
<span class="line"># sets the temperature to 1 [higher is more creative, lower is more coherent]</span>
<span class="line"></span>
<span class="line">PARAMETER temperature 1</span>
<span class="line"># sets the context window size to 4096, this controls how many tokens the LLM can use as context to generate the next token</span>
<span class="line">PARAMETER num_ctx 4096</span>
<span class="line"></span>
<span class="line"># sets a custom system message to specify the behavior of the chat assistant</span>
<span class="line">SYSTEM You are Mario from super mario bros, acting as an assistant.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>FROM</code>에는 GGUF 형식 모델 등 추가하고자 하는 모델의 경로와 이름을 넣습니다.</p><p><code>PARAMETER</code>에서는 모델의 세부 설정을 할 수 있습니다.</p><ul><li><code>temperature</code>는 모델이 얼마나 창의적으로 답변할 것인지 결정하는 부분입니다. 0~1까지 설정할 수 있으며 높을 수록 창의적인 답변을 내놓습니다. 기본 값은 0.8입니다.</li><li><code>num_ctx</code>는 그 전의 답변을 얼마나 기억해 다음 답변에 반영할 것인지 결정하는 부분입니다. 값을 높게 줄수록 하드웨어 및 성능에 영향을 줍니다. 기본 값은 2048입니다.</li><li><code>num_predict</code>는 모델이 답변에 사용할 수 있는 토큰의 수를 의미합니다. 기본 값은 128입니다.</li></ul><p>이 구문에서는 그 외에도 다양한 파라미터를 제공합니다.</p>`,5)),l("p",null,[n[125]||(n[125]=l("code",null,"SYSTEM",-1)),n[126]||(n[126]=t("에서는 시스템의 역할을 부여해 모델의 답변을 어느 정도 유도할 수 있습니다. ")),l("a",ln,[o(i,{icon:"fa-brands fa-reddit"}),n[124]||(n[124]=t("예를 들면"))]),n[127]||(n[127]=t(" 다음과 같은 형태로도 넣을 수 있습니다."))]),n[205]||(n[205]=u(`<div class="language-modelfile line-numbers-mode" data-highlighter="prismjs" data-ext="modelfile"><pre><code class="language-modelfile"><span class="line">SYSTEM &quot;&quot;&quot;You are an assistant designed for question-answering tasks. Use the provided pieces of retrieved context to answer the questions accurately. Ensure that your answers are directly relevant to the questions and cite your sources when possible. Keep your responses concise and within three sentences.&quot;&quot;&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),l("p",null,[n[129]||(n[129]=t("그 외 ")),n[130]||(n[130]=l("code",null,"TEMPLATE",-1)),n[131]||(n[131]=t("은 Ollama에서 지정한 프롬프트를 위한 템플릿으로, 이는 각 모델마다 다를 수 있습니다. 따라서 모델 제공자의 지시를 따르거나 문법을 충분히 이해하고 고쳐야 합니다. 이에 대한 문법은 이 ")),l("a",tn,[o(i,{icon:"fas fa-globe"}),n[128]||(n[128]=t("문서"))]),n[132]||(n[132]=t("에서 제공하고 있습니다."))]),n[206]||(n[206]=l("p",null,[t("다시 실습으로 돌아가, 우리의 모델파일을 만들어 보겠습니다. 모델파일을 만드는 다양한 방법이 있지만, 무에서 유를 창조하는 것보다 조금 더 쉬운 방법으로 진행하겠습니다. 우선 현재 모델의 기준인 "),l("code",null,"llama3:8b"),t("를 내려받습니다.")],-1)),n[207]||(n[207]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/3.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[208]||(n[208]=l("p",null,[t("해당 모델에서 사용하고 있는 모델파일을 "),l("code",null,"ollama show <모델> --modelfile"),t(" 명령으로 추출합니다. 참고로 "),l("code",null,"--modelfile"),t("을 넣지 않으면 양자화 정보 등을 확인할 수 있습니다.")],-1)),n[209]||(n[209]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/4.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[210]||(n[210]=l("p",null,"기본 모델파일에서 확인된 정보를 바탕으로 만든 모델파일은 아래와 같습니다.",-1)),n[211]||(n[211]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/5.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[212]||(n[212]=l("p",null,[l("code",null,"FROM"),t(" 부분을 변경하고 "),l("code",null,"SYSTEM"),t("에 영어와 중국어로 시스템 메시지를 넣었습니다. 여기서 중국어를 추가하지 않으면 중국어에 대한 답변이 나오지 않거나 영어로 답변할 가능성이 높습니다.")],-1)),n[213]||(n[213]=l("p",null,[t("이제 세부 설정까지 모두 조정했으니 모델을 추가할 차례입니다. "),l("code",null,"ollama create"),t(" 명령을 사용해 GGUF로 생성한 모델을 추가합니다. 세부 설정은 새로 만든 모델파일에서 가지고 오도록 "),l("code",null,"-f"),t(" 옵션을 사용합니다.")],-1)),n[214]||(n[214]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/6.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[215]||(n[215]=l("p",null,"Ollama에 추가된 모델을 확인해 보겠습니다. 우리가 추가한 모델이 제대로 올라와 있습니다.",-1)),n[216]||(n[216]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/7.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[217]||(n[217]=l("hr",null,null,-1)),n[218]||(n[218]=l("h2",{id:"_5단계-ollama에-추가된-모델을-k8sgpt-분석에-사용하기",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_5단계-ollama에-추가된-모델을-k8sgpt-분석에-사용하기"},[l("span",null,"5단계: Ollama에 추가된 모델을 K8sGPT 분석에 사용하기")])],-1)),l("p",null,[n[133]||(n[133]=t("해당 모델을 활용해 K8sGPT에 질문해 봅시다. 간략한 활용을 위해 직접 만든 ")),o(i,{icon:"iconfont icon-shell"}),n[134]||(n[134]=l("code",null,"run_ollama_n_k8sgpt.sh",-1)),n[135]||(n[135]=t(" 명령으로 질문을 시작했습니다. K8sGPT에서 로컬 AI 모델을 활용하는 localai 기능은 앞서 작성한 글을 참고할 수 있습니다. (")),n[136]||(n[136]=l("code",null,"run_ollama_n_k8sgpt.sh",-1)),n[137]||(n[137]=t("에 대해서는 요청이 많으면 추후에 설명을 고려해 보겠습니다. 간단히 말하면, K8sGPT의 localai 기능을 반복해 사용하기 번거로워 스크립트로 처리했다고 볼 수 있습니다.)"))]),l("div",on,[n[138]||(n[138]=l("p",{class:"hint-container-title"},"참고 글",-1)),o(g,m(p({title:"로컬 LLM에서 K8sGPT로 쿠버네티스 AIOps 실행하기 (1,2) | 요즘IT",desc:"로컬 LLM에서 K8sGPT로 쿠버네티스 AIOps 실행하기",link:"/yozm.wishket.com/2515.md",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16)]),n[219]||(n[219]=l("figure",null,[l("img",{src:"https://yozm.wishket.com/media/news/2752/8.png",alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1)),e(" TODO: Google Lens "),n[220]||(n[220]=l("p",null,"원하는 대로 작동하는 것을 확인했습니다.",-1)),n[221]||(n[221]=l("hr",null,null,-1)),n[222]||(n[222]=l("h2",{id:"마치며",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#마치며"},[l("span",null,"마치며")])],-1)),n[223]||(n[223]=l("p",null,"지금까지 Ollama에 존재하지 않는 모델을 추가해 K8sGPT에서 사용하는 방법을 확인해 보았습니다.",-1)),n[224]||(n[224]=l("p",null,"결괏값에서 나타나듯 사실 대부분의 모델은 파운데이션 모델(대표적인 공개 모델은 llama, gemma, mistral 등)을 그대로 사용하는 것보다 좋은 결과(낮은 펄플렉시티 값)를 만들기 어렵습니다. 그럼에도 최근 K8sGPT처럼 특정 목적을 가진 sLM이 요구되는 만큼, 모델을 직접 붙여 활용해야 하는 시점이 곧 올 것으로 보입니다. 따라서 이와 연관된 기술들을 살펴보고 준비할 필요가 있습니다.",-1)),l("p",null,[n[141]||(n[141]=t("이번 글에서 소개한 내용을 바탕으로 KubeCon China 2024에서 ")),l("a",en,[o(i,{icon:"fas fa-globe"}),n[139]||(n[139]=t("발표"))]),n[142]||(n[142]=t("하기도 했습니다. 더 자세한 내용이 궁금한 분은 ")),l("a",sn,[o(i,{icon:"fa-brands fa-youtube"}),n[140]||(n[140]=t("발표 영상"))]),n[143]||(n[143]=t("을 살펴볼 수 있습니다."))]),o(b,{src:"youtube/xy7tJTIfyg8"})])}const mn=y(z,[["render",rn]]),pn=JSON.parse('{"path":"/yozm.wishket.com/2751.html","title":"Ollama에 없는 모델 내가 만들어 사용하기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Ollama에 없는 모델 내가 만들어 사용하기","description":"Article(s) > Ollama에 없는 모델 내가 만들어 사용하기","icon":"fa-brands fa-meta","category":["AI","Google","Llama","Article(s)"],"tag":["blog","yozm.wishket.com","ai","meta","llm","llama","ollama"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ollama에 없는 모델 내가 만들어 사용하기\\",\\"image\\":[\\"https://yozm.wishket.com/media/news/2751/image1.png\\",\\"https://ollama.com/blog/tool-support\\",\\"https://yozm.wishket.com/media/news/2751/1.png\\",\\"https://huggingface.co/FlagAlpha\\",\\"https://huggingface.co/FlagAlpha/Llama3-Chinese-8B-Instruct/tree/main\\",\\"https://yozm.wishket.com/media/news/2751/2.png\\",\\"https://huggingface.co/FlagAlpha/Llama3-Chinese-8B-Instruct\\",\\"https://yozm.wishket.com/media/news/2751/3.png\\",\\"https://yozm.wishket.com/media/news/2751/4.png\\",\\"https://huggingface.co/docs/safetensors/index\\",\\"https://github.com/ggerganov/ggml/blob/master/docs/gguf.md\\",\\"https://yozm.wishket.com/media/news/2751/5.png\\",\\"https://yozm.wishket.com/media/news/2751/6.png\\",\\"https://yozm.wishket.com/media/news/2751/7.png\\",\\"https://yozm.wishket.com/media/news/2751/8.png\\",\\"https://yozm.wishket.com/media/news/2751/9.png\\",\\"https://huggingface.co/second-state/Mistral-Nemo-Instruct-2407-GGUF/tree/main\\",\\"https://github.com/ggerganov/llama.cpp/pull/1684\\",\\"https://yozm.wishket.com/media/news/2751/10.png\\",\\"https://yozm.wishket.com/media/news/2751/11.png\\",\\"https://yozm.wishket.com/media/news/2751/12.png\\",\\"https://ollama.com/blog/tool-support\\",\\"https://yozm.wishket.com/media/news/2752/1.png\\",\\"https://yozm.wishket.com/media/news/2752/2.png\\",\\"https://yozm.wishket.com/media/news/2752/3.png\\",\\"https://yozm.wishket.com/media/news/2752/4.png\\",\\"https://yozm.wishket.com/media/news/2752/5.png\\",\\"https://yozm.wishket.com/media/news/2752/6.png\\",\\"https://yozm.wishket.com/media/news/2752/7.png\\",\\"https://yozm.wishket.com/media/news/2752/8.png\\"],\\"datePublished\\":\\"2024-09-06T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2751.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Ollama에 없는 모델 내가 만들어 사용하기"}],["meta",{"property":"og:description","content":"Article(s) > Ollama에 없는 모델 내가 만들어 사용하기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yozm.wishket.com/media/news/2751/image1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yozm.wishket.com/media/news/2751/image1.png"}],["meta",{"name":"twitter:image:alt","content":"Ollama에 없는 모델 내가 만들어 사용하기"}],["meta",{"property":"article:tag","content":"ollama"}],["meta",{"property":"article:tag","content":"llama"}],["meta",{"property":"article:tag","content":"llm"}],["meta",{"property":"article:tag","content":"meta"}],["meta",{"property":"article:tag","content":"ai"}],["meta",{"property":"article:tag","content":"yozm.wishket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-09-06T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Ollama에 없는 모델 내가 만들어 사용하기"},{"property":"og:description","content":"Ollama에 없는 모델 내가 만들어 사용하기"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2751.html"}]],"prev":"/ai/llama/articles/README.md","date":"2024-09-06T00:00:00.000Z","isOriginal":false,"cover":"https://yozm.wishket.com/media/news/2751/image1.png"},"git":{},"readingTime":{"minutes":3.89,"words":1168},"filePathRelative":"yozm.wishket.com/2751.md"}');export{mn as comp,pn as data};
