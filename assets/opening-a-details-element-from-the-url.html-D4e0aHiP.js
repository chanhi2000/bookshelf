import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as t,f as n,b as r,a as u,t as f,n as p,g as c,e as a,r as s,o as b}from"./app-BVguHYKu.js";const k={},y={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},w={href:"https://es-d-4410775920250828-0198e89f-8650-7d35-8384-959dbdbaf2e1.codepen.dev/#faq-13-content",target:"_blank",rel:"noopener noreferrer"},R={href:"https://blog.codepen.io/docs/pens/blocks/all-blocks/#babel-details-default-config-code",target:"_blank",rel:"noopener noreferrer"};function D(o,e){const i=s("VPCard"),d=s("SiteInfo"),m=s("CodePen"),l=s("VPIcon");return b(),g("div",null,[t("h1",y,[t("a",v,[t("span",null,f(o.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),n(i,p(c({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e[6]||(e[6]=t("nav",{class:"table-of-contents"},[t("ul")],-1)),e[7]||(e[7]=t("hr",null,null,-1)),n(d,{name:"Opening a Details Element from the URL",desc:"If the #hash in the URL matches the ID of an element *inside* a  element, it'll open. No other fancy code required.",url:"https://frontendmasters.com/blog/opening-a-details-element-from-the-url/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/7019"}),e[8]||(e[8]=r(`<p>Say you‚Äôve got a page with a bunch of <code>&lt;details&gt;</code> elements on it.</p><p>Your goal is to be able to send someone to that page with <em>one particular details element open.</em></p><p>I was doing just this recently, and my first thought was to do it server-side. If the URL was like <code>website.com/#faq-1</code> I‚Äôd see if <code>faq-1</code> matches an ID of the details element and I‚Äôd put the open attribute on it like <code>&lt;details id=&quot;faq-1&quot; open&gt;</code>. But no, you don‚Äôt get to have the <code>#hash</code> as part of the URL server side (for whatever reason ü§∑‚Äç‚ôÄÔ∏è).</p><p>Then I started writing JavaScript to do it, where you definitely can access the hash (<code>window.location.hash</code>). I‚Äôd just <code>querySelector</code> for the hash and if I found a matching details element, I‚Äôd open it up.</p><p>Then I was reminded you don‚Äôt need to do this at all. What you need is (drumroll)‚Ä¶ HTML.</p><p>The trick is hash-linking to an element <em>inside</em> the <code>&lt;details&gt;</code>. So like:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span>What was Rosebud in Citizen Kane?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>faq-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>A sled.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, if you hash-link to <code>#faq-1</code>, the browser will know that it <em>has</em> to open that <code>&lt;details&gt;</code> in order for it to be seen, so it does. You don‚Äôt normally <em>need</em> a <code>&lt;div&gt;</code> wrapper or anything inside the <code>details</code> element, but we‚Äôre doing it here as it‚Äôs obviously handy.</p><p>Here‚Äôs a demo of a page that is set up in this way:</p>`,9)),n(m,{link:"https://codepen.io/editor/team/CodePenTemplates/pen/0198e89f-8650-7d35-8384-959dbdbaf2e1",title:"Open Details upon Hash Linktitle","default-tab":["css","result"],theme:o.$isDarkmode?"dark":"light"},null,8,["theme"]),t("p",null,[e[1]||(e[1]=a("It‚Äôs probably more interesting to just ")),t("a",w,[n(l,{icon:"fas fa-globe"}),e[0]||(e[0]=a("visit this hash-link URL"))]),e[2]||(e[2]=a(" and see it open right up and work."))]),t("p",null,[e[4]||(e[4]=a("This came up for me while working on ")),t("a",R,[n(l,{icon:"fa-brands fa-codepen"}),e[3]||(e[3]=a("this documentation page"))]),e[5]||(e[5]=a(" where I wanted to be able to link to specific things that were otherwise ‚Äúburied‚Äù in details elements."))]),e[9]||(e[9]=r(`<p>As a bit of an enhancement, you might want to consider CSS like this:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">:target</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">scroll-margin-block-start</span><span class="token punctuation">:</span> 4rem<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That will apply some styling to the element that matches the hash in the URL, as well as push it away from the top edge of the browser window a little bit. In this case, it helps make sure the FAQ question is actually visible, not just the answer.</p>`,3)),u(" TODO: add ARTICLE CARD "),n(i,p(c({title:"Opening a Details Element from the URL",desc:"If the #hash in the URL matches the ID of an element *inside* a  element, it'll open. No other fancy code required.",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/opening-a-details-element-from-the-url.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const U=h(k,[["render",D]]),L=JSON.parse('{"path":"/frontendmasters.com/opening-a-details-element-from-the-url.html","title":"Opening a Details Element from the URL","lang":"en-US","frontmatter":{"lang":"en-US","title":"Opening a Details Element from the URL","description":"Article(s) > Opening a Details Element from the URL","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","frontendmasters.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Opening a Details Element from the URL\\",\\"image\\":[\\"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/7019\\"],\\"datePublished\\":\\"2025-08-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/opening-a-details-element-from-the-url.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Opening a Details Element from the URL"}],["meta",{"property":"og:description","content":"Article(s) > Opening a Details Element from the URL"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/7019"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/7019"}],["meta",{"name":"twitter:image:alt","content":"Opening a Details Element from the URL"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-08-26T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Opening a Details Element from the URL"},{"property":"og:description","content":"Opening a Details Element from the URL"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/opening-a-details-element-from-the-url.html"}]],"prev":"/programming/css/articles/README.md","date":"2025-08-26T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/7019"},"git":{},"readingTime":{"minutes":2.21,"words":663},"filePathRelative":"frontendmasters.com/opening-a-details-element-from-the-url.md","copyright":{"author":"Chris Coyier"}}');export{U as comp,L as data};
