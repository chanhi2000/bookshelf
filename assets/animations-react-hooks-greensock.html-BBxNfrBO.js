import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as n,f as t,b as l,a as f,t as q,n as r,g as k,w as e,e as s,r as c,o as y}from"./app-BVguHYKu.js";const w="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/banner.png",x="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/finished-sample-animated-loader.webp",S="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-logo-1.png",A="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/static-loader-svg.png",j="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/blue-circle-animation-1.webp",I="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/sped-up-blue-circle-animation.gif",R="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/blue-yellow-circle-animation.webp",M="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/animated-loader-completed.webp",d="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-animation-goal.webp",F="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/rocket-animation-1.gif",G="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-wordmark-no-stroke.png",W="/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/animated-logrocket-logo-letter-paths.webp",E={},Y={id:"frontmatter-title-관련",tabindex:"-1"},U={class:"header-anchor",href:"#frontmatter-title-관련"},L={class:"table-of-contents"},V={href:"https://reactjs.org/docs/getting-started.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://greensock.com/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://codesandbox.io/s/greensock-set-up-forked-zp5de",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://greensock.com/tweenlite/",target:"_blank",rel:"noopener noreferrer"},O={href:"https://codesandbox.io/s/google-style-loader-forked-1ykqg?file=/src/loader.jsx",target:"_blank",rel:"noopener noreferrer"},H={href:"https://codesandbox.io/s/starter-logrocket-animation-forked-pvuhs?file=/src/index.js",target:"_blank",rel:"noopener noreferrer"},N={href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",target:"_blank",rel:"noopener noreferrer"},C={href:"https://ozon2.csb.app/",target:"_blank",rel:"noopener noreferrer"};function B(m,a){const u=c("VPCard"),o=c("router-link"),g=c("SiteInfo"),p=c("VPIcon"),i=c("SandPack"),h=c("RouteLink");return y(),b("div",null,[n("h1",Y,[n("a",U,[n("span",null,q(m.$frontmatter.title)+" 관련",1)])]),t(u,r(k({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",L,[n("ul",null,[n("li",null,[t(o,{to:"#what-do-i-need-to-know"},{default:e(()=>a[0]||(a[0]=[s("What do I need to know?")])),_:1,__:[0]})]),n("li",null,[t(o,{to:"#what-will-we-be-creating"},{default:e(()=>a[1]||(a[1]=[s("What will we be creating?")])),_:1,__:[1]})]),n("li",null,[t(o,{to:"#what-is-the-greensock-animating-platform"},{default:e(()=>a[2]||(a[2]=[s("What is the GreenSock Animating Platform?")])),_:1,__:[2]})]),n("li",null,[t(o,{to:"#animating-a-google-style-loader"},{default:e(()=>a[3]||(a[3]=[s("Animating a Google-style loader")])),_:1,__:[3]}),n("ul",null,[n("li",null,[t(o,{to:"#rendering-the-loader-graphic"},{default:e(()=>a[4]||(a[4]=[s("Rendering the loader graphic")])),_:1,__:[4]})])])]),n("li",null,[t(o,{to:"#referencing-the-animated-elements"},{default:e(()=>a[5]||(a[5]=[s("Referencing the animated elements")])),_:1,__:[5]})]),n("li",null,[t(o,{to:"#bounce-animations-with-greensock-google-style-loader"},{default:e(()=>a[6]||(a[6]=[s("Bounce animations with GreenSock: Google-style loader")])),_:1,__:[6]})]),n("li",null,[t(o,{to:"#fill-in-animations-with-greensock-logrocket-logo"},{default:e(()=>a[7]||(a[7]=[s("Fill-in animations with GreenSock: LogRocket logo")])),_:1,__:[7]}),n("ul",null,[n("li",null,[t(o,{to:"#sequential-animation-with-timelinemax"},{default:e(()=>a[8]||(a[8]=[s("Sequential animation with TimelineMax")])),_:1,__:[8]})]),n("li",null,[t(o,{to:"#what-is-stroke-dasharray"},{default:e(()=>a[9]||(a[9]=[s("What is stroke-dasharray")])),_:1,__:[9]})]),n("li",null,[t(o,{to:"#what-is-stroke-dashoffset"},{default:e(()=>a[10]||(a[10]=[s("What is stroke-dashoffset?")])),_:1,__:[10]})])])]),n("li",null,[t(o,{to:"#conclusion"},{default:e(()=>a[11]||(a[11]=[s("Conclusion")])),_:1,__:[11]})])])]),a[62]||(a[62]=n("hr",null,null,-1)),t(g,{name:"Animations using React Hooks and GreenSock",desc:"Learn how to implement powerful animations using React Hooks and GreenSock in this tutorial, which covers basic and advanced concepts.",url:"https://blog.logrocket.com/animations-react-hooks-greensock",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/animations-react-hooks-greensock/banner.png"}),a[63]||(a[63]=l('<div class="hint-container note"><p class="hint-container-title">Editor’s note</p><p>This post was updated 13 October 2021 to removed the deprecated TweenMax method of animating and further update the tutorial. We also changed some language to reflect the current way of referencing GSAP.</p></div><figure><img src="'+w+'" alt="Animations using React Hooks and GreenSock" tabindex="0" loading="lazy"><figcaption>Animations using React Hooks and GreenSock</figcaption></figure><p>Delving into the world of animations on the web can either be a great journey or a tiresome one. My goal is to make it a great journey, while also using the power of React Hooks to further entice your learning experience.</p><hr><h2 id="what-do-i-need-to-know" tabindex="-1"><a class="header-anchor" href="#what-do-i-need-to-know"><span>What do I need to know?</span></a></h2>',5)),n("p",null,[a[13]||(a[13]=s("This article should not be treated as a primer on JavaScript or React. I will explain each of the concepts we use, but you should have at least a little knowledge of both. You can ")),n("a",V,[t(p,{icon:"fa-brands fa-react"}),a[12]||(a[12]=s("check out the React docs"))]),a[14]||(a[14]=s(" if you need to get started."))]),a[64]||(a[64]=l('<hr><h2 id="what-will-we-be-creating" tabindex="-1"><a class="header-anchor" href="#what-will-we-be-creating"><span>What will we be creating?</span></a></h2><p>We are going to create two separate animations with an increasing level of difficulty. Our first animation will be a simple loader, similar to Google’s:</p><figure><img src="'+x+'" alt="Our finished sample animated loader " tabindex="0" loading="lazy"><figcaption>Our finished sample animated loader </figcaption></figure><p>Our second will be animating the LogRocket logo to make it even better!</p><figure><img src="'+S+'" alt="The LogRocket logo, pre-animation" tabindex="0" loading="lazy"><figcaption>The LogRocket logo, pre-animation</figcaption></figure><hr><h2 id="what-is-the-greensock-animating-platform" tabindex="-1"><a class="header-anchor" href="#what-is-the-greensock-animating-platform"><span>What is the GreenSock Animating Platform?</span></a></h2>',8)),n("p",null,[a[16]||(a[16]=s("The ")),n("a",z,[t(p,{icon:"fas fa-globe"}),a[15]||(a[15]=s("GreenSock Animating Platform (GSAP)"))]),a[17]||(a[17]=s(" is a JavaScript library that allows us to create high-quality, high-performance animations on the web. It contains a toolset that developers can use to create superb animations quickly."))]),a[65]||(a[65]=n("p",null,"We can use GSAP to create SVG and CSS animations, and we can also use it to create immersive WebGL animations. We can also create Canvas animations using GreenSock. Most popular animation libraries like Three.js use GreenSock to animate their objects. Furthermore, GSAP can be used in other animation software like Adobe Animate and Easel JS.",-1)),a[66]||(a[66]=n("hr",null,null,-1)),a[67]||(a[67]=n("h2",{id:"animating-a-google-style-loader",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#animating-a-google-style-loader"},[n("span",null,"Animating a Google-style loader")])],-1)),n("p",null,[a[19]||(a[19]=s("Setting up is quick and easy: I have ")),n("a",J,[t(p,{icon:"iconfont icon-codesandbox"}),a[18]||(a[18]=s("created a CodeSandbox"))]),a[20]||(a[20]=s(" that has the GreenSock npm module and React, so you can fork it and follow along."))]),t(i,{rtl:"",theme:"dark",title:"philipszdavido%20%2F%20Greensock%20Set%20up%20(forked)%20",template:"react",files:"eJxFj7EOwjAMRH/lyAQLFYxQKiEWJgZYs4TGhaDGiZIUISH+HReQ2M6+O/n5qaptjPNbVivlfAyp4EimLehS8NAqjYNWa82au4Hb4gJDGtMZnpqBRGVIjOmogdq6O9re5HwwnjZaSVKr5muKfV00e+r7gF2wdDJsz+FRV7L9J5bNqRihIOuK4wtKQCZCDp7gzcW1uJoYiSfSW/56dSV3P3omoK+RlR6fXyx1ZujLSCyOer0BaplN2Q==",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrrgUAAXUA+Q=="}),a[68]||(a[68]=l(`<p>Now, let’s start creating our <code>Loader</code> component.</p><h3 id="rendering-the-loader-graphic" tabindex="-1"><a class="header-anchor" href="#rendering-the-loader-graphic"><span>Rendering the loader graphic</span></a></h3><p>The first thing we need for our loader is our graphic, which I have created above. The SVG is a basic one with a little markup.</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 150 33.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>150<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{circle}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#527abd<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{circle}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>55.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#de4431<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{circle}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>94.3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#f4b61a<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{circle}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>133.4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#009e52<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, in our source code, we can create a <code>Loader</code> component, which is where the magic will happen. Inside the <code>Loader</code> component, we want to render our graphic.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="loader.jsx"><span>loader.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Loader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 150 33.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>150<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#527abd<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>55.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#de4431<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>94.3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#f4b61a<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>133.4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#009e52<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Loader<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>You should now be seeing:</p><figure><img src="`+A+`" alt="Our loader, static, in SVG form" tabindex="0" loading="lazy"><figcaption>Our loader, static, in SVG form</figcaption></figure><p>Fantastic! We now have our graphic in place, so let’s go animate it.</p><hr><h2 id="referencing-the-animated-elements" tabindex="-1"><a class="header-anchor" href="#referencing-the-animated-elements"><span>Referencing the animated elements</span></a></h2><p>When animating, the first thing you need is a reference to the elements you plan on animating. To get a reference to our elements, we can use the <code>useRef</code> Hook. <code>useRef</code> returns a ref object that has a <code>current</code> property, which is what we’ll target with our animations.</p><p>Creating a <code>useRef</code> is straightforward:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> myElement <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>So, for our case, we have four elements that we need to target. We will create four refs, like so:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> blue <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> red <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> yellow <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> green <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We then can add these refs to our SVG:</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 150 33.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>150<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{blue}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#527abd<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{red}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>55.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#de4431<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{yellow}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>94.3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#f4b61a<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{green}</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>133.4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#009e52<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Our component now looks like this:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="loader.jsx"><span>loader.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">Loader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> blue <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> red <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> yellow <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> green <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 150 33.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>150<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>blue<span class="token punctuation">}</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#527abd<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>red<span class="token punctuation">}</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>55.2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#de4431<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yellow<span class="token punctuation">}</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>94.3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#f4b61a<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>green<span class="token punctuation">}</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>133.4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>16.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#009e52<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Loader<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>With everything in place, we can start using GreenSock.</p><hr><h2 id="bounce-animations-with-greensock-google-style-loader" tabindex="-1"><a class="header-anchor" href="#bounce-animations-with-greensock-google-style-loader"><span>Bounce animations with GreenSock: Google-style loader</span></a></h2><p>First, we import <code>gsap</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> gsap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;gsap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,25)),n("p",null,[a[22]||(a[22]=n("code",null,"gsap",-1)),a[23]||(a[23]=s(" is a fully-featured module from GreenSock that will aid us in creating our animations. It has many methods, and we will make use of a couple! GreenSock also offers us ")),n("a",Q,[t(p,{icon:"fas fa-globe"}),a[21]||(a[21]=s("TweenLite"))]),a[24]||(a[24]=s(", which is a less featured module but is more lightweight."))]),n("p",null,[a[26]||(a[26]=s("For our animation, we want it to take place when our component mounts. In the traditional class-based component, we would use ")),a[27]||(a[27]=n("code",null,"componentDidMount",-1)),a[28]||(a[28]=s(", but for Hooks we will use ")),a[29]||(a[29]=n("code",null,"useEffect",-1)),a[30]||(a[30]=s(", which behaves the same with some small differences. To get a true deep dive into Hooks, you should check out this ")),t(h,{to:"/blog.logrocket.com/useeffect-react-hook-complete-guide.html"},{default:e(()=>a[25]||(a[25]=[n("strong",null,"great article",-1)])),_:1,__:[25]}),a[31]||(a[31]=s("."))]),a[69]||(a[69]=l(`<p>So when our component mounts, we will use <code>gsap</code>’s <code>fromTo</code> method to animate our circles. The <code>fromTo</code> method is passed four arguments:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">fromTo</span><span class="token punctuation">(</span><span class="token function">element</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Let’s focus on getting just the <code>blue</code> circle to move up and down. To do this we will target the <code>y</code> property of our animation.</p><p>So our code is as follows:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>blue<span class="token punctuation">.</span>current<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We first target our element, then we set a duration of <code>5s</code>. We start from <code>y</code> position <code>18</code> and finish on <code>-18</code>. This looks like the following:</p><figure><img src="`+j+`" alt="Our blue circle animation" tabindex="0" loading="lazy"><figcaption>Our blue circle animation</figcaption></figure><p>Ok, so we have made a little progress, but it still has some issues — it is far too slow, and we also need the animation to be infinite.</p><p>To achieve this, all we need to do is add the <code>yoyo</code> and <code>repeat</code> properties to our <code>to</code> object.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>blue<span class="token punctuation">.</span>current<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">yoyo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>yoyo</code> means our animation will yo-yo between the start and finish positions. Setting <code>repeat</code> to <code>-1</code> will make our animation infinite. We also set our duration to half a second so it will be much faster.</p><p>Now, with our new properties in place, we have:</p><figure><img src="`+I+`" alt="Our blue circle animation, sped up" tabindex="0" loading="lazy"><figcaption>Our blue circle animation, sped up</figcaption></figure><p>As you can see from the completed animation at the top of this article, the yellow circle behaves the same as the blue circle. With this in mind, we can pass an array of elements (our <code>blue</code> and <code>yellow</code> refs) to our <code>fromTo</code> method.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token punctuation">[</span>blue<span class="token punctuation">.</span>current<span class="token punctuation">,</span> yellow<span class="token punctuation">.</span>current<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">yoyo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So now we have:</p><figure><img src="`+R+`" alt="Coordinating the yellow and blue circle animations" tabindex="0" loading="lazy"><figcaption>Coordinating the yellow and blue circle animations</figcaption></figure><p>Success! I think you can now start seeing how powerful GreenSock is. To complete our animation, we just need to animate the red and green balls in the opposite way, like so:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token punctuation">[</span>red<span class="token punctuation">.</span>current<span class="token punctuation">,</span> green<span class="token punctuation">.</span>current<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">yoyo</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This code is almost the exact same as our code above except this time, we start on <code>y:-18</code> and finish on <code>y:18</code>.</p><p>Our final animation is now complete, and here’s how it should look:</p><figure><img src="`+M+'" alt="Our completed animated loader" tabindex="0" loading="lazy"><figcaption>Our completed animated loader</figcaption></figure>',22)),n("p",null,[a[33]||(a[33]=s("You can find the complete code ")),n("a",O,[t(p,{icon:"iconfont icon-codesandbox"}),a[32]||(a[32]=s("here"))]),a[34]||(a[34]=s("."))]),t(i,{rtl:"",theme:"dark",title:"philipszdavido%20%2F%20Google%20Style%20Loader%20(forked)%20",template:"react",files:"eJyNU01vm0AQ/Suj7cWRKIYYXMeNI7VSb1UPUW8hBwyDTbXeRQv4Q4j/3ll2MQkRck7MF2/em9lp2PxHUbj/SrZm+aGQqoJnjJMKMiUPEDGlnYh9j0QkbP63jFNUfYE7551va7JaJFUuBRDq7A6aSAAorGolYKZtgMc0P0LC47L8Ex9wEzGqjNiTSVLaws9t5HFO9Z19Rw1a3QPPHY8Us7jmle5EGeYwy4TEnEdqHGigLvEZM0d/f2UZksT2o0j7UwO7Mi6GAu1ZgYkU5XUGGyCNmycj02S2vEaKm24zUXOuefdZhel08oKcy9N0fqcQxce0LriKmr0hBJ0KV2v4K+30AV40QzeplUJBgzFNe//V6cs8N7zaDVzW4K+gfR/56q/of3mRa6hUjQ6pKzCudAJoUbrO0J8gQsMYeHTiPkGDmo55aBpD67eU3tNoHXh57Sc2epTlcQfHHE8/5ZmepAce+KEHi4V7HzE45Wm1p7C/8sjbY77bV9oNyR0ebpKrhCMBZ5tGz7iFRGP5S9env5KLsZdkqyGc5ZyT9yW8/xZvUwr0734ESLOyeGHYcbqBl2IQLHRgAs+s3UI+BO7iNmQWbJd+PA3ZbbAXTZMLbkN63gOGWs1w7bSI4dq7XY3O3Zyevvj2P3rGcB0=",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrVkpJLUjNS0nNS85MLVayqlZKL04sULJSMtaz0DNQqq0FAMUHCro="}),a[70]||(a[70]=n("hr",null,null,-1)),a[71]||(a[71]=n("h2",{id:"fill-in-animations-with-greensock-logrocket-logo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fill-in-animations-with-greensock-logrocket-logo"},[n("span",null,"Fill-in animations with GreenSock: LogRocket logo")])],-1)),a[72]||(a[72]=n("p",null,"One animation down, one to go!",-1)),n("p",null,[a[36]||(a[36]=s("I have created an ")),a[37]||(a[37]=n("code",null,"SVG",-1)),a[38]||(a[38]=s(" for the LogRocket icon, and it is a big one, so I have included it in the starter CodeSandbox, which you can ")),n("a",H,[t(p,{icon:"iconfont icon-codesandbox"}),a[35]||(a[35]=s("check out here."))])]),t(i,{rtl:"",theme:"dark",title:"philipszdavido%20%2F%20starter%20logrocket%20animation%20(forked)%20",template:"react",files:"",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrVkpJLUjNS0nNS85MLVayqlZKL04sULJSMtaz0DNQqq0FAMUHCro="}),a[73]||(a[73]=l('<p>The final animation will look like this:</p><figure><img src="'+d+`" alt="The goal animation for our LogRocket logo example" tabindex="0" loading="lazy"><figcaption>The goal animation for our LogRocket logo example</figcaption></figure><p>As you can see from above, there is more to this than our first animation, so let’s get cracking!</p><p>The first part we are going to focus on is the rocket, which animates upward from the bottom. We have a <code>g</code> element with the <code>id</code> of <code>rocket</code>. This is the element we are going to target with GreenSock.</p><h3 id="sequential-animation-with-timelinemax" tabindex="-1"><a class="header-anchor" href="#sequential-animation-with-timelinemax"><span>Sequential animation with <code>TimelineMax</code></span></a></h3><p>Previously, we would have used <code>gsap</code> to do this, but now we will use <code>TimelineMax</code> because we want each of our elements to animate sequentially, not all at once.</p><p>We import <code>TimelineMax</code> like so:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> TimelineMax <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;gsap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We first need to create a <code>Timeline</code>, and we do this by creating an instance of the <code>TimelineMax</code> class:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> tl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimelineMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Similarly to <code>TweenMax</code>, our instance (<code>tl</code>) also has a <code>fromTo</code> method that we will use:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">tl<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span><span class="token string">&quot;#rocket&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This is very similar to our first animation except here, instead of using a <code>ref</code>, we are just passing the ID — either way is fine.</p><p>Now our rocket should be coming up from the bottom like so:</p><figure><img src="`+F+'" alt="Isolated rocket animation" tabindex="0" loading="lazy"><figcaption>Isolated rocket animation</figcaption></figure><p>The next part is to <code>draw</code> our letters. All of our letter <code>path</code>s are wrapped in a <code>g</code> tag with the <code>id</code> <code>letters</code>, so they are easy for us to target.</p>',16)),n("p",null,[a[40]||(a[40]=s("To get the drawing effect, we need to use a couple of ")),a[41]||(a[41]=n("code",null,"attributes",-1)),a[42]||(a[42]=s(", which are ")),a[43]||(a[43]=n("code",null,"stroke-dasharray",-1)),a[44]||(a[44]=s(" and ")),a[45]||(a[45]=n("code",null,"stroke-dashoffset",-1)),a[46]||(a[46]=s(". These are quite complicated, and to read in more detail, I recommend ")),n("a",N,[t(p,{icon:"fa-brands fa-firefox"}),a[39]||(a[39]=s("heading here"))]),a[47]||(a[47]=s("."))]),a[74]||(a[74]=l(`<h3 id="what-is-stroke-dasharray" tabindex="-1"><a class="header-anchor" href="#what-is-stroke-dasharray"><span>What is <code>stroke-dasharray</code></span></a></h3><p><code>stroke-dasharray</code> is both an SVG and a CSS property used to render a line with a dashed pattern. It is used to specify the lengths of the dashes and gaps in a line. <code>stroke-dasharray</code> is used in SVG elements like <code>circle</code> and <code>line</code>.</p><p>Example:</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span></span>
<span class="line">  <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke-dasharray</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1, 3<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will stroke the shape of the circle with a dashed line. The first number is the length of the dash, and the second number is the length of the gap.</p><h3 id="what-is-stroke-dashoffset" tabindex="-1"><a class="header-anchor" href="#what-is-stroke-dashoffset"><span>What is <code>stroke-dashoffset</code>?</span></a></h3><p><code>stroke-dashoffset</code> is used to specify the distance into the dash pattern to start the dash. It is used in combination with <code>stroke-dasharray</code> to create a dashed line.</p><p>Example:</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span></span>
<span class="line">  <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke-dasharray</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1, 3<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">stroke-dashoffset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will gives the stroke pattern a length of <code>1</code>.</p><p>For our case, we use these properties to break our paths into little pieces so we can animate them back together, which is what gives us our drawing effect. My rule of thumb here is setting the value of the two attributes to be the same, and once our text disappears, we are good to go. <code>100</code> is the value we will go with.</p>`,11)),n("p",null,[a[48]||(a[48]=s("In our ")),t(p,{icon:"fa-brands fa-css3-alt"}),a[49]||(a[49]=n("code",null,"styles.css",-1)),a[50]||(a[50]=s(" file, we will set these two properties on our paths. As a side note, a ")),a[51]||(a[51]=n("code",null,"stroke",-1)),a[52]||(a[52]=s(" must be present on the ")),a[53]||(a[53]=n("code",null,"path",-1)),a[54]||(a[54]=s(" for this to work (this includes a ")),a[55]||(a[55]=n("code",null,"path",-1)),a[56]||(a[56]=s(" inheriting a ")),a[57]||(a[57]=n("code",null,"stroke",-1)),a[58]||(a[58]=s(" from a parent)."))]),a[75]||(a[75]=l(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="styles.css"><span>styles.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">svg #letters path</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>So now you are seeing the following:</p><figure><img src="`+G+`" alt="The LogRocket wordmark without the stroke" tabindex="0" loading="lazy"><figcaption>The LogRocket wordmark without the stroke</figcaption></figure><p>This is the same as what we had, but the letters are not as thick — that is because we have removed the <code>stroke</code>, but it still has a <code>fill</code>. The next step is setting the <code>fill-opacity</code> to <code>0</code>.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="styles.css"><span>styles.css</span></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">svg #letters path</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">fill-opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>With this in place, our letters have disappeared, so now we focus on getting them back.<br> All we need to do is animate our <code>strokeDashoffset</code> back to <code>0</code>. We will use our <code>tl</code> instance and the <code>to</code> method.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">tl<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span><span class="token string">&quot;#letters path&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">strokeDashoffset</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As you can see, we use our <code>letters</code> selector and then target each <code>path</code> within that group. With that in place, our letters should now start drawing:</p><figure><img src="`+W+`" alt="The LogRocket logo&#39;s letter paths are drawn" tabindex="0" loading="lazy"><figcaption>The LogRocket logo&#39;s letter paths are drawn</figcaption></figure><p>The final piece of the puzzle is to animate our <code>fill-opacity</code> to <code>1</code>. Once more, we use our <code>tl</code> instance and the <code>to</code> method.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">tl<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span><span class="token string">&quot;#letters path&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;fill-opacity&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And that’s that! Our LogRocket animation is now complete — not too bad, eh?</p><figure><img src="`+d+'" alt="The goal animation for our LogRocket logo example" tabindex="0" loading="lazy"><figcaption>The goal animation for our LogRocket logo example</figcaption></figure><p>You can see the power of <code>TimelineMax</code> here. Normally, to run animations sequentially, you would have to use delays, but <code>TimelineMax</code> takes care of this for us.</p>',14)),n("p",null,[a[60]||(a[60]=s("The ")),n("a",C,[t(p,{icon:"fas fa-globe"}),a[59]||(a[59]=s("complete CodeSandbox"))]),a[61]||(a[61]=s(" can be found below."))]),t(i,{rtl:"",theme:"dark",title:"philipszdavido%20%2F%20complete%20logrocket%20animation%20(forked)%20",template:"react",files:"",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrVkpJLUjNS0nNS85MLVayqlZKL04sULJSMtaz0DNQqq0FAMUHCro="}),a[76]||(a[76]=n("hr",null,null,-1)),a[77]||(a[77]=n("h2",{id:"conclusion",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#conclusion"},[n("span",null,"Conclusion")])],-1)),a[78]||(a[78]=n("p",null,"So that’s all, folks. This was definitely more of an introduction to GreenSock than it was to React Hooks, but I hope you learned something about both. The guys at GreenSock have put in a massive amount of work for their library, so be sure to go even further with it to create great animations.",-1)),f(" TODO: add ARTICLE CARD "),t(u,r(k({title:"Animations using React Hooks and GreenSock",desc:"Learn how to implement powerful animations using React Hooks and GreenSock in this tutorial, which covers basic and advanced concepts.",link:"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/animations-react-hooks-greensock.html",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16)])}const T=v(E,[["render",B]]),K=JSON.parse('{"path":"/blog.logrocket.com/animations-react-hooks-greensock.html","title":"Animations using React Hooks and GreenSock","lang":"en-US","frontmatter":{"lang":"en-US","title":"Animations using React Hooks and GreenSock","description":"Article(s) > Animations using React Hooks and GreenSock","icon":"fa-brands fa-react","category":["Node.js","React.js","Article(s)"],"tag":["blog","blog.logrocket.com","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Animations using React Hooks and GreenSock\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/banner.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/finished-sample-animated-loader.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-logo-1.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/static-loader-svg.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/blue-circle-animation-1.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/sped-up-blue-circle-animation.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/blue-yellow-circle-animation.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/animated-loader-completed.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-animation-goal.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/rocket-animation-1.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-wordmark-no-stroke.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/animated-logrocket-logo-letter-paths.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/logrocket-animation-goal.webp\\"],\\"datePublished\\":\\"2021-10-13T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paul Ryan\\",\\"url\\":\\"https://blog.logrocket.com/author/paulryan/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/animations-react-hooks-greensock.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Animations using React Hooks and GreenSock"}],["meta",{"property":"og:description","content":"Article(s) > Animations using React Hooks and GreenSock"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/animations-react-hooks-greensock/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Animations using React Hooks and GreenSock"}],["meta",{"property":"article:author","content":"Paul Ryan"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2021-10-13T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Animations using React Hooks and GreenSock"},{"property":"og:description","content":"Animations using React Hooks and GreenSock"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/animations-react-hooks-greensock.html"}]],"prev":"/programming/js-react/articles/README.md","date":"2021-10-13T00:00:00.000Z","isOriginal":false,"author":[{"name":"Paul Ryan","url":"https://blog.logrocket.com/author/paulryan/"}],"cover":"/assets/image/blog.logrocket.com/animations-react-hooks-greensock/banner.png"},"git":{},"readingTime":{"minutes":20.88,"words":6263},"filePathRelative":"blog.logrocket.com/animations-react-hooks-greensock.md","copyright":{"author":"Paul Ryan"}}');export{T as comp,K as data};
