import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as w,d as s,f as i,b as o,a as I,t as y,n as g,g as c,w as a,e,r as d,o as h}from"./app-BVguHYKu.js";const x={},C={id:"frontmatter-title-관련",tabindex:"-1"},A={class:"header-anchor",href:"#frontmatter-title-관련"},L={class:"table-of-contents"},G={class:"hint-container note"},q={href:"https://apidog.com/kr/blog/claude-md-kr/",target:"_blank",rel:"noopener noreferrer"},E={id:"gemini-md로-프로젝트별-설정하기",tabindex:"-1"},z={class:"header-anchor",href:"#gemini-md로-프로젝트별-설정하기"},N={id:"settings-json-제미나이-cli-설정-파일",tabindex:"-1"},T={class:"header-anchor",href:"#settings-json-제미나이-cli-설정-파일"},j={href:"https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/configuration.md#available-settings-in-settingsjson",target:"_blank",rel:"noopener noreferrer"},M={id:"env-제미나이-cli-환경-파일",tabindex:"-1"},P={class:"header-anchor",href:"#env-제미나이-cli-환경-파일"},S={id:"env-파일-검색-순서",tabindex:"-1"},R={class:"header-anchor",href:"#env-파일-검색-순서"},D={class:"hint-container info"},K={href:"https://github.com/google-gemini/gemini-cli/tree/main/docs",target:"_blank",rel:"noopener noreferrer"},V={class:"footnotes"},H={class:"footnotes-list"},Y={id:"footnote1",class:"footnote-item"},O={href:"https://docs.anthropic.com/ko/docs/build-with-claude/context-windows",target:"_blank",rel:"noopener noreferrer"};function B(b,n){const m=d("VPCard"),l=d("router-link"),t=d("VPIcon"),u=d("SiteInfo"),f=d("RouteLink"),v=d("CodeTabs");return h(),w("div",null,[s("h1",C,[s("a",A,[s("span",null,y(b.$frontmatter.title)+" 관련",1)])]),i(m,g(c({title:"Google Gemini > Article(s)",desc:"Article(s)",link:"/ai/gemini/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),i(m,g(c({title:"Kubernetes > Article(s)",desc:"Article(s)",link:"/devops/k8s/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",L,[s("ul",null,[s("li",null,[i(l,{to:"#유용한-제미나이-cli-명령어-3가지"},{default:a(()=>n[0]||(n[0]=[e("유용한 제미나이 CLI 명령어 3가지")])),_:1,__:[0]}),s("ul",null,[s("li",null,[i(l,{to:"#대화를-지우는-clear"},{default:a(()=>n[1]||(n[1]=[e("대화를 지우는 /clear")])),_:1,__:[1]})]),s("li",null,[i(l,{to:"#대화를-압축하는-compress"},{default:a(()=>n[2]||(n[2]=[e("대화를 압축하는 /compress")])),_:1,__:[2]})]),s("li",null,[i(l,{to:"#장기-기억을-돕는-memory"},{default:a(()=>n[3]||(n[3]=[e("장기 기억을 돕는 /memory")])),_:1,__:[3]})]),s("li",null,[i(l,{to:"#gemini-md-장기-기억을-도와주는-파일"},{default:a(()=>n[4]||(n[4]=[e("GEMINI.md: 장기 기억을 도와주는 파일")])),_:1,__:[4]})]),s("li",null,[i(l,{to:"#gemini-md로-프로젝트별-설정하기"},{default:a(()=>[i(t,{icon:"fa-brands fa-markdown"}),n[5]||(n[5]=e("GEMINI.md로 프로젝트별 설정하기"))]),_:1,__:[5]})])])]),s("li",null,[i(l,{to:"#settings-json-제미나이-cli-설정-파일"},{default:a(()=>[i(t,{icon:"iconfont icon-json"}),n[6]||(n[6]=e("settings.json: 제미나이 CLI 설정 파일"))]),_:1,__:[6]}),s("ul",null,[s("li",null,[i(l,{to:"#설정-파일의-위치와-적용-범위"},{default:a(()=>n[7]||(n[7]=[e("설정 파일의 위치와 적용 범위")])),_:1,__:[7]})]),s("li",null,[i(l,{to:"#설정-파일의-옵션들"},{default:a(()=>n[8]||(n[8]=[e("설정 파일의 옵션들")])),_:1,__:[8]})])])]),s("li",null,[i(l,{to:"#env-제미나이-cli-환경-파일"},{default:a(()=>[i(t,{icon:"fas fa-file-lines"}),n[9]||(n[9]=e(".env: 제미나이 CLI 환경 파일"))]),_:1,__:[9]}),s("ul",null,[s("li",null,[i(l,{to:"#env-파일-검색-순서"},{default:a(()=>[i(t,{icon:"fas fa-file-lines"}),n[10]||(n[10]=e(".env 파일 검색 순서"))]),_:1,__:[10]})])])]),s("li",null,[i(l,{to:"#마치며"},{default:a(()=>n[11]||(n[11]=[e("마치며")])),_:1,__:[11]})])])]),n[134]||(n[134]=s("hr",null,null,-1)),i(u,{name:"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법",desc:"제미나이 CLI(Gemini CLI)로 쿠버네티스를 관리하는 방법에 대한 글은 일단락되었지만, 사용하다 보니 알아두면 좋은 사용법들을 발견했습니다. 그 내용을 정리하고자 다시 글을 쓰게 되었습니다. 물론 모든 내용을 반드시 알아야 하는 것은 아니지만, 알아두면 제미나이 CLI 같은 도구들을 효과적으로 사용하는 것에 큰 도움이 되는 항목들을 정리했습니다. 한 번쯤 읽고 적용해 볼 것을 권합니다.",url:"https://yozm.wishket.com/magazine/detail/3259/",logo:"https://yozm.wishket.com/favicon.ico",preview:"https://yozm.wishket.com/media/news/3259/image9.png"}),s("p",null,[i(f,{to:"/yozm.wishket.com/3228.html"},{default:a(()=>n[12]||(n[12]=[s("strong",null,"제미나이 CLI(Gemini CLI)로 쿠버네티스를 관리하는 방법",-1)])),_:1,__:[12]}),n[13]||(n[13]=e("에 대한 글은 일단락되었지만, 사용하다 보니 알아두면 좋은 사용법들을 발견했습니다. 그 내용을 정리하고자 다시 글을 쓰게 되었습니다."))]),n[135]||(n[135]=o('<p>물론 모든 내용을 반드시 알아야 하는 것은 아니지만, 알아두면 제미나이 CLI 같은 도구들을 효과적으로 사용하는 것에 큰 도움이 되는 항목들을 정리했습니다. 한 번쯤 읽고 적용해 볼 것을 권합니다.</p><hr><h2 id="유용한-제미나이-cli-명령어-3가지" tabindex="-1"><a class="header-anchor" href="#유용한-제미나이-cli-명령어-3가지"><span>유용한 제미나이 CLI 명령어 3가지</span></a></h2><h3 id="대화를-지우는-clear" tabindex="-1"><a class="header-anchor" href="#대화를-지우는-clear"><span>대화를 지우는 <code>/clear</code></span></a></h3><p>챗GPT와 같은 AI를 사용하다 보면 대화를 분리해서 관리하는 방식이 익숙할 것입니다.</p><figure><img src="https://wishket.com/media/news/3259/image8.png" alt="챗GPT의 Chats 구조" tabindex="0" loading="lazy"><figcaption>챗GPT의 Chats 구조</figcaption></figure><p>제미나이 CLI도 마찬가지로 하나의 대화에 모든 내용을 섞으면 정확하지 않은 답변을 받을 가능성이 높아집니다. <em>(AI는 결국 확률 기반으로 답변을 주는 구조니까요.)</em></p><p>따라서 목적에 맞는 답변을 충분히 받은 후에는, <strong><code>/clear</code> 명령어</strong>를 사용해 기존 대화 내용을 지우고, 새로운 질문을 시작하는 것이 정확하고 만족스러운 답변을 얻는 데 도움을 줍니다. 또한, 모델마다 차이는 있지만 일반적으로 대화는 컨텍스트 윈도우(Context Window)<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>를 소모하기 때문에 이를 관리할 필요도 있습니다.</p><figure><img src="https://wishket.com/media/news/3259/image5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://wishket.com/media/news/3259/image6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://wishket.com/media/news/3259/image9.png" alt="오른쪽 하단에 %를 관리하는 것이 포인트입니다" tabindex="0" loading="lazy"><figcaption>오른쪽 하단에 %를 관리하는 것이 포인트입니다</figcaption></figure><h3 id="대화를-압축하는-compress" tabindex="-1"><a class="header-anchor" href="#대화를-압축하는-compress"><span>대화를 압축하는 <code>/compress</code></span></a></h3><p>컨텍스트 윈도우를 관리하려면 <strong><code>/compress</code> 명령어</strong>를 사용하는 것도 좋은 방법입니다. 이 명령을 사용하면, 대화의 주요 내용을 유지하면서 사용되는 토큰 수를 줄일 수 있습니다.</p><figure><img src="https://wishket.com/media/news/3259/image2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="장기-기억을-돕는-memory" tabindex="-1"><a class="header-anchor" href="#장기-기억을-돕는-memory"><span>장기 기억을 돕는 <code>/memory</code></span></a></h3><p>다만 이처럼 컨텍스트 윈도우에 있는 내용은 오래 기억되지 않습니다. 그러나 사용자를 위해 항상 참고해야 할 규칙과 같은 중요한 내용이 있을 수 있습니다. 이와 같은 내용은 <strong><code>/memory</code> 명령</strong>을 사용해 장기 기억으로 저장할 수 있습니다.</p><p>장기 기억에 추가하는 명령은 <strong><code>/memory</code> add</strong>, 저장된 내용을 확인하는 것은 <strong><code>/memory</code> show</strong> 명령으로 확인할 수 있습니다.</p><p>예시로, 제미나이 CLI 실행 중 워크로드를 그냥 생성해 버리는 경우를 방지하고자, 네임스페이스를 지정하지 않으면 생성을 실행하지 말라고 입력했습니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | /memory add you do not allow to run <span class="token code-snippet code keyword">`kubectl create`</span> and <span class="token code-snippet code keyword">`kubectl run`</span> without specific namespace</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image14.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>이후 테스트로 <code>nginx pod</code>를 배포하려고 시도했더니, 네임스페이스가 지정되지 않아 실행할 수 없다는 응답이 나왔습니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | deploy nginx pod</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>단, 이 결과는 환경이나 상황에 따라 달라질 수 있습니다. 예를 들어, 네임스페이스를 물어보거나, <code>kubectl</code> 대신 YAML 파일을 생성하고 배포하려는 시도, Helm으로 배포하려는 시도 등을 보여줄 수 있습니다. 따라서 가능한 정확하고 구체적으로 명령을 입력하는 것이 좋습니다.</p><h3 id="gemini-md-장기-기억을-도와주는-파일" tabindex="-1"><a class="header-anchor" href="#gemini-md-장기-기억을-도와주는-파일"><span><code>GEMINI.md</code>: 장기 기억을 도와주는 파일</span></a></h3>',25)),s("p",null,[n[14]||(n[14]=s("strong",null,[s("code",null,"/memory add"),e(" 명령")],-1)),n[15]||(n[15]=e("등으로 저장한 장기 기억의 실제 내용은 ")),i(t,{icon:"fas fa-folder-open"}),n[16]||(n[16]=s("code",null,"~/.gemini/",-1)),i(t,{icon:"fa-brands fa-markdown"}),n[17]||(n[17]=s("code",null,"GEMINI.md",-1)),n[18]||(n[18]=e(" 파일에 기록됩니다."))]),n[136]||(n[136]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> ~/.gemini/GEMINI.md</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># ## Gemini Added Memories</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># - you do not allow to run \`kubectl create\` and \`kubectl run\` without specific namespace</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[19]||(n[19]=e("즉, ")),i(t,{icon:"fa-brands fa-markdown"}),n[20]||(n[20]=s("code",null,"GEMINI.md",-1)),n[21]||(n[21]=e(" 파일은 제미나이 CLI가 동작하기 위한 전체 맥락을 모두 저장하는 공간입니다. 여기에는 주로 다음과 같은 내용을 담고 있습니다."))]),n[137]||(n[137]=o("<ul><li><strong>기술 스택:</strong> 프로젝트에 사용하는 도구와 버전 (예: Astro 4.5, Tailwind CSS 3.4)</li><li><strong>프로젝트 구조:</strong> 주요 디렉토리와 각 디렉토리의 역할</li><li><strong>명령어:</strong> 빌드, 테스트, 린팅, 배포 등 주요 스크립트</li><li><strong>코드 스타일:</strong> 포맷팅, 네이밍 컨벤션, import/export 문법 가이드라인</li><li><strong>저장소 규칙:</strong> 브랜치 명명법, 커밋 메시지 형식, 머지(Merge) vs. 리베이스(Rebase) 정책</li><li><strong>핵심 파일:</strong> AI가 알아야 할 중요한 파일 (예: api.ts, utils.js)</li><li><strong>금지 사항:</strong> 수정하면 안 되는 레거시 코드나 설정 파일</li></ul>",1)),s("div",G,[n[25]||(n[25]=s("p",{class:"hint-container-title"},"Note",-1)),n[26]||(n[26]=s("p",null,[e("해당 내용은 클로드 코드에서 가지고 왔으며, 관련해서는 "),s("code",null,"CLAUDE.md"),e("를 참고하는 것이 더 좋습니다.")],-1)),n[27]||(n[27]=s("p",null,"참고 문서:",-1)),i(u,{name:"What's a Claude.md File? 5 Best Practices to Use Claude.md for Claude Code",desc:"Here's a true story from a Reddit user, a C++ dev and ex-FAANG staff engineer: For four years, a ”white whale” bug lurked in the codebase of a C++ developer with over 30 years of experience. A former FAANG Staff Engineer, this was the kind of programmer other developers sought out when all hope was lost. Yet, this particular bug, introduced during a massive 60,000-line refactor, remained elusive. It was an annoying edge case, a ghost in the machine that defied discovery despite an estimated 200",url:"https://apidog.com/blog/claude-md",logo:"https://apidog.com/favicon.ico",preview:"https://assets.apidog.com/blog-next/2025/06/gradii-1920x1080--3--6.png"}),s("p",null,[n[23]||(n[23]=e("(")),s("a",q,[i(t,{icon:"fas fa-globe"}),n[22]||(n[22]=e("국문 번역본"))]),n[24]||(n[24]=e("도 있으나 번역에 문제가 있습니다.)"))])]),n[138]||(n[138]=o(`<p>다만 기존 파일에 중요한 것은 정해져 있지 않습니다. 따라서 직접 입력하는 것이 필요한데, AI가 잘 이해하는 구조로 입력하려면 내용 역시 AI에게 적어달라고 하는 것이 좋습니다. “가능한 정확하게”라는 조건을 달성하려면, AI가 이해하는 형태로 AI가 직접 해석하고 쓰는 편이 더 낫기 때문입니다.</p><p>예를 들면 다음과 같이 요청할 수 있습니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | protect to delete kubernetes resource. wrtie this policy at ~/.gemini/GEMINI.md</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image12.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://wishket.com/media/news/3259/image16.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>테스트를 위해 <code>/quit</code> 명령을 내린 다음, 제미나이 CLI를 다시 실행해 <code>nginx pod</code>를 지워달라고 요청해 보았습니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | delete nginx pod</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image11.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>정책이 적용되어 있기 때문에 지우려는 시도조차 하지 않습니다. 그 대신 지우는 방법만을 안내해 줍니다.</p>`,9)),s("p",null,[n[28]||(n[28]=e("만약 ")),i(t,{icon:"fa-brands fa-markdown"}),n[29]||(n[29]=s("code",null,"GEMINI.md",-1)),n[30]||(n[30]=e("에 관련 구문(= ")),n[31]||(n[31]=s("strong",null,[e("you do not allow to run "),s("code",null,"kubectl delete")],-1)),n[32]||(n[32]=e(")이 없다면 어떨까요? 구문을 지우고, 새로 시도해 보았습니다."))]),n[139]||(n[139]=o(`<div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | delete nginx pod</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image13.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>곧바로 삭제를 위해 파드를 찾기 시작하는 모습입니다.</p>`,3)),s("h3",E,[s("a",z,[s("span",null,[i(t,{icon:"fa-brands fa-markdown"}),n[33]||(n[33]=s("code",null,"GEMINI.md",-1)),n[34]||(n[34]=e("로 프로젝트별 설정하기"))])])]),s("p",null,[n[35]||(n[35]=e("하나만 더 확인하겠습니다. ")),i(t,{icon:"fas fa-folder-open"}),n[36]||(n[36]=s("code",null,"~/.gemini/",-1)),i(t,{icon:"fa-brands fa-markdown"}),n[37]||(n[37]=s("code",null,"GEMINI.md",-1)),n[38]||(n[38]=e("는 글로벌 설정인데, 프로젝트마다 지역 설정을 할 수도 있습니다."))]),n[140]||(n[140]=o(`<p>동일한 내용의 정책이지만, ‘현재 디렉터리’에 정책을 만들어 달라고 요청합니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | protect to delete kubernetes resource. wrtie this policy at current directory by GEMINI.md</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image18.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>보다 명확하게 하기 위해 다시 제미나이 CLI를 실행했습니다.</p><p>그리고 <code>kubectl</code>을 항상 허용하도록 한 다음 결과를 확인했습니다. 아래 화면처럼 지우는 명령을 알려주고는 “실행할래?”라고 물어봅니다.</p><figure><img src="https://wishket.com/media/news/3259/image17.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,6)),s("p",null,[n[39]||(n[39]=e("이유를 찾기 위해 ")),i(t,{icon:"fa-brands fa-markdown"}),n[40]||(n[40]=s("code",null,"GEMINI.md",-1)),n[41]||(n[41]=e(" 파일을 확인했습니다."))]),n[141]||(n[141]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> GEMINI.md</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># ## Gemini Added Memories</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># - To protect Kubernetes resources, you are not allowed to run &#39;kubectl delete&#39; commands without getting explicit confirmation from the user. Before running a delete command, you must first inform the user which resources will be deleted.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>정책을 보니 이번에는 사용자 확인(confirmation)을 받도록 작성되어 있습니다. 만약 이를 좀 더 강경한 어조로 고치면 지우려는 시도 자체가 줄어들 것입니다.</p><hr>`,3)),s("h2",N,[s("a",T,[s("span",null,[i(t,{icon:"iconfont icon-json"}),n[42]||(n[42]=s("code",null,"settings.json",-1)),n[43]||(n[43]=e(": 제미나이 CLI 설정 파일"))])])]),s("p",null,[n[44]||(n[44]=e("이처럼 ")),i(t,{icon:"fa-brands fa-markdown"}),n[45]||(n[45]=s("code",null,"GEMINI.md",-1)),n[46]||(n[46]=e("를 활용하면 원하는 방향성을 만들 수 있지만, 언제나 100% 정확하게 동작시키기는 어렵습니다."))]),s("p",null,[n[47]||(n[47]=e("이를 위해 제미나이 CLI에는 ")),i(t,{icon:"iconfont icon-json"}),n[48]||(n[48]=s("code",null,"setting.json",-1)),n[49]||(n[49]=e("이라는 설정 파일이 존재합니다. 해당 파일은 글로벌(유저) 설정과 지역(프로젝트) 설정, 그리고 시스템 설정으로 구분할 수 있습니다."))]),n[142]||(n[142]=s("h3",{id:"설정-파일의-위치와-적용-범위",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#설정-파일의-위치와-적용-범위"},[s("span",null,"설정 파일의 위치와 적용 범위")])],-1)),n[143]||(n[143]=s("h4",{id:"사용자-설정-파일",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#사용자-설정-파일"},[s("span",null,"사용자 설정 파일")])],-1)),s("p",null,[n[50]||(n[50]=e("현재 사용자의 모든 제미나이 CLI 세션에 적용되는 설정입니다. 홈 디렉터리의 ")),n[51]||(n[51]=s("code",null,"~/.gemini/",-1)),i(t,{icon:"iconfont icon-json"}),n[52]||(n[52]=s("code",null,"settings.json",-1)),n[53]||(n[53]=e(" 경로에 위치합니다."))]),n[144]||(n[144]=s("h4",{id:"프로젝트-설정-파일",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#프로젝트-설정-파일"},[s("span",null,"프로젝트 설정 파일")])],-1)),s("p",null,[n[54]||(n[54]=e("해당 특정 프로젝트에서 제미나이 CLI를 실행할 때만 적용되며, 사용자 설정보다 우선순위가 높습니다. 프로젝트 디렉토리의 ")),n[55]||(n[55]=s("code",null,".gemini/",-1)),i(t,{icon:"iconfont icon-json"}),n[56]||(n[56]=s("code",null,"settings.json",-1)),n[57]||(n[57]=e("에 위치합니다."))]),n[145]||(n[145]=s("h4",{id:"시스템-설정-파일",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#시스템-설정-파일"},[s("span",null,"시스템 설정 파일")])],-1)),n[146]||(n[146]=s("p",null,"시스템 내부 모든 사용자의 모든 제미나이 CLI 세션에 적용되며, 모든 설정 파일의 최우선으로 적용됩니다. 운영 환경에 따라 경로가 아래와 같으며, GEMINI_CLI_SYSTEM_SETTINGS_PATH 환경 변수로 경로를 다시 정의할 수도 있습니다.",-1)),i(v,{data:[{id:'<VPIcon icon="fa-brands fa-linux"/>'},{id:'<VPIcon icon="fa-brands fa-windows"/>'},{id:'<VPIcon icon="iconfont icon-macos"/>'}],active:0,"tab-id":"sh"},{title0:a(({value:r,isActive:p})=>[i(t,{icon:"fa-brands fa-linux"})]),title1:a(({value:r,isActive:p})=>[i(t,{icon:"fa-brands fa-windows"})]),title2:a(({value:r,isActive:p})=>[i(t,{icon:"iconfont icon-macos"})]),tab0:a(({value:r,isActive:p})=>n[58]||(n[58]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},"/etc/gemini-cli/settings.json"),e(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab1:a(({value:r,isActive:p})=>n[59]||(n[59]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},[e("C:"),s("span",{class:"token punctuation"},"\\"),s("span",{class:"token punctuation"},"\\"),e("ProgramData"),s("span",{class:"token punctuation"},"\\"),s("span",{class:"token punctuation"},"\\"),e("gemini-cli"),s("span",{class:"token punctuation"},"\\"),s("span",{class:"token punctuation"},"\\"),e("settings.json")]),e(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),tab2:a(({value:r,isActive:p})=>n[60]||(n[60]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},"/Library/Application Support/GeminiCli/settings.json"),e(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1}),n[147]||(n[147]=s("h3",{id:"설정-파일의-옵션들",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#설정-파일의-옵션들"},[s("span",null,"설정 파일의 옵션들")])],-1)),s("p",null,[n[64]||(n[64]=e("설정 파일에는 다양한 옵션이 있습니다. 현재 공식 문서는 md 파일로 제공되니, ")),s("a",j,[n[61]||(n[61]=e("링크 (")),i(t,{icon:"iconfont icon-github"}),n[62]||(n[62]=s("code",null,"google-gemini/gemini-cli",-1)),n[63]||(n[63]=e(")"))]),n[65]||(n[65]=e("를 확인하는 것이 좋습니다. 이를 종류별로 구분하면 다음과 같습니다."))]),n[148]||(n[148]=o('<ul><li><strong>도구 및 명령어 관리</strong>: 사용할 도구와 사용하지 않을 도구 구분</li><li><strong>파일 및 컨텍스트 관련</strong>: 파일 처리와 컨텍스트 설정</li><li><strong>MCP 서버 관리</strong>: MCP 서버의 설정과 허용 여부 결정</li><li><strong>사용자 경험</strong>: UI/UX 관련 설정</li><li><strong>고급 기능</strong>: 샌드박싱, 체크포인팅 등</li><li><strong>개발자 도구</strong>: 커스텀 명령어 및 도구 개발</li><li><strong>모니터링 및 통계</strong>: 텔레메트리 및 사용 통계</li></ul><p>모두가 각 목적이 있지만, 여기서는 2가지 주요 옵션인 도구 및 명령어 관리, 파일 및 컨텍스트 관련 옵션을 살펴보겠습니다.</p><h4 id="도구-및-명령어-관리-excludetools" tabindex="-1"><a class="header-anchor" href="#도구-및-명령어-관리-excludetools"><span>도구 및 명령어 관리 (<code>excludeTools</code>)</span></a></h4>',3)),s("p",null,[n[66]||(n[66]=e("기존 ")),i(t,{icon:"fa-brands fa-markdown"}),n[67]||(n[67]=s("code",null,"GEMINI.md",-1)),n[68]||(n[68]=e("로는 어떤 명령의 수행을 ‘완벽하게’ 방지할 수 없습니다. 이 정책은 일종의 가이드처럼 제공되기에 AI 스스로 우회하는 방법을 찾고는 합니다. 하지만 중요한 명령의 실행, 이를테면 배포된 워크로드를 삭제하는 작업들은 매우 중대한 문제를 불러올 수 있으니 완벽히 방지하는 것이 좋습니다. 이를 위해 ")),n[69]||(n[69]=s("code",null,"excludeTools",-1)),n[70]||(n[70]=e(" 옵션을 활용할 수 있습니다."))]),n[149]||(n[149]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> ~/.gemini/settings.json</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;theme&quot;: &quot;Default&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;selectedAuthType&quot;: &quot;gemini-api-key&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;preferredEditor&quot;: &quot;cursor&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;excludeTools&quot;: [</span></span>
<span class="line"><span class="token comment">#     &quot;ShellTool(rm -rf)&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;ShellTool(sudo)&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;ShellTool(kubectl delete)&quot;</span></span>
<span class="line"><span class="token comment">#   ]</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 설정하고, kubectl delete 명령을 실행해 보았습니다.</p><figure><img src="https://wishket.com/media/news/3259/image15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>“blocked by configuration”이라는 에러 메시지와 함께 명령 실행이 완전히 차단된 모습입니다.</p><h4 id="파일-및-컨텍스트-관련" tabindex="-1"><a class="header-anchor" href="#파일-및-컨텍스트-관련"><span>파일 및 컨텍스트 관련</span></a></h4>`,5)),s("p",null,[n[71]||(n[71]=e("장기 기억을 쓰기 위해 제미나이 CLI는 각 디렉토리에 있는 ")),i(t,{icon:"fa-brands fa-markdown"}),n[72]||(n[72]=s("code",null,"GEMINI.md",-1)),n[73]||(n[73]=e(" 파일을 읽어들입니다. 그러나 이것만으로는 목적에 따라 컨텍스트를 효과적으로 관리하기 어렵습니다. 따라서 그 외에도 다른 컨텍스트를 제공할 수 있어야 합니다."))]),s("p",null,[n[74]||(n[74]=e("예를 들어, 구성 구조를 설명하는 ")),i(t,{icon:"fa-brands fa-markdown"}),n[75]||(n[75]=s("code",null,"ARCHITECTURE.md",-1)),n[76]||(n[76]=e(", 에이전트 동작의 방향성과 목적을 지정하는 ")),i(t,{icon:"fa-brands fa-markdown"}),n[77]||(n[77]=s("code",null,"AGENTS.md",-1)),n[78]||(n[78]=e(", API 관련 참고 문서인 ")),i(t,{icon:"fa-brands fa-markdown"}),n[79]||(n[79]=s("code",null,"API_DOC.md",-1)),n[80]||(n[80]=e(" 등 목적에 맞는 파일을 사용할 수 있습니다."))]),n[150]||(n[150]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> ~/.gemini/settings.json</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;theme&quot;: &quot;Default&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;selectedAuthType&quot;: &quot;gemini-api-key&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;preferredEditor&quot;: &quot;cursor&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;excludeTools&quot;: [</span></span>
<span class="line"><span class="token comment">#     &quot;ShellTool(rm -rf)&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;ShellTool(sudo)&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;ShellTool(kubectl delete)&quot;</span></span>
<span class="line"><span class="token comment">#   ],</span></span>
<span class="line"><span class="token comment">#   &quot;contextFileName&quot;: [</span></span>
<span class="line"><span class="token comment">#     &quot;GEMINI.md&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;ARCHITECTURE.md&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;AGENTS.md&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;API_DOC.md&quot;</span></span>
<span class="line"><span class="token comment">#   ]</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[81]||(n[81]=e("예를 들어, ")),i(t,{icon:"fa-brands fa-markdown"}),n[82]||(n[82]=s("code",null,"AGENTS.md",-1)),n[83]||(n[83]=e("를 작성할 때는 다음과 같이 진행할 수 있습니다."))]),n[151]||(n[151]=o(`<p>간략하게 파드를 배포하지 말 것, 로드밸런서 타입으로 노출할 때는 사용자의 허가를 받을 것, 마지막으로 보안을 신경 써서 고려할 것, 이라는 내용을 담은 문서를 만들어 달라고 프롬프트를 입력했습니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | create AGENTS.md in here (.)                                           </span>
<span class="line">  Agents do no deploy pod.                                               </span>
<span class="line">  Agents expose workload to LoadBalancer type after confirming by user   </span>
<span class="line">  Agents should be care about security</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image10.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>여기에 좀 더 실용적인 메시지를 넣고, 주석도 채워줄 것을 마찬가지로 요청합니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | add more practical message in AGENTS.md and add comment as well</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,6)),s("p",null,[n[84]||(n[84]=e("마지막으로는 ")),n[85]||(n[85]=s("strong",null,[s("code",null,"/memory refresh"),e(" 명령")],-1)),n[86]||(n[86]=e("을 입력해 생성한 ")),i(t,{icon:"fa-brands fa-markdown"}),n[87]||(n[87]=s("code",null,"AGENTS.md",-1)),n[88]||(n[88]=e("를 읽어 들입니다."))]),n[152]||(n[152]=o(`<figure><img src="https://wishket.com/media/news/3259/image7.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>이러한 설정까지 적용한 다음, 단일 <code>nginx</code> 파드를 배포하려고 시도해 보았습니다.</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">Prompt</span><span class="token punctuation">**</span></span> | deploy single nginx pod</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wishket.com/media/news/3259/image4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>이런 메시지가 나온 것은 AI가 업데이트된 <code>AGENTS.md</code> 파일을 읽고, 그 가이드라인을 따르려고 했기 때문입니다.</p><hr>`,6)),s("h2",M,[s("a",P,[s("span",null,[i(t,{icon:"fas fa-file-lines"}),n[89]||(n[89]=s("code",null,".env",-1)),n[90]||(n[90]=e(": 제미나이 CLI 환경 파일"))])])]),n[153]||(n[153]=s("p",null,"마지막으로 알아볼 것은 제미나이 CLI의 환경 파일입니다.",-1)),s("p",null,[i(f,{to:"/yozm.wishket.com/3228.html"},{default:a(()=>n[91]||(n[91]=[s("strong",null,"앞서 글",-1)])),_:1,__:[91]}),n[92]||(n[92]=e("에서 반복 입력을 막고자 ")),n[93]||(n[93]=s("code",null,"GEMINI_API_KEY",-1)),n[94]||(n[94]=e("를 각 셸의 환경 설정에 직접 넣은 적이 있습니다. 다만, 사용하다 보니 해당 ")),n[95]||(n[95]=s("code",null,"KEY",-1)),n[96]||(n[96]=e("를 ")),i(t,{icon:"fas fa-file-lines"}),n[97]||(n[97]=s("code",null,".env",-1)),n[98]||(n[98]=e("에 넣는 것이 더 낫겠다고 판단했습니다. 일반적으로 ")),i(t,{icon:"fas fa-file-lines"}),n[99]||(n[99]=s("code",null,".bashrc",-1)),n[100]||(n[100]=e("나 ")),i(t,{icon:"fas fa-file-lines"}),n[101]||(n[101]=s("code",null,".zshrc",-1)),n[102]||(n[102]=e(" 파일에는 다양한 내용이 들어 있어 관리가 어렵기 때문입니다."))]),s("p",null,[n[103]||(n[103]=e("제미나이 CLI는 다음과 같은 방식으로 ")),i(t,{icon:"fas fa-file-lines"}),n[104]||(n[104]=s("code",null,".env",-1)),n[105]||(n[105]=e(" 파일을 검색하고 적용합니다."))]),s("h3",S,[s("a",R,[s("span",null,[i(t,{icon:"fas fa-file-lines"}),n[106]||(n[106]=s("code",null,".env",-1)),n[107]||(n[107]=e(" 파일 검색 순서"))])])]),s("ol",null,[s("li",null,[n[108]||(n[108]=e("현재 작업 디렉토리에서 ")),i(t,{icon:"fas fa-file-lines"}),n[109]||(n[109]=s("code",null,".env",-1)),n[110]||(n[110]=e(" 파일을 찾습니다."))]),s("li",null,[n[111]||(n[111]=e("만약 없다면, 프로젝트 루트 디렉토리(")),i(t,{icon:"fas fa-folder-open"}),n[112]||(n[112]=s("code",null,".git",-1)),n[113]||(n[113]=e(" 디렉토리로 식별)나 홈 디렉토리에 도달할 때까지 부모 디렉토리에서 ")),i(t,{icon:"fas fa-file-lines"}),n[114]||(n[114]=s("code",null,".env",-1)),n[115]||(n[115]=e(" 파일을 검색합니다."))]),s("li",null,[n[116]||(n[116]=e("그래도 파일을 찾지 못하면 사용자의 홈 디렉토리에 있는 ")),i(t,{icon:"fas fa-folder-open"}),n[117]||(n[117]=s("code",null,"~/",-1)),i(t,{icon:"fas fa-file-lines"}),n[118]||(n[118]=s("code",null,".env",-1)),n[119]||(n[119]=e(" 파일을 찾습니다."))])]),n[154]||(n[154]=o(`<p>해당 파일에서는 아래처럼 다양한 키를 설정해 상황에 따라 전환하거나, 제미나이 실행 시점에 여러 키를 라운드 로빈(Round Robin) 방식으로 교체하며 사용할 수도 있습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> ~/.gemini/.env</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># # Gemini api key</span></span>
<span class="line"><span class="token comment"># # 이메일@gmail.com</span></span>
<span class="line"><span class="token comment"># export GEMINI_API_KEY=&quot;키_값&quot;</span></span>
<span class="line"><span class="token comment"># # 이메일@gmail.com</span></span>
<span class="line"><span class="token comment"># export GEMINI_API_KEY=&quot;키_값&quot;</span></span>
<span class="line"><span class="token comment"># # 이메일l@gmail.com</span></span>
<span class="line"><span class="token comment"># export GEMINI_API_KEY=&quot;키_값&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>또한, <code>KEY</code> 등록 외에도 모델 설정(<code>GEMINI_MODEL</code>), 구글 클라우드 관련 설정 등을 진행할 수 있습니다.</p>`,3)),s("div",D,[n[120]||(n[120]=s("p",{class:"hint-container-title"},"참고 문서",-1)),i(u,{name:"gemini-cli/docs/cli/configuration.md at main · google-gemini/gemini-cli",desc:"An open-source AI agent that brings the power of Gemini directly into your terminal. - google-gemini/gemini-cli",url:"https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/configuration.md/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://repository-images.githubusercontent.com/968197216/8522a757-5632-4fa4-8d01-fcc121390cb1"})]),n[155]||(n[155]=s("hr",null,null,-1)),n[156]||(n[156]=s("h2",{id:"마치며",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#마치며"},[s("span",null,"마치며")])],-1)),n[157]||(n[157]=s("p",null,"지금까지 제미나이 CLI를 다양하게 써보며 직접 느낀 유용한 명령어와 설정 등을 살펴보았습니다.",-1)),s("p",null,[n[124]||(n[124]=e("제미나이 CLI는 나온 지 얼마 안 된 서비스인 만큼, 워낙 빠르게 버전을 업데이트하며 발전해 나가는 중입니다. 그런 만큼 ")),s("a",K,[n[121]||(n[121]=e("공식 홈페이지의 문서 파일들 (")),i(t,{icon:"iconfont icon-github"}),n[122]||(n[122]=s("code",null,"google-gemini/gemini-cli",-1)),n[123]||(n[123]=e(")"))]),n[125]||(n[125]=e("(")),i(t,{icon:"fa-brands fa-markdown"}),n[126]||(n[126]=s("code",null,"*.md",-1)),n[127]||(n[127]=e(")을 읽어보며 다양하게 써볼 것을 추천합니다."))]),n[158]||(n[158]=s("hr",null,null,-1)),I(" TODO: add ARTICLE CARD "),i(m,g(c({title:"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법",desc:"제미나이 CLI(Gemini CLI)로 쿠버네티스를 관리하는 방법에 대한 글은 일단락되었지만, 사용하다 보니 알아두면 좋은 사용법들을 발견했습니다. 그 내용을 정리하고자 다시 글을 쓰게 되었습니다. 물론 모든 내용을 반드시 알아야 하는 것은 아니지만, 알아두면 제미나이 CLI 같은 도구들을 효과적으로 사용하는 것에 큰 도움이 되는 항목들을 정리했습니다. 한 번쯤 읽고 적용해 볼 것을 권합니다.",link:"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/3259.html",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16),n[159]||(n[159]=s("hr",{class:"footnotes-sep"},null,-1)),s("section",V,[s("ol",H,[s("li",Y,[s("p",null,[n[129]||(n[129]=e("*")),n[130]||(n[130]=s("strong",null,"컨텍스트 윈도우",-1)),n[131]||(n[131]=e(": 언어 모델이 새로운 텍스트를 생성할 때 참조할 수 있는 전체 텍스트의 양과 생성하는 새로운 텍스트를 합친 것 <출처: ")),s("a",O,[i(t,{icon:"iconfont icon-anthropic"}),n[128]||(n[128]=e("앤트로픽"))]),n[132]||(n[132]=e("> ")),n[133]||(n[133]=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1))])])])])])}const J=k(x,[["render",B]]),Z=JSON.parse('{"path":"/yozm.wishket.com/3259.html","title":"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법","description":"Article(s) > 알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법","icon":"iconfont icon-gemini","category":["AI","LLM","Google Gemini","DevOps","Kubernetes","Article(s)"],"tag":["blog","yozm.wishket.com","ai","artificial-intelligence","llm","large-language-models","google","gemini","google-gemini","devops","k8s","kubernetes"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법\\",\\"image\\":[\\"https://wishket.com/media/news/3259/image8.png\\",\\"https://wishket.com/media/news/3259/image5.png\\",\\"https://wishket.com/media/news/3259/image6.png\\",\\"https://wishket.com/media/news/3259/image9.png\\",\\"https://wishket.com/media/news/3259/image2.png\\",\\"https://wishket.com/media/news/3259/image14.png\\",\\"https://wishket.com/media/news/3259/image3.png\\",\\"https://wishket.com/media/news/3259/image12.png\\",\\"https://wishket.com/media/news/3259/image16.png\\",\\"https://wishket.com/media/news/3259/image11.png\\",\\"https://wishket.com/media/news/3259/image13.png\\",\\"https://wishket.com/media/news/3259/image18.png\\",\\"https://wishket.com/media/news/3259/image17.png\\",\\"https://wishket.com/media/news/3259/image15.png\\",\\"https://wishket.com/media/news/3259/image10.png\\",\\"https://wishket.com/media/news/3259/image1.png\\",\\"https://wishket.com/media/news/3259/image7.png\\",\\"https://wishket.com/media/news/3259/image4.png\\"],\\"datePublished\\":\\"2025-07-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"조훈(Hoon Jo)\\",\\"url\\":\\"https://yozm.wishket.com/magazine/@pagaia/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/3259.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법"}],["meta",{"property":"og:description","content":"Article(s) > 알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yozm.wishket.com/media/news/3259/image9.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yozm.wishket.com/media/news/3259/image9.png"}],["meta",{"name":"twitter:image:alt","content":"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법"}],["meta",{"property":"article:author","content":"조훈(Hoon Jo)"}],["meta",{"property":"article:tag","content":"kubernetes"}],["meta",{"property":"article:tag","content":"k8s"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"google-gemini"}],["meta",{"property":"article:tag","content":"gemini"}],["meta",{"property":"article:tag","content":"google"}],["meta",{"property":"article:tag","content":"large-language-models"}],["meta",{"property":"article:tag","content":"llm"}],["meta",{"property":"article:tag","content":"artificial-intelligence"}],["meta",{"property":"article:tag","content":"ai"}],["meta",{"property":"article:tag","content":"yozm.wishket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-07-28T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > 알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법"},{"property":"og:description","content":"알아두면 쓸모있는 제미나이 CLI(Gemini CLI) 사용법"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/3259.html"}]],"prev":"/ai/gemini/articles/README.md","date":"2025-07-28T00:00:00.000Z","isOriginal":false,"author":[{"name":"조훈(Hoon Jo)","url":"https://yozm.wishket.com/magazine/@pagaia/"}],"cover":"https://yozm.wishket.com/media/news/3259/image9.png"},"git":{},"readingTime":{"minutes":3.87,"words":1161},"filePathRelative":"yozm.wishket.com/3259.md","copyright":{"author":"조훈(Hoon Jo)"}}');export{J as comp,Z as data};
