import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as m,d as a,f as e,b as p,a as o,t as g,n as r,g as u,e as s,r as i,o as v}from"./app-BVguHYKu.js";const b={},h={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},w={href:"https://proandroiddev.com/widgets-with-glance-blending-in-ae1e52a6cb6f",target:"_blank",rel:"noopener noreferrer"},y={href:"https://developer.android.com/reference/android/app/WallpaperManager",target:"_blank",rel:"noopener noreferrer"},M={class:"hint-container note"},S={href:"https://stackoverflow.com/a/41491220/4714860",target:"_blank",rel:"noopener noreferrer"},C={href:"https://stackoverflow.com/users/1658268/sudoplz",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/KatieBarnett/MotivateMe/tree/workshop/Activity-12",target:"_blank",rel:"noopener noreferrer"},T={href:"https://proandroiddev.com/widgets-with-glance-blending-in-ae1e52a6cb6f",target:"_blank",rel:"noopener noreferrer"},A={class:"hint-container info"},W={href:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee",target:"_blank",rel:"noopener noreferrer"};function G(d,n){const c=i("VPCard"),l=i("SiteInfo"),t=i("VPIcon");return v(),m("div",null,[a("h1",h,[a("a",f,[a("span",null,g(d.$frontmatter.title)+" 관련",1)])]),e(c,r(u({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n[31]||(n[31]=a("nav",{class:"table-of-contents"},[a("ul")],-1)),n[32]||(n[32]=a("hr",null,null,-1)),e(l,{name:"Widgets with Glance: Standing out",desc:"Widgets can look great against a home screen wallpaper when they have a solid background (check out my article Widgets with Glance: Blending in to see how to pick a color that matches the app icons) but what if instead the background is transparent?",url:"https://droidcon.com/widgets-with-glance-standing-out",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/11/1_cMIA8nBu_GImuIfLIgioxQ-600x360.webp"}),n[33]||(n[33]=a("figure",null,[a("img",{src:"https://droidcon.com/wp-content/uploads/2024/11/1_cMIA8nBu_GImuIfLIgioxQ-600x360.webp",alt:"All good so far",tabindex:"0",loading:"lazy"}),a("figcaption",null,"All good so far")],-1)),a("p",null,[n[3]||(n[3]=s("Widgets can look great against a home screen wallpaper when they have a solid background (check out my article")),a("a",w,[n[0]||(n[0]=s("Widgets with Glance: Blending in (")),e(t,{icon:"fa-brands fa-medium"}),n[1]||(n[1]=a("code",null,"proandroiddev",-1)),n[2]||(n[2]=s(")"))]),n[4]||(n[4]=s("to see how to pick a color that matches the app icons) but what if instead the background is transparent? It looks fine if the text or graphics are a good contrast from the wallpaper:"))]),n[34]||(n[34]=a("p",null,"But what about if the wallpaper is not a good contrast? How do you choose a suitable color?",-1)),n[35]||(n[35]=a("figure",null,[a("img",{src:"https://droidcon.com/wp-content/uploads/2024/11/1_L6ieC3kyYswQJ3F9FpRH6Q-600x360.webp",alt:"Works on a light background, not on a dark.",tabindex:"0",loading:"lazy"}),a("figcaption",null,"Works on a light background, not on a dark.")],-1)),n[36]||(n[36]=a("p",null,[s("Even if you are using dynamic colors in your"),a("code",null,"GlanceTheme"),s("(as I am in the image above), the theme system won’t automatically check for contrast against the background. So we must do this ourselves.")],-1)),a("p",null,[n[6]||(n[6]=s("First thing, we need to detect the device wallpaper. This can be done using the")),a("a",y,[e(t,{icon:"fa-brands fa-android"}),n[5]||(n[5]=s("WallpaperManager API"))]),n[7]||(n[7]=s("."))]),n[37]||(n[37]=p(`<p>First, get the<code>WallpaperManager</code>instance, then fetch the dominant colors. A list is available, arranged in order of priority (note: a minimum color occurrence percentage<code>MIN_COLOR_OCCURRENCE</code>— 5% by default — is applied for the color to appear in this list), from here we need to get the primary color and decide whether dark or light text should be used.</p><p>This can be added to the<code>GlanceTheme</code>and initialised in a boolean state variable that can be then passed into the composable<code>content</code>.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MotivateMeGlanceTheme.kt"><span>MotivateMeGlanceTheme.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">MotivateMeGlanceTheme</span><span class="token punctuation">(</span></span>
<span class="line">    context<span class="token operator">:</span> Context<span class="token punctuation">,</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    <span class="token keyword">val</span> wallpaperManager <span class="token operator">=</span> WallpaperManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> colors <span class="token operator">=</span> wallpaperManager<span class="token punctuation">.</span><span class="token function">getWallpaperColors</span><span class="token punctuation">(</span>FLAG_SYSTEM<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> useDarkColorOnWallpaper <span class="token keyword">by</span> remember <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">mutableStateOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token function">getUseDarkColorOnWallPaper</span><span class="token punctuation">(</span>colors<span class="token punctuation">,</span> FLAG_SYSTEM<span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">GlanceTheme</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">&gt;=</span> Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>S<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            GlanceTheme<span class="token punctuation">.</span>colors</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            MotivateMeGlanceColorScheme<span class="token punctuation">.</span>colors</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        content<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>useDarkColorOnWallpaper<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),o(" @include: https://gist.github.com/KatieBarnett/a708ad418930f630ce6733a2ed33d8f8/raw/dff62c8d3b2b81333b31bf306fde931934f838a9/MotivateMeGlanceTheme.kt "),n[38]||(n[38]=p(`<p>In the above code we can get the wallpaper colors using</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">wallpaperManager<span class="token punctuation">.</span><span class="token function">getWallpaperColors</span><span class="token punctuation">(</span>FLAG_SYSTEM<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>FLAG_SYSTEM</code>indicates we want the colors for the home screen — passing in<code>FLAG_LOCK</code>would give the colors of the lock screen.</p><p>An important thing to note is that<code>getWallpaperColors</code>is limited to<code>API 27</code>and above so you can either update the<code>minimumSdk</code>of the app to<code>27</code>or surround this with an version check if statement.</p><p>To detect whether to use dark or light text, we can use a utility function<code>getUseDarkColorOnWallPaper</code>. In this we can use the wallpaper colors<code>colorHints</code>to check if we should use dark text with the<code>WallpaperColors.HINT_SUPPORTS_DARK_TEXT</code>flag. As per the API documentation,<code>HINT_SUPPORTS_DARK_TEXT</code>:</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Specifies that dark text is preferred over the current wallpaper for best presentation.</p><blockquote><p>eg. A launcher may set its text color to black if this flag is specified.</p></blockquote></div><p>There is also<code>HINT_SUPPORTS_DARK_THEME</code>which could also be useful for a widget with a solid background to detect whether a dark or light background would be preferable.</p><p>Using<code>HINT_SUPPORTS_DARK_TEXT</code>and<code>colorHints</code>:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="WidgetUtil.kt"><span>WidgetUtil.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">getUseDarkColorOnWallpaper</span><span class="token punctuation">(</span>colors<span class="token operator">:</span> WallpaperColors<span class="token operator">?</span><span class="token punctuation">,</span> type<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Boolean<span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">and</span> FLAG_SYSTEM <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> colors <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">&gt;=</span> Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>S<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token punctuation">(</span>colors<span class="token punctuation">.</span>colorHints<span class="token punctuation">)</span> <span class="token operator">and</span> WallpaperColors<span class="token punctuation">.</span>HINT_SUPPORTS_DARK_TEXT <span class="token operator">!=</span> <span class="token number">0</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> hsv <span class="token operator">=</span> <span class="token function">FloatArray</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> primaryColor <span class="token operator">=</span> colors<span class="token punctuation">.</span>primaryColor<span class="token punctuation">.</span><span class="token function">toArgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">RGBToHSV</span><span class="token punctuation">(</span></span>
<span class="line">                primaryColor<span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">                primaryColor<span class="token punctuation">.</span>green<span class="token punctuation">,</span></span>
<span class="line">                primaryColor<span class="token punctuation">.</span>blue<span class="token punctuation">,</span></span>
<span class="line">                hsv</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">!</span><span class="token function">colorIsDarkAdvanced</span><span class="token punctuation">(</span>primaryColor<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,9)),o(" @include: https://gist.github.com/KatieBarnett/250ba461df486d9db169b66b021daf72/raw/eb002904924fc9f0b6c927d57c621735e380a43e/WidgetUtil.kt "),n[39]||(n[39]=a("p",null,[a("code",null,"colorHints"),s("is only available in"),a("a",{href:"https://android.com/intl/en_au/android-12/#a12-color-reimagined",target:"_blank",rel:"noopener noreferrer"},"Android 12 and above"),s(", if we are using a lower version a more manual approach is required. For this, we get the primary color as a HSV value and then evaluate the intensity and contrast in another utility function.")],-1)),a("div",M,[n[15]||(n[15]=a("p",{class:"hint-container-title"},"Note",-1)),a("p",null,[n[14]||(n[14]=s("I did not originally write this code, I found it on this ")),a("em",null,[a("a",S,[e(t,{icon:"fa-brands fa-stack-overflow"}),n[8]||(n[8]=s("StackOverflow answer"))]),n[12]||(n[12]=s(" from ")),a("a",C,[n[9]||(n[9]=s("SudoPlz (")),e(t,{icon:"fa-brands fa-stack-overflow"}),n[10]||(n[10]=a("code",null,"sudoplz",-1)),n[11]||(n[11]=s(")"))]),n[13]||(n[13]=s(". You could replace this with whichever algorithm you prefer."))])])]),n[40]||(n[40]=p(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="WidgetUtil.kt"><span>WidgetUtil.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">colorIsDarkAdvanced</span><span class="token punctuation">(</span>bgColor<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// hexToB</span></span>
<span class="line">    <span class="token keyword">val</span> uicolors <span class="token operator">=</span> <span class="token function">doubleArrayOf</span><span class="token punctuation">(</span></span>
<span class="line">        bgColor<span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span></span>
<span class="line">        bgColor<span class="token punctuation">.</span>green<span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255.0</span><span class="token punctuation">,</span></span>
<span class="line">        bgColor<span class="token punctuation">.</span>blue<span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255.0</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> c <span class="token operator">=</span> uicolors<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> col <span class="token operator">-&gt;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>col <span class="token operator">&lt;=</span> <span class="token number">0.03928</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            col <span class="token operator">/</span> <span class="token number">12.92</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token punctuation">(</span>col <span class="token operator">+</span> <span class="token number">0.055</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1.055</span><span class="token punctuation">,</span> <span class="token number">2.4</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">val</span> L <span class="token operator">=</span> <span class="token number">0.2126</span> <span class="token operator">*</span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0.7152</span> <span class="token operator">*</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">0.0722</span> <span class="token operator">*</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> L <span class="token operator">&lt;=</span> <span class="token number">0.179</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),o(" @include: https://gist.github.com/KatieBarnett/95ed365619d5846ba5cae38afcf4cf28/raw/e56f0f251d1e540702fd4e3cd6785d5037e81fbd/WidgetUtil.kt "),n[41]||(n[41]=p(`<p>Now that we can tell if we should use dark or light text on widget creation, we need to ensure that whenever the wallpaper is changed the color is checked and the widget theme is updated.</p><p>To do this we can create a<code>WallpaperManager.OnColorsChangedListener</code>in a<code>DisposableEffect</code>:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MotivateMeGlanceTheme.kt"><span>MotivateMeGlanceTheme.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">MotivateMeGlanceTheme</span><span class="token punctuation">(</span></span>
<span class="line">    context<span class="token operator">:</span> Context<span class="token punctuation">,</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> wallpaperManager <span class="token operator">=</span> WallpaperManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> colors <span class="token operator">=</span> wallpaperManager<span class="token punctuation">.</span><span class="token function">getWallpaperColors</span><span class="token punctuation">(</span>FLAG_SYSTEM<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> useDarkColorOnWallpaper <span class="token keyword">by</span> remember <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">mutableStateOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token function">getUseDarkColorOnWallpaper</span><span class="token punctuation">(</span>colors<span class="token punctuation">,</span> FLAG_SYSTEM<span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">DisposableEffect</span><span class="token punctuation">(</span>wallpaperManager<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> listener <span class="token operator">=</span> WallpaperManager<span class="token punctuation">.</span><span class="token function">OnColorsChangedListener</span> <span class="token punctuation">{</span> colors<span class="token punctuation">,</span> type <span class="token operator">-&gt;</span></span>
<span class="line">            <span class="token function">getUseDarkColorOnWallpaper</span><span class="token punctuation">(</span>colors<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">                useDarkColorOnWallpaper <span class="token operator">=</span> it</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        wallpaperManager<span class="token punctuation">.</span><span class="token function">addOnColorsChangedListener</span><span class="token punctuation">(</span></span>
<span class="line">            listener<span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">Handler</span><span class="token punctuation">(</span>Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        onDispose <span class="token punctuation">{</span></span>
<span class="line">            wallpaperManager<span class="token punctuation">.</span><span class="token function">removeOnColorsChangedListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),o(" @include: https://gist.github.com/KatieBarnett/349352b14c35d5ed23a65e174d4a21ea/raw/1162b7b978457250d40f5ca932c3beb2b6c941bb/MotivateMeGlanceTheme.kt "),n[42]||(n[42]=a("p",null,"Now, every time the wallpaper is changed the widget will update!",-1)),n[43]||(n[43]=a("figure",null,[a("img",{src:"https://droidcon.com/wp-content/uploads/2024/11/1_mky0GpsMOkUNapd6diKK2A-600x360.webp",alt:"Looking good in all situations!",tabindex:"0",loading:"lazy"}),a("figcaption",null,"Looking good in all situations!")],-1)),a("p",null,[n[19]||(n[19]=s("To see a full example, see my")),a("a",I,[n[16]||(n[16]=s("sample widget app (")),e(t,{icon:"iconfont icon-github"}),n[17]||(n[17]=a("code",null,"KatieBarnett/MotivateMe",-1)),n[18]||(n[18]=s(")"))]),n[20]||(n[20]=s(":"))]),e(l,{name:"KatieBarnett/MotivateMe",desc:"Sample app for Widget Fever: A Hands-On Workshop with Jetpack Compose Glance & Gemini",url:"https://github.com/KatieBarnett/MotivateMe/tree/workshop/Activity-12",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/e48744e1af1e9e66eb80f2b5d2e02dc223574c5da2a50758e30a7af1b5bb0d3f/KatieBarnett/MotivateMe"}),a("p",null,[n[24]||(n[24]=s("Check out my article")),a("a",T,[n[21]||(n[21]=s("Widgets with Glance: Blending in (")),e(t,{icon:"fa-brands fa-medium"}),n[22]||(n[22]=a("code",null,"proandroiddev",-1)),n[23]||(n[23]=s(")"))]),n[25]||(n[25]=s("to see how to pick a color that matches the app icons and device dynamic colours."))]),a("div",A,[n[30]||(n[30]=a("p",{class:"hint-container-title"},"Info",-1)),a("p",null,[n[28]||(n[28]=s("This article is previously published on ")),a("a",W,[e(t,{icon:"fa-brands fa-medium"}),n[26]||(n[26]=a("code",null,"proandroiddev",-1)),n[27]||(n[27]=s(")"))]),n[29]||(n[29]=s("."))]),e(l,{name:"Widgets with Glance: Standing out",desc:"Detect wallpaper colors so transparent widgets do not get lost in the background",url:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*mky0GpsMOkUNapd6diKK2A.jpeg"})]),o(" TODO: add ARTICLE CARD "),e(c,r(u({title:"Widgets with Glance: Standing out",desc:"Widgets can look great against a home screen wallpaper when they have a solid background (check out my article Widgets with Glance: Blending in to see how to pick a color that matches the app icons) but what if instead the background is transparent?",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/widgets-with-glance-standing-out.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const B=k(b,[["render",G]]),D=JSON.parse('{"path":"/droidcon.com/widgets-with-glance-standing-out.html","title":"Widgets with Glance: Standing out","lang":"en-US","frontmatter":{"lang":"en-US","title":"Widgets with Glance: Standing out","description":"Article(s) > Widgets with Glance: Standing out","icon":"iconfont icon-jetpack-compose","category":["Java","Kotlin","Android","Jetpack Compose","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android","jetpack-compse"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Widgets with Glance: Standing out\\",\\"image\\":[\\"https://droidcon.com/wp-content/uploads/2024/11/1_cMIA8nBu_GImuIfLIgioxQ-600x360.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_L6ieC3kyYswQJ3F9FpRH6Q-600x360.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/1_mky0GpsMOkUNapd6diKK2A-600x360.webp\\"],\\"datePublished\\":\\"2024-11-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Katie Barnett\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/widgets-with-glance-standing-out.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Widgets with Glance: Standing out"}],["meta",{"property":"og:description","content":"Article(s) > Widgets with Glance: Standing out"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/11/1_cMIA8nBu_GImuIfLIgioxQ-600x360.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/11/1_cMIA8nBu_GImuIfLIgioxQ-600x360.webp"}],["meta",{"name":"twitter:image:alt","content":"Widgets with Glance: Standing out"}],["meta",{"property":"article:author","content":"Katie Barnett"}],["meta",{"property":"article:tag","content":"jetpack-compse"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-07T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Widgets with Glance: Standing out"},{"property":"og:description","content":"Widgets with Glance: Standing out"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/widgets-with-glance-standing-out.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-11-07T00:00:00.000Z","isOriginal":false,"author":"Katie Barnett","cover":"https://droidcon.com/wp-content/uploads/2024/11/1_cMIA8nBu_GImuIfLIgioxQ-600x360.webp"},"git":{},"readingTime":{"minutes":4.02,"words":1206},"filePathRelative":"droidcon.com/widgets-with-glance-standing-out.md","copyright":{"author":"Katie Barnett"}}');export{B as comp,D as data};
