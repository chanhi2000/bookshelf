import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,d as s,f as e,b as i,a as k,t as h,n as r,g as u,w as o,e as a,r as p,o as b}from"./app-BVguHYKu.js";const y="/bookshelf/assets/image/blog.logrocket.com/css-overlay/banner.png",f="/bookshelf/assets/image/blog.logrocket.com/css-overlay/css-image-overlay-doesnt-cover-text.png",w={},q={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},S={class:"table-of-contents"},C={class:"hint-container note"},T={href:"https://blog.logrocket.com/author/ibadehinmojeed/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://blog.logrocket.com/product-management/crafting-brand-strategy/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://blog.logrocket.com/ux-design/tips-for-better-ecommerce-ux-design/",target:"_blank",rel:"noopener noreferrer"};function I(d,n){const c=p("VPCard"),t=p("router-link"),m=p("SiteInfo"),l=p("VPIcon");return b(),v("div",null,[s("h1",q,[s("a",x,[s("span",null,h(d.$frontmatter.title)+" 관련",1)])]),e(c,r(u({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",S,[s("ul",null,[s("li",null,[e(t,{to:"#how-to-create-an-overlay-effect-in-css"},{default:o(()=>n[0]||(n[0]=[a("How to create an overlay effect in CSS")])),_:1,__:[0]}),s("ul",null,[s("li",null,[e(t,{to:"#image-overlays-using-before-pseudo-element"},{default:o(()=>n[1]||(n[1]=[a("Image overlays using ::before pseudo-element")])),_:1,__:[1]})]),s("li",null,[e(t,{to:"#image-overlays-using-a-div-overlay"},{default:o(()=>n[2]||(n[2]=[a("Image overlays using a <div> overlay")])),_:1,__:[2]})])])]),s("li",null,[e(t,{to:"#how-to-add-an-image-layer-in-css"},{default:o(()=>n[3]||(n[3]=[a("How to add an image layer in CSS")])),_:1,__:[3]})]),s("li",null,[e(t,{to:"#enhancing-overlays-with-hover-effects-and-animations"},{default:o(()=>n[4]||(n[4]=[a("Enhancing overlays with hover effects and animations")])),_:1,__:[4]}),s("ul",null,[s("li",null,[e(t,{to:"#hover-effect-for-image-layers"},{default:o(()=>n[5]||(n[5]=[a("Hover effect for image layers")])),_:1,__:[5]})])])]),s("li",null,[e(t,{to:"#how-to-overlay-your-background-images"},{default:o(()=>n[6]||(n[6]=[a("How to overlay your background images")])),_:1,__:[6]}),s("ul",null,[s("li",null,[e(t,{to:"#adding-an-overlay-to-a-background-image-using-a-pseudo-element"},{default:o(()=>n[7]||(n[7]=[a("Adding an overlay to a background image using a pseudo-element")])),_:1,__:[7]})]),s("li",null,[e(t,{to:"#adding-a-gradient-overlay-to-a-background-image"},{default:o(()=>n[8]||(n[8]=[a("Adding a gradient overlay to a background image")])),_:1,__:[8]})])])]),s("li",null,[e(t,{to:"#conclusion"},{default:o(()=>n[9]||(n[9]=[a("Conclusion")])),_:1,__:[9]})])])]),n[20]||(n[20]=s("hr",null,null,-1)),e(m,{name:"A guide to image overlays in CSS",desc:"Learn the basics of applying image overlays in CSS and explore more interactive techniques like hover effects and animations.",url:"https://blog.logrocket.com/css-overlay",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/css-overlay/banner.png"}),n[21]||(n[21]=s("p",null,"Overlays are visual effects that add a layer over content, often enhancing design, readability, or interactivity. Image overlays add a semi-transparent layer over images to improve text visibility, emphasize details, or enable hover effects.",-1)),n[22]||(n[22]=s("figure",null,[s("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1)),n[23]||(n[23]=s("p",null,"This guide begins with the basics of applying image overlays in CSS and gradually explores more interactive techniques like hover effects and animations.",-1)),s("div",C,[n[13]||(n[13]=s("p",{class:"hint-container-title"},"Editor’s note",-1)),s("p",null,[n[11]||(n[11]=a("This blog was last updated by ")),s("a",T,[e(l,{icon:"fas fa-globe"}),n[10]||(n[10]=a("Ibadehin Mojeed"))]),n[12]||(n[12]=a(" in March 2025 to provide more concise, streamlined information on CSS image overlays."))])]),n[24]||(n[24]=i(`<hr><h2 id="how-to-create-an-overlay-effect-in-css" tabindex="-1"><a class="header-anchor" href="#how-to-create-an-overlay-effect-in-css"><span>How to create an overlay effect in CSS</span></a></h2><p>A common way to create an overlay effect in CSS is by using pseudo-elements (<code>::before</code> or <code>::after</code>) or an additional <code>&lt;div&gt;</code> wrapper.</p><p>Let’s explore both.</p><h3 id="image-overlays-using-before-pseudo-element" tabindex="-1"><a class="header-anchor" href="#image-overlays-using-before-pseudo-element"><span>Image overlays using <code>::before</code> pseudo-element</span></a></h3><p>To create an overlay using the <code>::before</code> pseudo-element, wrap the image inside a container:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1609220136736-443140cffec6?q=80&amp;w=800&amp;h=600&amp;auto=format&amp;fit=crop<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Sample Image<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>800<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>overlay-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    The Pros and Cons of Buying vs. Renting a Home</span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, we apply the overlay using <code>::before</code> on the <code>.image-wrapper</code> container. The <a href="/blog.logrocket.com/pcss-pseudo-elements-guide/" target="_blank" rel="noopener noreferrer"><strong>pseudo-element</strong></a> is positioned absolutely and given a semi-transparent background:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.image-wrapper::before</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Since <code>::before</code> is absolutely positioned, we set the <code>.image-wrapper</code> to <code>position: relative;</code> to ensure proper placement:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.image-wrapper</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">/* Other styles */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Check out the live demo on CodePen:</p><p>You can customize the overlay color and transparency by adjusting the <code>rgba</code> values in the CSS.</p><h4 id="why-doesn-t-the-overlay-cover-the-text" tabindex="-1"><a class="header-anchor" href="#why-doesn-t-the-overlay-cover-the-text"><span>Why doesn’t the overlay cover the text?</span></a></h4><p>Even though the <code>::before</code> pseudo-element is applied to <code>.image-wrapper</code>, the text inside remains visible. This happens because <code>.overlay-text</code> is also positioned absolutely within <code>.image-wrapper</code>, placing it in the same positioning context as the overlay.</p><p>In the stacking order, elements are layered based on their order in the HTML. Since <code>.overlay-text</code> appears after <code>::before</code> in the DOM, it naturally sits on top of the overlay, ensuring the text remains readable:</p><figure><img src="`+f+`" alt="css image overlay does not cover text" tabindex="0" loading="lazy"><figcaption>css image overlay does not cover text</figcaption></figure><p>We can explicitly control the stacking order using the <code>z-index</code>. Assigning a higher <code>z-index</code> value to an element ensures it remains above others, while a lower <code>z-index</code> keeps it beneath.</p><h3 id="image-overlays-using-a-div-overlay" tabindex="-1"><a class="header-anchor" href="#image-overlays-using-a-div-overlay"><span>Image overlays using a <code>&lt;div&gt;</code> <strong>overlay</strong></span></a></h3><p>Instead of using <code>::before</code>, we can add a <code>&lt;div&gt;</code> element specifically for the overlay inside the <code>.image-wrapper</code> container:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;image-wrapper&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>img</span>
<span class="line">    src<span class="token operator">=</span><span class="token string">&quot;https://images.unsplash.com/photo-1609220136736-443140cffec6?q=80&amp;w=800&amp;h=600&amp;auto=format&amp;fit=crop&quot;</span></span>
<span class="line">    alt<span class="token operator">=</span><span class="token string">&quot;Sample Image&quot;</span></span>
<span class="line">    width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span></span>
<span class="line">    height<span class="token operator">=</span><span class="token string">&quot;600&quot;</span></span>
<span class="line">  <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;overlay&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;overlay-text&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    The Pros and Cons <span class="token keyword">of</span> Buying vs<span class="token punctuation">.</span> Renting a Home</span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>.overlay</code> <code>&lt;div&gt;</code> is styled similarly to the <code>::before</code> pseudo-element, with absolute positioning and a semi-transparent background:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.overlay</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can see this example in action on CodePen:</p><p>In this setup, <code>.overlay-text</code> naturally appears above <code>.overlay</code> due to its placement later in the HTML. However, we can explicitly control the stacking order using <code>z-index</code>.</p><hr><h2 id="how-to-add-an-image-layer-in-css" tabindex="-1"><a class="header-anchor" href="#how-to-add-an-image-layer-in-css"><span>How to add an image layer in CSS</span></a></h2>`,27)),s("p",null,[n[15]||(n[15]=a("There are times when layering one image over another is necessary, whether for watermarking, ")),s("a",j,[e(l,{icon:"fas fa-globe"}),n[14]||(n[14]=a("branding"))]),n[16]||(n[16]=a(", or displaying previews and thumbnails. One way to achieve this is by placing two images inside a wrapper, then positioning the top layer absolutely."))]),n[25]||(n[25]=i(`<p>Place the images inside a wrapper like so:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1609220136736-443140cffec6?q=80&amp;w=800&amp;h=600&amp;auto=format&amp;fit=crop<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Background Image<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>background-image<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1697229299093-c920ab53bfb1?q=80&amp;w=800&amp;h=600&amp;auto=format&amp;fit=crop<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Overlay Image<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>overlay-image<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, go ahead and position the top layer absolutely:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/* Other styles */</span></span>
<span class="line"><span class="token selector">.overlay-image</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid white<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can see this example in action on CodePen:</p><p>You can adjust the size and position of the overlay image to suit your design.</p><hr><h2 id="enhancing-overlays-with-hover-effects-and-animations" tabindex="-1"><a class="header-anchor" href="#enhancing-overlays-with-hover-effects-and-animations"><span>Enhancing overlays with hover effects and animations</span></a></h2><p>Now that you’ve learned how to create basic <a href="/blog.logrocket.com/complete-guide-implementing-overlays-flutter/" target="_blank" rel="noopener noreferrer"><strong>overlays</strong></a> and layer images, let’s explore ways to make them more interactive with hover effects and animations.</p><p>One simple approach is adjusting the overlay’s opacity when the user hovers over the image:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.overlay</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* Other styles */</span></span>
<span class="line">  <span class="token property">transition</span><span class="token punctuation">:</span> background 0.3s ease-in-out<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.image-wrapper:hover .overlay</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This creates a subtle effect where the overlay darkens on hover, enhancing visual feedback. Try hovering over the image in the CodePen below to see it in action:</p><h3 id="hover-effect-for-image-layers" tabindex="-1"><a class="header-anchor" href="#hover-effect-for-image-layers"><span>Hover effect for image layers</span></a></h3>`,13)),s("p",null,[n[18]||(n[18]=a("Another common technique is layering images so that a different picture appears when hovering over a product. This is widely used on ")),s("a",A,[e(l,{icon:"fas fa-globe"}),n[17]||(n[17]=a("ecommerce websites"))]),n[19]||(n[19]=a(" to showcase product variations dynamically."))]),n[26]||(n[26]=i(`<p>To achieve this, place two images inside a wrapper:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>product-image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1676291055501-286c48bb186f?w=900&amp;auto=format&amp;fit=crop&amp;q=60<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Product Front<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-image<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://images.unsplash.com/photo-1676303679145-8679f5ceeb16?w=900&amp;auto=format&amp;fit=crop&amp;q=60<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Product Hover<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover-image<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>.hover-image</code> will be positioned absolutely and hidden by default with <code>opacity: 0</code>:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/* Other styles */</span></span>
<span class="line"><span class="token selector">.hover-image</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">transition</span><span class="token punctuation">:</span> opacity 0.5s ease<span class="token punctuation">,</span> transform 2s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.44<span class="token punctuation">,</span> 1.18<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.product-image:hover .hover-image</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.12<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.product-image:hover .default-image</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>On hover, it smoothly fades in and scales up while the <code>.default-image</code> fades out, creating an engaging transition effect ideal for product previews.</p><p>Try hovering over the image in the CodePen below to see it in action:</p><hr><h2 id="how-to-overlay-your-background-images" tabindex="-1"><a class="header-anchor" href="#how-to-overlay-your-background-images"><span>How to overlay your background images</span></a></h2><p>Adding an overlay to a background image enhances the visual appeal of hero sections and banners. This effect can be achieved using various methods, including pseudo-elements, extra <code>&lt;div&gt;</code> elements, CSS properties like <code>background-image</code>, <code>background-blend-mode</code>, and <code>mix-blend-mode</code>, or even a trick with <code>border-image</code>.</p><p>In this section, we’ll explore two straightforward methods: one using a pseudo-element and another leveraging <code>linear-gradient()</code> with a <code>background-image</code>.</p><h3 id="adding-an-overlay-to-a-background-image-using-a-pseudo-element" tabindex="-1"><a class="header-anchor" href="#adding-an-overlay-to-a-background-image-using-a-pseudo-element"><span>Adding an overlay to a background image using a pseudo-element</span></a></h3><p>Similar to how we applied the <code>::before</code> pseudo-element to the <code>&lt;img&gt;</code> container earlier, we can also use it to create an overlay on top of a background image.</p><p>To apply an overlay to a background image, use the following HTML structure:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hero-section<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hero title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hero description here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the CSS, we apply the background image to <code>.hero-section</code> and use <code>::before</code> to create an overlay:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.hero-section</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-image</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;https://images.unsplash.com/photo-1609220136736-443140cffec6?q=80&amp;w=800&amp;h=600&amp;auto=format&amp;fit=crop&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.hero-section::before</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">inset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">/* Other styles */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The overlay spans the entire <code>.hero-section</code>, covering all its contents, including <code>.content</code>. To ensure the text remains visible above the overlay, we will apply <code>z-index: 1</code> to <code>.content</code> and set its position to <code>relative</code>, allowing the <code>z-index</code> to take effect:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">.</span>content <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* ... */</span></span>
<span class="line">  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>See this example in action on CodePen below:</p><h3 id="adding-a-gradient-overlay-to-a-background-image" tabindex="-1"><a class="header-anchor" href="#adding-a-gradient-overlay-to-a-background-image"><span>Adding a gradient overlay to a background image</span></a></h3><p>With the same HTML structure as before, we can use CSS to add a linear gradient overlay directly on top of the background image:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/* Other styles */</span></span>
<span class="line"><span class="token selector">.hero-section</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 139<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>139<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;https://images.unsplash.com/photo-1609220136736-443140cffec6?q=80&amp;w=800&amp;h=600&amp;auto=format&amp;fit=crop&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>linear-gradient()</code> function overlays a gradient on top of the background image, transitioning from dark blue to dark red with 50 percent opacity. This effect helps improve text readability while adding a stylish effect.</p><p>See this example in action on CodePen below:</p><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>Image overlays enhance visuals, improve readability, and add interactivity. This guide covered key techniques such as the <code>::before</code> pseudo-element, <code>linear-gradient()</code> for gradient overlays, and interactive hover effects. Mastering these methods allows you to create stunning hero sections, banners, and dynamic product previews. You can experiment with colors, opacities, and animations to tailor overlays to your needs.</p><p>If you found this guide helpful, feel free to share it. Also, let us know in the comments which overlay technique is your favorite.</p>`,28)),k(" TODO: add ARTICLE CARD "),e(c,r(u({title:"A guide to image overlays in CSS",desc:"Learn the basics of applying image overlays in CSS and explore more interactive techniques like hover effects and animations.",link:"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/css-overlay.html",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16)])}const H=g(w,[["render",I]]),O=JSON.parse('{"path":"/blog.logrocket.com/css-overlay.html","title":"A guide to image overlays in CSS","lang":"en-US","frontmatter":{"lang":"en-US","title":"A guide to image overlays in CSS","description":"Article(s) > A guide to image overlays in CSS","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","blog.logrocket.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A guide to image overlays in CSS\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/css-overlay/banner.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/css-overlay/css-image-overlay-doesnt-cover-text.png\\"],\\"datePublished\\":\\"2025-03-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ibadehin Mojeed\\",\\"url\\":\\"https://blog.logrocket.com/author/ibadehinmojeed/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/css-overlay.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"A guide to image overlays in CSS"}],["meta",{"property":"og:description","content":"Article(s) > A guide to image overlays in CSS"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/css-overlay/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/css-overlay/banner.png"}],["meta",{"name":"twitter:image:alt","content":"A guide to image overlays in CSS"}],["meta",{"property":"article:author","content":"Ibadehin Mojeed"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-03-11T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > A guide to image overlays in CSS"},{"property":"og:description","content":"A guide to image overlays in CSS"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/css-overlay.html"}]],"prev":"/programming/css/articles/README.md","date":"2025-03-11T00:00:00.000Z","isOriginal":false,"author":[{"name":"Ibadehin Mojeed","url":"https://blog.logrocket.com/author/ibadehinmojeed/"}],"cover":"/assets/image/blog.logrocket.com/css-overlay/banner.png"},"git":{},"readingTime":{"minutes":5.75,"words":1726},"filePathRelative":"blog.logrocket.com/css-overlay.md","copyright":{"author":"Ibadehin Mojeed"}}');export{H as comp,O as data};
