import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,d as i,f as e,b as u,a as l,t as _,n as p,g,w as n,r as s,o as f,e as o}from"./app-BVguHYKu.js";const I={},A={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"};function k(m,t){const r=s("VPCard"),a=s("router-link"),d=s("SiteInfo");return f(),c("div",null,[i("h1",A,[i("a",w,[i("span",null,_(m.$frontmatter.title)+" 관련",1)])]),e(r,p(g({title:"LLM > Article(s)",desc:"Article(s)",link:"/ai/llm/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),i("nav",y,[i("ul",null,[i("li",null,[e(a,{to:"#개발에-활용할-수-있는-ai-도구"},{default:n(()=>t[0]||(t[0]=[o("개발에 활용할 수 있는 AI 도구")])),_:1,__:[0]})]),i("li",null,[e(a,{to:"#요구사항-수집-및-정리"},{default:n(()=>t[1]||(t[1]=[o("요구사항 수집 및 정리")])),_:1,__:[1]})]),i("li",null,[e(a,{to:"#설계-단계"},{default:n(()=>t[2]||(t[2]=[o("설계 단계")])),_:1,__:[2]}),i("ul",null,[i("li",null,[e(a,{to:"#_1-ui-ux-설계"},{default:n(()=>t[3]||(t[3]=[o("1. UI/UX 설계")])),_:1,__:[3]})]),i("li",null,[e(a,{to:"#_2-데이터베이스-설계"},{default:n(()=>t[4]||(t[4]=[o("2. 데이터베이스 설계")])),_:1,__:[4]})])])]),i("li",null,[e(a,{to:"#구현-단계"},{default:n(()=>t[5]||(t[5]=[o("구현 단계")])),_:1,__:[5]}),i("ul",null,[i("li",null,[e(a,{to:"#_1-프로젝트-구조-만들기"},{default:n(()=>t[6]||(t[6]=[o("1. 프로젝트 구조 만들기")])),_:1,__:[6]})]),i("li",null,[e(a,{to:"#_2-코드-작성과-디버깅"},{default:n(()=>t[7]||(t[7]=[o("2. 코드 작성과 디버깅")])),_:1,__:[7]})])])]),i("li",null,[e(a,{to:"#테스트-및-배포-단계"},{default:n(()=>t[8]||(t[8]=[o("테스트 및 배포 단계")])),_:1,__:[8]}),i("ul",null,[i("li",null,[e(a,{to:"#_1-테스트-케이스-작성"},{default:n(()=>t[9]||(t[9]=[o("1. 테스트 케이스 작성")])),_:1,__:[9]})]),i("li",null,[e(a,{to:"#_2-배포-작업"},{default:n(()=>t[10]||(t[10]=[o("2. 배포 작업")])),_:1,__:[10]})])])]),i("li",null,[e(a,{to:"#마치며"},{default:n(()=>t[11]||(t[11]=[o("마치며")])),_:1,__:[11]})])])]),t[12]||(t[12]=i("hr",null,null,-1)),e(d,{name:"AI 활용한 개발 방법과 프롬프트 팁 정리",desc:"인공지능(AI) 기술의 발전은 소프트웨어 개발에 많은 영향을 미치고 있습니다. 이에 따라 개발자는 다양한 AI 도구를 활용하여 개발 생산성을 대폭 향상시킬 수 있게 되었죠. 하지만 반대로 이러한 흐름에 적응하지 못하면 점차 도태될 수도 있다는 우려가 있습니다. 이번 글에서는 AI를 활용한 개발 방법과 관련해, 웹 개발 프로젝트 각 단계에서 활용할 수 있는 AI 도구와 프롬프트 팁에 대해 정리해 보았습니다.",url:"https://yozm.wishket.com/magazine/detail/2575/",logo:"https://yozm.wishket.com/favicon.ico",preview:"https://yozm.wishket.com/media/news/2575/git__9_.png"}),t[13]||(t[13]=u('<p>인공지능(AI) 기술의 발전은 소프트웨어 개발에 많은 영향을 미치고 있습니다. 이에 따라 개발자는 다양한 AI 도구를 활용하여 개발 생산성을 대폭 향상시킬 수 있게 되었죠. 하지만 반대로 이러한 흐름에 적응하지 못하면 점차 도태될 수도 있다는 우려가 있습니다. 이번 글에서는 AI를 활용한 개발 방법과 관련해, 웹 개발 프로젝트 각 단계에서 활용할 수 있는 AI 도구와 프롬프트 팁에 대해 정리해 보았습니다.</p><hr><h2 id="개발에-활용할-수-있는-ai-도구" tabindex="-1"><a class="header-anchor" href="#개발에-활용할-수-있는-ai-도구"><span>개발에 활용할 수 있는 AI 도구</span></a></h2><p>먼저 간단하게 웹 개발 프로젝트에서 활용할 수 있는 AI 도구에 대해 알아보겠습니다. 우선 가장 대표적인 개발자용 AI 도구로 깃허브 코파일럿(GitHub Copilot)이 있죠. 지금은 깃허브 코파일럿 없는 개발은 상상하기 힘들 정도로 코딩 작업에 많이 활용되고 있습니다. 이외에도 깃허브 코파일럿과 비슷한 AI 도구로 아마존의 코드위스퍼러(Code Whisperer), 구글의 듀엣AI(Duet AI), 리플릿의 고스트라이터(Ghostwriter) 등이 있습니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__1_.png" alt="깃허브 코파일럿&lt;br/&gt;&lt;출처: github.com, 작가 캡처&gt;" tabindex="0" loading="lazy"><figcaption>깃허브 코파일럿<br>&lt;출처: github.com, 작가 캡처&gt;</figcaption></figure><p>이와 같은 개발자용 AI 외에도 프로젝트 각 개발 단계에서 다양한 용도로 활용할 수 있는 생성형 AI인 챗GPT와 구글 제미나이(Gemini), 엔트로픽 클로드(Claude)가 있으며, 빠르게 UI 프로토타입을 만들 수 있는 유아이자드(Uizard), 개발자 전용 AI 검색 엔진인 파인드(Phind)등도 개발 프로젝트에서 활용할 수 있는 AI 도구 중 하나입니다. 이제 각 프로젝트 단계에서 이러한 AI 도구들을 어떻게 활용할 수 있는지 살펴볼게요.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__2_.png" alt="개발자용 검색 엔진 파인드&lt;br/&gt;&lt;출처: phind.com, 작가 캡처&gt;" tabindex="0" loading="lazy"><figcaption>개발자용 검색 엔진 파인드<br>&lt;출처: phind.com, 작가 캡처&gt;</figcaption></figure><hr><h2 id="요구사항-수집-및-정리" tabindex="-1"><a class="header-anchor" href="#요구사항-수집-및-정리"><span>요구사항 수집 및 정리</span></a></h2><p>웹 개발 프로젝트는 먼저 요구사항(Requirements)을 정리하고 시작합니다. 요구사항을 정리하는 문서를 영어로 SRS(Software Requirements Specification)라고 하는데요. SRS는 소프트웨어의 기능인 측면과 비기능적인 측면에서 요구되는 항목을 정리하고 전반적인 프로젝트 방향을 설정하는 역할을 합니다. 이러한 SRS 작성할 때는 챗GPT와 같은 생성형 AI를 활용하여 템플릿을 만들고, 프로젝트 방향성을 설정하기 위한 브레인스토밍, 시장조사, 트렌드 파악, 경쟁사 분석 등을 효과적으로 수행할 수 있습니다.</p><p>다음은 학습 관리 시스템인 LMS(Learning Management System)를 개발하는 프로젝트를 예시로 프롬프트를 정리한 표입니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__4_.png" alt="SRS 작성을 위한 프롬프트 예시" tabindex="0" loading="lazy"><figcaption>SRS 작성을 위한 프롬프트 예시</figcaption></figure><p>규모가 큰 프로젝트의 경우, 훨씬 더 복잡한 SRS를 작성하기도 합니다. 따라서 몇 번의 프롬프트로 완벽한 문서를 만들기는 어렵습니다. 다만 이처럼 생성형 AI를 이용하면 프로젝트 초기에 아무것도 없는 상태에서 기본적인 SRS 포맷을 작성하고, 어떤 요소들을 정리해야 하는지 등을 미리 체크할 수 있다는 장점이 있습니다. 아울러, SRS의 각 섹션에 대한 상세한 지침과 더불어 점진적으로 템플릿을 보완하는 방식으로 문서를 고도화할 수도 있습니다.</p><hr><h2 id="설계-단계" tabindex="-1"><a class="header-anchor" href="#설계-단계"><span>설계 단계</span></a></h2><h3 id="_1-ui-ux-설계" tabindex="-1"><a class="header-anchor" href="#_1-ui-ux-설계"><span>1. UI/UX 설계</span></a></h3><p>규모가 작은 프로젝트나 빠르게 프로토타입을 개발해야 하는 경우에는 개발자가 UI/UX 설계를 직접 하기도 합니다. 이 과정에서는 유아이자드(UIzard) 같은 AI 도구를 활용해 기본 레이아웃이나 와이어프레임을 효율적으로 생성할 수 있는데요. 유아이자드는 피그마(Figma)와 유사하게 버튼이나 폼 요소를 드래그 앤 드랍(Drag &amp; Drop)으로 배치할 수 있으며, 오토디자이너(Autodesigner)에 프롬프트를 입력하여 빠르게 AI가 제안하는 UI를 확인할 수 있습니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__3_.png" alt="Uizard 화면&lt;br/&gt;&lt;출처: uizard.io, 작가 캡처&gt;" tabindex="0" loading="lazy"><figcaption>Uizard 화면<br>&lt;출처: uizard.io, 작가 캡처&gt;</figcaption></figure><p>유아이자드의 AI 기능은 대시보드 왼쪽의 도구 모음에 있습니다. 버튼 이름은 Magic이며, 이 버튼을 클릭하면 AI 기능 목록이 나타납니다. 그리고 Autodesigner 기능을 선택하고, 디자인하고자 하는 대상 기기(모바일, 태블릿, 웹)와 UI에 대한 설명을 입력하면 AI를 통해 자동으로 와이어프레임을 생성할 수 있습니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__0_.gif" alt="Uizard AI 기능을 통한 와이어프레임 생성&lt;br/&gt;&lt;출처: uizard.io&gt;" tabindex="0" loading="lazy"><figcaption>Uizard AI 기능을 통한 와이어프레임 생성<br>&lt;출처: uizard.io&gt;</figcaption></figure><p>유아이자드 외에도 UI 작업에 챗GPT와 같은 생성형 AI를 통해 색상이나 글꼴, 그래픽 디자인과 같은 시각적 요소에 대한 영감을 얻을 수도 있습니다. 예를 들어, 아래 프롬프트와 같이 개발하고자 하는 웹사이트나 앱의 기본 레이아웃, 내비게이션 구조, SEO 전략 등을 제안하도록 할 수 있습니다.</p><ul><li>[특정 웹 사이트 또는 앱]의 브랜딩과 일치하는 색상 구성 및 글꼴 스타일에 대한 아이디어를 제시하라.</li><li>[특정 웹 사이트 또는 앱]의 메인 페이지에 사용자 친화적인 레이아웃을 제안하라.</li><li>[특정 웹 사이트 또는 앱]의 내비게이션 구조를 설계하고, 각 페이지에 적합한 SEO 전략을 제시하라.</li></ul><h3 id="_2-데이터베이스-설계" tabindex="-1"><a class="header-anchor" href="#_2-데이터베이스-설계"><span>2. 데이터베이스 설계</span></a></h3><p>데이터베이스를 설계할 때도 AI 도구를 활용할 수 있습니다. 저는 월킥(Workik)이라는 서비스를 사용해 봤는데요. 프롬프트 입력창에 프로젝트에 대한 설명을 입력하면, 이에 맞는 DB 스키마와 테이블 등을 자동으로 생성합니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__5_.png" alt="Workik 화면&lt;br/&gt;&lt;출처: workik.com, 작가 캡처&gt;" tabindex="0" loading="lazy"><figcaption>Workik 화면<br>&lt;출처: workik.com, 작가 캡처&gt;</figcaption></figure><p>데이터베이스 설계를 위한 AI 도구로는 월킥 외에도 스키마 AI(Schema AI)와 앱 마스터(AppMaste)의 데이터 모델 디자이너(Data Models Designer) 같은 도구들이 있습니다. 다만 이러한 데이터베이스 설계용 AI 도구에는 여러 종류가 있으며, 아직 이 분야의 시장 전체를 압도하는 제품은 없는 것으로 보입니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__6_.png" alt="Schema AI 화면&lt;br/&gt;&lt;출처: backendless.com, 작가 캡처&gt;" tabindex="0" loading="lazy"><figcaption>Schema AI 화면<br>&lt;출처: backendless.com, 작가 캡처&gt;</figcaption></figure><p>앞서 살펴본 UI/UX 설계와 마찬가지로 생성형 AI는 데이터베이스를 설계할 때도 활용할 수 있습니다. 아래 예시와 같은 프롬프트를 통해 프로젝트에 맞는 데이터베이스 유형을 결정하고, 테이블 및 필드 설계, 성능 최적화와 비용 관리, 보안 설정 등에 대한 팁을 얻을 수 있습니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__7_.png" alt="데이터베이스 설계 프롬프트 예시" tabindex="0" loading="lazy"><figcaption>데이터베이스 설계 프롬프트 예시</figcaption></figure><hr><h2 id="구현-단계" tabindex="-1"><a class="header-anchor" href="#구현-단계"><span>구현 단계</span></a></h2><h3 id="_1-프로젝트-구조-만들기" tabindex="-1"><a class="header-anchor" href="#_1-프로젝트-구조-만들기"><span>1. 프로젝트 구조 만들기</span></a></h3><p>구현 단계에서 본격적인 코드 작업을 하기에 앞서 전반적인 프로젝트 구조를 만들어야 합니다. 이 경우에도 생성형 AI로 기술 스택이나 프레임워크에 대한 인사이트를 얻고, 전반적인 프로젝트 구조를 만들 수 있습니다. 아울러 보일러플레이트 코드(Boilerplate code)를 빠르게 생성하여 코딩 작업 속도를 더욱 빠르게 할 수도 있죠.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__8_.png" alt="클로드를 통한 보일러플레이트 코드 생성" tabindex="0" loading="lazy"><figcaption>클로드를 통한 보일러플레이트 코드 생성</figcaption></figure><h3 id="_2-코드-작성과-디버깅" tabindex="-1"><a class="header-anchor" href="#_2-코드-작성과-디버깅"><span>2. 코드 작성과 디버깅</span></a></h3><p>코드 작업에서는 앞서 살펴본 깃허브 코파일럿과 같은 AI 페어 프로그래밍 도구를 사용하여 작업 효율을 높일 수 있습니다. 이러한 AI 페어 프로그래밍 도구는 대부분 비주얼 스튜디오 코드(VSCode)나 인텔리제이(IntelliJ) 같은 IDE에 플러그인을 설치하여 사용합니다.</p><p>다만 AI 페어 프로그래밍 도구를 사용할 때, 한 가지 주의할 점은 개발자가 충분히 코드를 이해한 후 적용해야 한다는 점입니다. AI가 제시한 코드는 100% 완벽하지 않기 때문입니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__9_.png" alt="깃허브 코파일럿 플러그인" tabindex="0" loading="lazy"><figcaption>깃허브 코파일럿 플러그인</figcaption></figure><p>디버깅 작업에서도 AI 페어 프로그래밍 도구나 생성형 AI를 이용하면 버그를 빠르게 처리할 수 있습니다. 예를 들어, 생성형 AI를 이용할 때는 프롬프트 창에 코드와 에러 메시지를 복사/붙여넣기 한 후, 아래와 같이 ‘에러 원인을 파악하고 해결책을 제시하라’는 프롬프트를 입력하면 됩니다. 이밖에 코드를 리팩토링할 때도 생성형 AI를 통해 효율적으로 작업할 수 있습니다.</p><ul><li>에러 메시지를 분석하고 에러의 원인과 기존 코드에 적용할 수 있는 해결책을 제시하라.</li><li>제시한 함수의 성능을 향상시키기 위한 최적화 방안을 제안하라.</li><li>제시한 코드의 가독성을 향상시키고, 유지 보수를 용이하게 하려면 어떻게 리팩토링해야 하는지 제시하라.</li></ul><hr><h2 id="테스트-및-배포-단계" tabindex="-1"><a class="header-anchor" href="#테스트-및-배포-단계"><span>테스트 및 배포 단계</span></a></h2><h3 id="_1-테스트-케이스-작성" tabindex="-1"><a class="header-anchor" href="#_1-테스트-케이스-작성"><span>1. 테스트 케이스 작성</span></a></h3><p>테스트 케이스를 작성할 때도 생성형 AI를 활용하여 많은 시간과 노력을 줄일 수 있습니다. 아래 예시와 같이 테스트 해야 하는 코드와 시나리오를 설명하는 프롬프트를 입력하면, 일반적인 테스트 케이스부터 예외적인 상황까지 고려한 테스트 코드를 작성해 줍니다.</p><figure><img src="https://yozm.wishket.com/media/news/2575/git__10_.png" alt="테스트 유형별 프롬프트 예시" tabindex="0" loading="lazy"><figcaption>테스트 유형별 프롬프트 예시</figcaption></figure>',45)),l(" TODO 테이블 화 "),t[14]||(t[14]=i("p",null,"참고로 데이터베이스나 도커(Docker) 등이 연동된 복잡한 테스트 시나리오의 경우에는 생성형 AI의 테스트 코드가 만족스럽지 않을 수 있습니다. 이런 경우에는 먼저 수동으로 몇 가지 테스트 케이스를 작성한 후, 이를 토대로 생성형 AI에 추가 테스트를 작성하도록 하는 방법이 있습니다.",-1)),t[15]||(t[15]=i("h3",{id:"_2-배포-작업",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_2-배포-작업"},[i("span",null,"2. 배포 작업")])],-1)),t[16]||(t[16]=i("p",null,"마지막 배포 단계에서도 챗GPT와 같은 생성형 AI를 활용할 수 있습니다. 예를 들어, 배포 작업을 위한 체크리스트 작성과 자동화를 위한 bash 스크립트 작성 등에 활용할 수 있습니다. 아울러 프로덕션 환경에서의 주요 설정과 배포 과정 중 발생할 수 있는 서버 타임아웃 오류에 대한 해결 방법도 제안받을 수 있습니다. 또한 무중단 배포에 대한 모범 사례(Best Practice)도 생성형 AI를 통해 빠르게 파악할 수 있습니다.",-1)),t[17]||(t[17]=i("figure",null,[i("img",{src:"https://yozm.wishket.com/media/news/2575/git__11_.png",alt:"배포 단계 프롬프트 예시",tabindex:"0",loading:"lazy"}),i("figcaption",null,"배포 단계 프롬프트 예시")],-1)),l(" TODO 테이블 화 "),t[18]||(t[18]=i("hr",null,null,-1)),t[19]||(t[19]=i("h2",{id:"마치며",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#마치며"},[i("span",null,"마치며")])],-1)),t[20]||(t[20]=i("p",null,"지금까지 개발 프로젝트의 각 단계에서 AI 도구를 어떻게 활용할 수 있는지 살펴보았습니다. 이렇게 AI 도구를 활용하면 요구사항 수집부터 설계, 구현, 테스트, 배포에 이르기까지 더욱 효율적인 작업이 가능합니다. 따라서 개발자는 다양한 AI 도구를 사용해 보고 각각의 장단점을 파악하여 최적의 활용을 도모해야 합니다.",-1)),t[21]||(t[21]=i("p",null,"다만 AI는 환각(hallucination), 지식재산권 및 개인정보 이슈, 보안 위험, 편향(Bias) 등의 문제가 발생할 수 있으므로, AI로부터 도출된 결과물은 항상 꼼꼼히 검토하고 적용하는 것이 중요합니다.",-1)),l(" TODO: add ARTICLE CARD "),e(r,p(g({title:"AI 활용한 개발 방법과 프롬프트 팁 정리",desc:"인공지능(AI) 기술의 발전은 소프트웨어 개발에 많은 영향을 미치고 있습니다. 이에 따라 개발자는 다양한 AI 도구를 활용하여 개발 생산성을 대폭 향상시킬 수 있게 되었죠. 하지만 반대로 이러한 흐름에 적응하지 못하면 점차 도태될 수도 있다는 우려가 있습니다. 이번 글에서는 AI를 활용한 개발 방법과 관련해, 웹 개발 프로젝트 각 단계에서 활용할 수 있는 AI 도구와 프롬프트 팁에 대해 정리해 보았습니다.",link:"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2575.html",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16)])}const x=h(I,[["render",k]]),S=JSON.parse('{"path":"/yozm.wishket.com/2575.html","title":"AI 활용한 개발 방법과 프롬프트 팁 정리","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"AI 활용한 개발 방법과 프롬프트 팁 정리","description":"Article(s) > AI 활용한 개발 방법과 프롬프트 팁 정리","icon":"fas fa-language","category":["AI","LLM","Article(s)"],"tag":["blog","yozm.wishket.com","ai","artificial-intelligence","llm","large-language-models"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AI 활용한 개발 방법과 프롬프트 팁 정리\\",\\"image\\":[\\"https://yozm.wishket.com/media/news/2575/git__1_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__2_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__4_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__3_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__0_.gif\\",\\"https://yozm.wishket.com/media/news/2575/git__5_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__6_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__7_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__8_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__9_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__10_.png\\",\\"https://yozm.wishket.com/media/news/2575/git__11_.png\\"],\\"datePublished\\":\\"2024-05-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"곰씨네 IT 블로그\\",\\"url\\":\\"https://yozm.wishket.com/magazine/@wisizkai/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2575.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"AI 활용한 개발 방법과 프롬프트 팁 정리"}],["meta",{"property":"og:description","content":"Article(s) > AI 활용한 개발 방법과 프롬프트 팁 정리"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yozm.wishket.com/media/news/2575/git__9_.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yozm.wishket.com/media/news/2575/git__9_.png"}],["meta",{"name":"twitter:image:alt","content":"AI 활용한 개발 방법과 프롬프트 팁 정리"}],["meta",{"property":"article:author","content":"곰씨네 IT 블로그"}],["meta",{"property":"article:tag","content":"large-language-models"}],["meta",{"property":"article:tag","content":"llm"}],["meta",{"property":"article:tag","content":"artificial-intelligence"}],["meta",{"property":"article:tag","content":"ai"}],["meta",{"property":"article:tag","content":"yozm.wishket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-05-07T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > AI 활용한 개발 방법과 프롬프트 팁 정리"},{"property":"og:description","content":"AI 활용한 개발 방법과 프롬프트 팁 정리"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2575.html"}]],"prev":"/ai/llm/articles/README.md","date":"2024-05-07T00:00:00.000Z","isOriginal":false,"author":[{"name":"곰씨네 IT 블로그","url":"https://yozm.wishket.com/magazine/@wisizkai/"}],"cover":"https://yozm.wishket.com/media/news/2575/git__9_.png"},"git":{},"readingTime":{"minutes":1.21,"words":363},"filePathRelative":"yozm.wishket.com/2575.md","copyright":{"author":"곰씨네 IT 블로그"}}');export{x as comp,S as data};
