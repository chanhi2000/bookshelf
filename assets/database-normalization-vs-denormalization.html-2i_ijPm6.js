import{_ as b}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as e,f as o,b as y,a as z,t as x,n as u,g as p,w as n,e as a,r,o as v}from"./app-BVguHYKu.js";const w={},k={id:"frontmatter-title-관련",tabindex:"-1"},D={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"table-of-contents"},S={class:"hint-container info"},N={href:"https://twitter.com/amitiitbhu",target:"_blank",rel:"noopener noreferrer"},C={href:"https://linkedin.com/in/amit-shekhar-iitbhu",target:"_blank",rel:"noopener noreferrer"},T={href:"https://youtube.com/@amitshekhar",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/amitshekhariitbhu",target:"_blank",rel:"noopener noreferrer"},I={href:"https://twitter.com/outcome_school",target:"_blank",rel:"noopener noreferrer"},V={href:"https://linkedin.com/company/outcomeschool",target:"_blank",rel:"noopener noreferrer"},M={href:"https://youtube.com/@OutcomeSchool",target:"_blank",rel:"noopener noreferrer"},O={href:"http://github.com/OutcomeSchool",target:"_blank",rel:"noopener noreferrer"};function R(h,t){const d=r("VPCard"),m=r("router-link"),c=r("SiteInfo"),g=r("Tabs"),s=r("VPIcon");return v(),f("div",null,[e("h1",k,[e("a",D,[e("span",null,x(h.$frontmatter.title)+" 관련",1)])]),o(d,u(p({title:"Data Science > Article(s)",desc:"Article(s)",link:"/data-science/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",A,[e("ul",null,[e("li",null,[o(m,{to:"#database-normalization"},{default:n(()=>t[0]||(t[0]=[a("Database Normalization")])),_:1,__:[0]})]),e("li",null,[o(m,{to:"#database-denormalization"},{default:n(()=>t[1]||(t[1]=[a("Database Denormalization")])),_:1,__:[1]})])])]),t[38]||(t[38]=e("hr",null,null,-1)),o(c,{name:"Database Normalization vs Denormalization",desc:"In this blog, we will learn about database normalization and denormalization.",url:"https://outcomeschool.com/database-normalization-vs-denormalization",logo:"https://outcomeschool.com/static/favicons/apple-touch-icon.png",preview:"https://outcomeschool.com/static/images/blog/database-normalization-vs-denormalization.png"}),t[39]||(t[39]=y('<p>In this blog, we will learn about database <strong>normalization</strong> and <strong>denormalization</strong>.</p><p>Database normalization and denormalization are two different ways for database design, each with pros and cons. Let&#39;s learn today in detail.</p><p>Learning by example is the best way to learn, let&#39;s start with an example.</p><p>Consider the following <code>users</code> table in a database:</p><table><thead><tr><th style="text-align:left;"><code>id</code></th><th style="text-align:left;"><code>name</code></th><th style="text-align:left;"><code>username</code></th><th style="text-align:left;"><code>city</code></th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">Amit Shekhar</td><td style="text-align:left;">amitshekhar</td><td style="text-align:left;"><strong>Gurgaon</strong></td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Pallavi</td><td style="text-align:left;">pallavi</td><td style="text-align:left;"><strong>Gurgaon</strong></td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Sachin</td><td style="text-align:left;">sachin</td><td style="text-align:left;"><strong>Mumbai</strong></td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">Rahul</td><td style="text-align:left;">rahul</td><td style="text-align:left;">Varanasi</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">Pankaj</td><td style="text-align:left;">pankaj</td><td style="text-align:left;"><strong>Mumbai</strong></td></tr></tbody></table><p>Here, we can observe that the city <code>Gurgaon</code> and <code>Mumbai</code> is getting duplicated. Hence it is <strong>denormalized</strong>. This way of designing the database is called Database <strong>Denormalization</strong>.</p><p>Also, consider a scenario in which the city name may change due to some reason, for example, <code>Gurgaon</code> to <code>Gurugram</code>. We will have to change at multiple places, which may lead to data inconsistencies.</p><p>Now, we know the issues with the <strong>denormalized</strong> design. Let&#39;s fix this with the <strong>normalized</strong> design.</p><p>Consider the following <code>users</code> table in a database:</p><table><thead><tr><th style="text-align:left;"><code>id</code></th><th style="text-align:left;"><code>name</code></th><th style="text-align:left;"><code>username</code></th><th style="text-align:left;"><code>cityId</code></th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">Amit Shekhar</td><td style="text-align:left;">amitshekhar</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Pallavi</td><td style="text-align:left;">pallavi</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Sachin</td><td style="text-align:left;">sachin</td><td style="text-align:left;">2</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">Rahul</td><td style="text-align:left;">rahul</td><td style="text-align:left;">3</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">Pankaj</td><td style="text-align:left;">pankaj</td><td style="text-align:left;">2</td></tr></tbody></table><p>Consider the following <code>cities</code> table in a database:</p><table><thead><tr><th style="text-align:left;"><code>id</code></th><th style="text-align:left;"><code>name</code></th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">Gurgaon</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Mumbai</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Varanasi</td></tr></tbody></table><p>Here, city names are not getting duplicated, hence storage reduction.</p><p>Also, we can change the city name easily by changing it at a single place if got changed due to some reason, hence no data inconsistencies as it is easy to change.</p><p>Hence it is <strong>normalized</strong>. This way of designing the database is called Database <strong>Normalization</strong>.</p><p>Now that we have understood Database Normalization and Denormalization with the help of examples, let&#39;s see the pros, cons, and use cases of both ways.</p><hr><h2 id="database-normalization" tabindex="-1"><a class="header-anchor" href="#database-normalization"><span>Database Normalization</span></a></h2><p>Database normalization is the way of designing the database focusing on minimizing data duplication and ensuring data integrity.</p>',19)),o(g,{data:[{id:"Pros"},{id:"Cons"},{id:"Use Case"}]},{title0:n(({value:i,isActive:l})=>t[2]||(t[2]=[a("Pros")])),title1:n(({value:i,isActive:l})=>t[3]||(t[3]=[a("Cons")])),title2:n(({value:i,isActive:l})=>t[4]||(t[4]=[a("Use Case")])),tab0:n(({value:i,isActive:l})=>t[5]||(t[5]=[e("ul",null,[e("li",null,"Minimizes data duplication, hence minimizes storage."),e("li",null,"Easy to update, ensures data integrity.")],-1)])),tab1:n(({value:i,isActive:l})=>t[6]||(t[6]=[e("ul",null,[e("li",null,"May slow down query performance, especially for queries that require joining tables.")],-1)])),tab2:n(({value:i,isActive:l})=>t[7]||(t[7]=[e("p",null,"The system in which the data integrity is important, for example, Banking Systems.",-1)])),_:1}),t[40]||(t[40]=e("hr",null,null,-1)),t[41]||(t[41]=e("h2",{id:"database-denormalization",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#database-denormalization"},[e("span",null,"Database Denormalization")])],-1)),t[42]||(t[42]=e("p",null,"Database denormalization is the way of designing the database focusing on query performance.",-1)),o(g,{data:[{id:"Pros"},{id:"Cons"},{id:"Use Case"}]},{title0:n(({value:i,isActive:l})=>t[8]||(t[8]=[a("Pros")])),title1:n(({value:i,isActive:l})=>t[9]||(t[9]=[a("Cons")])),title2:n(({value:i,isActive:l})=>t[10]||(t[10]=[a("Use Case")])),tab0:n(({value:i,isActive:l})=>t[11]||(t[11]=[e("ul",null,[e("li",null,"Better performance as there is no need to join tables.")],-1)])),tab1:n(({value:i,isActive:l})=>t[12]||(t[12]=[e("ul",null,[e("li",null,"Increases data redundancy that leads to more storage requirements."),e("li",null,"Makes data updates more complex and prone to inconsistencies if not carefully managed.")],-1)])),tab2:n(({value:i,isActive:l})=>t[13]||(t[13]=[e("p",null,"The system in which the query performance is important, for example, Real-time Analytics Systems.",-1)])),_:1}),t[43]||(t[43]=e("p",null,[a("This was all about database "),e("strong",null,"normalization"),a(" and "),e("strong",null,"denormalization"),a(".")],-1)),t[44]||(t[44]=e("p",null,"That's it for now.",-1)),t[45]||(t[45]=e("p",null,"Thanks",-1)),e("div",S,[t[35]||(t[35]=e("p",{class:"hint-container-title"},"Amit Shekhar",-1)),t[36]||(t[36]=e("p",null,"You can connect with me on:",-1)),e("ul",null,[e("li",null,[e("a",N,[t[14]||(t[14]=a("X (")),o(s,{icon:"fa-brands fa-x-twitter"}),t[15]||(t[15]=e("code",null,"amitiitbhu",-1))])]),e("li",null,[e("a",C,[t[16]||(t[16]=a("LinkedIn (")),o(s,{icon:"fa-brands fa-linkedin"}),t[17]||(t[17]=e("code",null,"amit-shekhar-iitbhu",-1))])]),e("li",null,[e("a",T,[t[18]||(t[18]=a("YouTube (")),o(s,{icon:"fa-brands fa-youtube"}),t[19]||(t[19]=e("code",null,"amitshekhar",-1)),t[20]||(t[20]=a(")"))])]),e("li",null,[e("a",P,[t[21]||(t[21]=a("GitHub (")),o(s,{icon:"iconfont icon-github"}),t[22]||(t[22]=e("code",null,"amitshekhariitbhu",-1))])])]),t[37]||(t[37]=e("p",null,"Follow Outcome School on:",-1)),e("ul",null,[e("li",null,[e("a",I,[t[23]||(t[23]=a("X (")),o(s,{icon:"fa-brands fa-x-twitter"}),t[24]||(t[24]=e("code",null,"outcome_school",-1)),t[25]||(t[25]=a(")"))])]),e("li",null,[e("a",V,[t[26]||(t[26]=a("LinkedIn (")),o(s,{icon:"fa-brands fa-linkedin"}),t[27]||(t[27]=e("code",null,"outcomeschool",-1)),t[28]||(t[28]=a(")"))])]),e("li",null,[e("a",M,[t[29]||(t[29]=a("YouTube (")),o(s,{icon:"fa-brands fa-youtube"}),t[30]||(t[30]=e("code",null,"OutcomeSchool",-1)),t[31]||(t[31]=a(")"))])]),e("li",null,[e("a",O,[t[32]||(t[32]=a("GitHub (")),o(s,{icon:"iconfont icon-github"}),t[33]||(t[33]=e("code",null,"OutcomeSchool",-1)),t[34]||(t[34]=a(")"))])])])]),z(" TODO: add ARTICLE CARD "),o(d,u(p({title:"Database Normalization vs Denormalization",desc:"In this blog, we will learn about database normalization and denormalization.",link:"https://chanhi2000.github.io/bookshelf/outcomeschool.com/database-normalization-vs-denormalization.html",logo:"https://outcomeschool.com/static/favicons/apple-touch-icon.png",background:"rgba(78,70,220,0.2)"})),null,16)])}const E=b(w,[["render",R]]),U=JSON.parse('{"path":"/outcomeschool.com/database-normalization-vs-denormalization.html","title":"Database Normalization vs Denormalization","lang":"en-US","frontmatter":{"lang":"en-US","title":"Database Normalization vs Denormalization","description":"Article(s) > Database Normalization vs Denormalization","icon":"fas fa-database","category":["Data Science","Article(s)"],"tag":["blog","outcomeschool.com","data-science"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Database Normalization vs Denormalization\\",\\"image\\":[\\"https://outcomeschool.com/static/images/blog/database-normalization-vs-denormalization.png\\"],\\"datePublished\\":\\"2024-07-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amit Shekhar\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/outcomeschool.com/database-normalization-vs-denormalization.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Database Normalization vs Denormalization"}],["meta",{"property":"og:description","content":"Article(s) > Database Normalization vs Denormalization"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://outcomeschool.com/static/images/blog/database-normalization-vs-denormalization.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://outcomeschool.com/static/images/blog/database-normalization-vs-denormalization.png"}],["meta",{"name":"twitter:image:alt","content":"Database Normalization vs Denormalization"}],["meta",{"property":"article:author","content":"Amit Shekhar"}],["meta",{"property":"article:tag","content":"data-science"}],["meta",{"property":"article:tag","content":"outcomeschool.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-07-11T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Database Normalization vs Denormalization"},{"property":"og:description","content":"Database Normalization vs Denormalization"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/outcomeschool.com/database-normalization-vs-denormalization.html"}]],"prev":"/data-science/articles/README.md","date":"2024-07-11T00:00:00.000Z","isOriginal":false,"author":"Amit Shekhar","cover":"https://outcomeschool.com/static/images/blog/database-normalization-vs-denormalization.png"},"git":{},"readingTime":{"minutes":2.43,"words":728},"filePathRelative":"outcomeschool.com/database-normalization-vs-denormalization.md","copyright":{"author":"Amit Shekhar"}}');export{E as comp,U as data};
