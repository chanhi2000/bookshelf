import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,d as s,f as e,b as p,e as a,t as b,n as u,g as c,w as l,r as i,o as f}from"./app-BVguHYKu.js";const d="/bookshelf/assets/image/d2.naver.com/6532276/1.png",A="/bookshelf/assets/image/d2.naver.com/6532276/3.png",y={},S={id:"frontmatter-title-관련",tabindex:"-1"},C={class:"header-anchor",href:"#frontmatter-title-관련"},w={class:"table-of-contents"},U={href:"https://www.chromium.org/Home/chromium-privacy/privacy-sandbox",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/chromium/chromium/blob/ce52a06958beedd09141a567aa90c562ac50ffd2/third_party/blink/renderer/core/frame/navigator_id.cc#L67%22",target:"_blank",rel:"noopener noreferrer"},q={href:"https://tools.ietf.org/html/draft-ietf-tls-grease-01",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/naver/egjs-agent",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/chromium/chromium/blob/ce52a06958beedd09141a567aa90c562ac50ffd2/third_party/blink/renderer/core/frame/navigator_id.cc#L67",target:"_blank",rel:"noopener noreferrer"},O={id:"safari-추측",tabindex:"-1"},H={class:"header-anchor",href:"#safari-추측"};function D(g,n){const r=i("VPCard"),o=i("router-link"),t=i("VPIcon"),m=i("SiteInfo");return f(),v("div",null,[s("h1",S,[s("a",C,[s("span",null,b(g.$frontmatter.title)+" 관련",1)])]),e(r,u(c({title:"Node.js > Article(s)",desc:"Article(s)",link:"/programming/js-node/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",w,[s("ul",null,[s("li",null,[e(o,{to:"#ua-프리징"},{default:l(()=>n[0]||(n[0]=[a("UA 프리징")])),_:1,__:[0]})]),s("li",null,[e(o,{to:"#ua-프리징-대응-방안"},{default:l(()=>n[1]||(n[1]=[a("UA 프리징 대응 방안")])),_:1,__:[1]}),s("ul",null,[s("li",null,[e(o,{to:"#user-agent-data"},{default:l(()=>n[2]||(n[2]=[a("User-Agent Data")])),_:1,__:[2]})]),s("li",null,[e(o,{to:"#동기-방식의-대응-방안"},{default:l(()=>n[3]||(n[3]=[a("동기 방식의 대응 방안")])),_:1,__:[3]})]),s("li",null,[e(o,{to:"#safari-추측"},{default:l(()=>[e(t,{icon:"fa-brands fa-safari"}),n[4]||(n[4]=a("Safari 추측"))]),_:1,__:[4]})]),s("li",null,[e(o,{to:"#비동기-방식으로-전환"},{default:l(()=>n[5]||(n[5]=[a("비동기 방식으로 전환")])),_:1,__:[5]})])])]),s("li",null,[e(o,{to:"#마치며"},{default:l(()=>n[6]||(n[6]=[a("마치며")])),_:1,__:[6]})])])]),n[68]||(n[68]=s("hr",null,null,-1)),e(m,{name:"User-Agent Client Hints의 도입, UA 프리징을 대비하라 | NAVER D2",desc:"User-Agent Client Hints의 도입, UA 프리징을 대비하라",url:"https://d2.naver.com/helloworld/6532276",logo:"/assets/image/d2.naver.com/favicon.ico",preview:"/assets/image/d2.naver.com/6532276/banner.jpg"}),n[69]||(n[69]=s("p",null,"이 글에서는 클라이언트 입장에서 User-Agent Client Hints를 다룹니다.",-1)),n[70]||(n[70]=s("p",null,"지금까지 웹 서비스는 User-Agent HTTP 헤더에 포함된 User-Agent string에서 브라우저, OS, 사용자의 기기 정보 등 사용자 에이전트 정보를 얻을 수 있었습니다. User-Agent string을 이용하는 이유는 주로 다음과 같습니다.",-1)),n[71]||(n[71]=s("ol",null,[s("li",null,"특정 버전의 버그"),s("li",null,"OS의 동작 차이"),s("li",null,"버전에 따른 동작 차이"),s("li",null,"사용자 에이전트에 따라 보여줄 콘텐츠 협상")],-1)),n[72]||(n[72]=s("p",null,"우리는 위와 같은 다양한 이유로 User-Agent string을 사용해 왔지만 User-Agent string에는 많은 엔트로피(정보량)가 담겨 있어 개인정보 침해 문제가 있을 수 있습니다.",-1)),s("p",null,[n[8]||(n[8]=a("그래서 Chrome은 ")),s("a",U,[e(t,{icon:"fas fa-globe"}),n[7]||(n[7]=a("개인정보 보호를 위한 샌드박스 프로젝트"))]),n[9]||(n[9]=a(" 중 ")),n[10]||(n[10]=s("strong",null,"Client Hints",-1)),n[11]||(n[11]=a(" 도입을 시도했습니다. Client Hints를 쉽게 말하자면 클라이언트 및 에이전트의 정보라고 할 수 있으며 가져올 정보를 명시합니다. 그렇기 때문에 사용자는 서버 및 클라이언트가 어떤 정보를 요구하는지 알 수 있습니다. 지금까지의 Client Hints 관련 Chrome 릴리즈 사항은 다음과 같습니다."))]),n[73]||(n[73]=s("ul",null,[s("li",null,"Chrome 46 - HTTP Client Hints 실험적 도입"),s("li",null,"Chrome 77 - Freeze-User-Agent 플래그 추가"),s("li",null,"Chrome 82, 83 (2020.05) - User-Agent Client Hints 실험적 도입"),s("li",null,"Chrome 84 (2020.07) - User-Agent Client Hints 인터페이스 변경")],-1)),n[74]||(n[74]=s("p",null,"이 글에서는 이에 따라 앞으로 어떤 변화가 있을지, 이 변화에 어떻게 대응해야 할지 알아보겠습니다.",-1)),n[75]||(n[75]=s("hr",null,null,-1)),n[76]||(n[76]=s("h2",{id:"ua-프리징",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ua-프리징"},[s("span",null,"UA 프리징")])],-1)),n[77]||(n[77]=s("p",null,"Chrome 83부터 User-Agent Client Hints가 실험적으로 도입되었고 가장 큰 이슈는 바로 User-Agent string 프리징(이하 UA 프리징)이다. UA 프리징으로 달라지는 점은 다음과 같다.",-1)),s("ul",null,[s("li",null,[n[20]||(n[20]=a("다음 속성값이 고정된다. ")),s("ul",null,[n[16]||(n[16]=s("li",null,[s("code",null,"navigator.userAgent")],-1)),n[17]||(n[17]=s("li",null,[s("code",null,"navigator.appVersion")],-1)),s("li",null,[n[13]||(n[13]=s("code",null,"navigator.platform",-1)),n[14]||(n[14]=a(" (")),s("a",j,[e(t,{icon:"iconfont icon-github"}),n[12]||(n[12]=a("Android Chrome에서는 Linux armv8l으로 고정"))]),n[15]||(n[15]=a(")"))]),n[18]||(n[18]=s("li",null,[s("code",null,"navigator.productSub")],-1)),n[19]||(n[19]=s("li",null,[s("code",null,"navigator.vendor")],-1))])]),n[21]||(n[21]=s("li",null,"Chrome에서 안드로이드를 제외한 모든 운영체제는 윈도우 10으로 변한다.",-1)),n[22]||(n[22]=s("li",null,"동기 방식으로 OS 이름, OS 버전, 모델명을 알 수 없다.",-1)),n[23]||(n[23]=s("li",null,[s("code",null,"navigator.userAgent"),a(" 대신 "),s("code",null,"navigator.userAgentData"),a("을 사용해야 한다. "),s("ul",null,[s("li",null,"브라우저 버전은 메이저 버전만 나타난다."),s("li",null,"OS 이름, 버전, 모델명, 브라우저의 풀버전은 비동기 방식으로 알 수 있다.")])],-1))]),n[78]||(n[78]=s("p",null,"UA 프리징은 다음 플래그를 활성화하면 테스트할 수 있다.",-1)),s("ul",null,[s("li",null,[e(t,{icon:"fas fa-globe"}),n[24]||(n[24]=s("code",null,"chrome://flags/#enable-experimental-web-platform-features",-1))]),s("li",null,[e(t,{icon:"fas fa-globe"}),n[25]||(n[25]=s("code",null,"chrome://flags/#freeze-user-agent",-1))])]),n[79]||(n[79]=p(`<p>UA 프리징 테스트 결과 <code>navigator.userAgent</code>를 사용하여 얻은 User-Agent string 값은 다음과 같다.</p><ul><li>Galaxy Z Flip, Android 10, Chrome 85.0.4183.81 <ul><li>전: <code>Mozila/5.0 (Linux; Android 10; SM-F700N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.81 Mobile Safari/537.36</code></li><li>후: <code>Mozila/5.0 (Linux; Android 9; Unspecified Device) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.0.0 Mobile Safari/537.36</code></li></ul></li><li>Mac OS X 10.15.4, Chrome Canary 87.0.4243.0 <ul><li>전: <code>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4243.0 Safari/537.36</code></li><li>후: <code>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.0.0 Safari/537.36</code></li></ul></li></ul><p>UA 프리징 결과 기기명, OS의 정보, 브라우저의 버전이 불분명해진 것을 확인할 수 있다. 앞으로 User-Agent string을 고정된 값으로 제공하기 위해 값은 점점 더 간소해질 수 있다.</p><hr><h2 id="ua-프리징-대응-방안" tabindex="-1"><a class="header-anchor" href="#ua-프리징-대응-방안"><span>UA 프리징 대응 방안</span></a></h2><h3 id="user-agent-data" tabindex="-1"><a class="header-anchor" href="#user-agent-data"><span>User-Agent Data</span></a></h3><p>UA 프리징의 대응 방안으로 User-Agent string을 세분화해 Object 형식으로 나타낸 User-Agent Data를 사용할 수 있다. 인터페이스는 다음과 같다.</p><div class="language-mipsasm line-numbers-mode" data-highlighter="prismjs" data-ext="mipsasm"><pre><code class="language-mipsasm"><span class="line">dictionary NavigatorUABrandVersion {  </span>
<span class="line">  DOMString brand;</span>
<span class="line">  DOMString version;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line">dictionary UADataValues {  </span>
<span class="line">  DOMString platform;</span>
<span class="line">  DOMString platformVersion;</span>
<span class="line">  DOMString architecture;</span>
<span class="line">  DOMString model;</span>
<span class="line">  DOMString uaFullVersion;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line">[Exposed=(Window,Worker)]</span>
<span class="line">interface NavigatorUAData {  </span>
<span class="line">  readonly attribute FrozenArray&gt;NavigatorUABrandVersion&gt; brands;</span>
<span class="line">  readonly attribute boolean mobile;</span>
<span class="line">  Promise&gt;UADataValues&gt; getHighEntropyValues(sequence&gt;DOMString&gt; hints);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line">interface mixin NavigatorUA {  </span>
<span class="line">  [SecureContext] readonly attribute NavigatorUAData userAgentData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line">Navigator includes NavigatorUA;  </span>
<span class="line">WorkerNavigator includes NavigatorUA;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>navigator.userAgentData</code>에 접근하면 <code>brands</code>(84 이전 버전에서는 <code>uaList</code>)과 <code>mobile</code> 속성이 있으며 <code>getHighEntropyValues</code> 메서드를 사용할 수 있다.</p><figure><img src="`+d+'" alt="그림 Chrome Canary 87.0.4243.0의 " tabindex="0" loading="lazy"><figcaption>그림 Chrome Canary 87.0.4243.0의 <code>navigator.userAgentData</code></figcaption></figure><figure><img src="'+d+'" alt="그림 Edge 85.0.564.44의 " tabindex="0" loading="lazy"><figcaption>그림 Edge 85.0.564.44의 <code>navigator.userAgentData</code></figcaption></figure>',11)),s("ul",null,[s("li",null,[n[27]||(n[27]=s("code",null,"brands",-1)),n[28]||(n[28]=a("는 사용자 에이전트의 상업명과 버전의 이름이 담긴 리스트이다. 87 버전을 기준으로 Chromium을 사용하는 브라우저에서는 브라우저 브랜드, Chromium 브랜드, ")),s("a",q,[e(t,{icon:"fas fa-globe"}),n[26]||(n[26]=a("GREASE"))]),n[29]||(n[29]=a(" 브랜드 3개의 값이 임의의 순서로 있다."))]),n[30]||(n[30]=s("li",null,[s("code",null,"mobile"),a("은 사용자 에이전트의 기기가 모바일인지를 나타내는 값이다.")],-1)),n[31]||(n[31]=s("li",null,[s("code",null,"getHighEntropyValues"),a(" 메서드는 높은 엔트로피에 해당하는 값을 가져온다. "),s("code",null,"brands"),a("(브라우저 이름과 메이저 버전)와 "),s("code",null,"mobile"),a("은 낮은 엔트로피로 분류되기 때문에 동기 방식으로 값을 가져올 수 있지만 그 외 정보는 높은 엔트로피로 분류되어 "),s("code",null,"getHighEntropyValues"),a(" 메서드로 가져와야 한다. 또한 User-Agent string처럼 모든 정보를 가져오는 게 아니라 자신에게 필요한 정보만 가져올 수 있다.")],-1))]),n[80]||(n[80]=p(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">navigator<span class="token punctuation">.</span>userAgentData<span class="token punctuation">.</span><span class="token function">getHighEntropyValues</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  </span>
<span class="line">  <span class="token string">&quot;architecture&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;model&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;platform&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;platformVersion&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;uaFullVersion&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;hljs-function&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;hljs-params&quot;</span><span class="token operator">&gt;</span><span class="token parameter">info</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;hljs-built_in&quot;</span><span class="token operator">&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("figure",null,[n[35]||(n[35]=s("img",{src:A,alt:'<VPIcon icon="iconfont icon-macos"/>Mac OS X 10.15.4, Chrome Canary 87.0.4243.0의  호출 결과',tabindex:"0",loading:"lazy"},null,-1)),s("figcaption",null,[e(t,{icon:"iconfont icon-macos"}),n[32]||(n[32]=a("Mac OS X 10.15.4, Chrome Canary 87.0.4243.0의 ")),n[33]||(n[33]=s("code",null,"navigator.userAgentData.getHighEntropyValues",-1)),n[34]||(n[34]=a(" 호출 결과"))])]),n[81]||(n[81]=p(`<p>아직은 Editor&#39;s draft 상태이며 Chrome 85에서는 권한 요청 프롬프트가 나타나지 않는다. 하지만 사용자 권한이 필요한 메서드이기 때문에 추후에는 권한 요청 프롬프트가 나타날 수 있고 사용자들은 이 사이트에서 어떤 정보를 수집하는지 알 수 있게 된다.</p><p><code>navigator.userAgentData.getHighEntropyValues</code>를 통해 비동기 방식으로 정보를 가져오면 기존 User-Agent string으로 얻은 정보와 동일한 정보를 얻을 수 있다. 하지만 모든 코드를 비동기 방식으로 바꾸기 어려울뿐더러 다음 코드와 같이 상수로 사용하는 사람도 있을 것이다.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> userAgent <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// check Mac</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> isMac <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Mac&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// check iOS</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> isIOS <span class="token operator">=</span> <span class="token punctuation">(</span>isMac <span class="token operator">||</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;iPhone&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;iPad&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>navigator<span class="token punctuation">.</span>maxTouchPoints <span class="token operator">&amp;&amp;</span> navigator<span class="token punctuation">.</span>maxTouchPoints <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// check Chrome</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> isChrome <span class="token operator">=</span> userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Chrome&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),s("p",null,[n[37]||(n[37]=a("네이버 서비스가 사용하고 있는 agent 모듈 ")),e(t,{icon:"fa-brands fa-npm"}),n[38]||(n[38]=s("code",null,"@egjs/agent",-1)),n[39]||(n[39]=a(" (")),s("a",x,[e(t,{icon:"iconfont icon-github"}),n[36]||(n[36]=s("code",null,"naver/egjs-agent",-1))]),n[40]||(n[40]=a(")도 ")),n[41]||(n[41]=s("code",null,"navigator.userAgent",-1)),n[42]||(n[42]=a("를 통해 브라우저 및 OS 정보를 가져오고 있다. 그렇기 때문에 UA 프리징에 대한 대비가 필요했다. ")),n[43]||(n[43]=s("code",null,"@egjs/agent",-1)),n[44]||(n[44]=a("에서는 ")),n[45]||(n[45]=s("code",null,"navigator.userAgentData",-1)),n[46]||(n[46]=a("를 이용해 어떻게 문제에 대응했는지 알아보겠다."))]),n[82]||(n[82]=s("h3",{id:"동기-방식의-대응-방안",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#동기-방식의-대응-방안"},[s("span",null,"동기 방식의 대응 방안")])],-1)),n[83]||(n[83]=s("p",null,"먼저 동기 방식으로 해결할 수 있다면 기존 코드와 크게 달라지지 않기 때문에 최선의 해결책일 것이다. 그럼에도 불구하고 동기 방식으로 해결할 수 없는 문제라면 비동기 방식으로 전환을 고려해야 한다.",-1)),n[84]||(n[84]=s("p",null,"동기 방식으로 확인할 수 있는 정보는 다음과 같다.",-1)),s("ul",null,[n[51]||(n[51]=s("li",null,[s("code",null,"navigator.userAgentData.brands"),a(": 브라우저의 이름과 메이저 버전, Chromium 정보")],-1)),n[52]||(n[52]=s("li",null,[s("code",null,"navigator.userAgentData.mobile"),a(": 모바일 여부")],-1)),s("li",null,[n[48]||(n[48]=s("code",null,"navigator.platform",-1)),n[49]||(n[49]=a(": Android Chrome(")),s("a",h,[e(t,{icon:"iconfont icon-githbu"}),n[47]||(n[47]=a("Linux armv8l"))]),n[50]||(n[50]=a(") 여부"))]),n[53]||(n[53]=s("li",null,"User-Agent Client Hints를 지원하지 않는 브라우저의 OS, OS 버전(Chrome 84의 지원 범위: Android 5.0 이상, Mac OS X 10.10 이상, 윈도우 7 이상)",-1))]),n[85]||(n[85]=p(`<p>다음은 동기 방식으로 사용자 에이전트 정보를 확인하는 예시 코드이다.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> getAgent <span class="token keyword">from</span> <span class="token string">&quot;@egjs/agent&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> agent <span class="token operator">=</span> <span class="token function">getAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Android 확인</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_ANDROID</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;android&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 브라우저 IE11 확인</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_IE11</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;ie&quot;</span> <span class="token operator">&amp;&amp;</span> agent<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>majorVersion <span class="token operator">===</span> <span class="token number">11</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// User-Agent Client Hints를 지원하지 않는 Android 4 확인</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_ANDROID4</span> <span class="token operator">=</span> <span class="token constant">IS_ANDROID</span> <span class="token operator">&amp;&amp;</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>majorVersion <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// User-Agent Client Hints를 지원하지 않는 iOS 10 확인</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_IOS10</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;ios&quot;</span> <span class="token operator">&amp;&amp;</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>majorVersion <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),s("h3",O,[s("a",H,[s("span",null,[e(t,{icon:"fa-brands fa-safari"}),n[54]||(n[54]=a("Safari 추측"))])])]),s("p",null,[n[55]||(n[55]=a(".")),e(t,{icon:"fa-brands fa-safari"}),n[56]||(n[56]=a("Safari(Safari 14, AppleWebkit 605 기준)는 아직 User-Agent Client Hints를 지원하지 않기 때문에 brand 리스트에 무슨 값이 있을지 알 수 없다. 또한 iOS 정책상 문제로 다른 브라우저 엔진을 사용하고 있는 기존의 브라우저(")),e(t,{icon:"fa-brands fa-chrome"}),n[57]||(n[57]=a("Chrome, Whale, ")),e(t,{icon:"fa-brands fa-edge"}),n[58]||(n[58]=a("Edge, ")),e(t,{icon:"fa-brands fa-firefox-browser"}),n[59]||(n[59]=a("Firefox)는 iOS 버전에서는 ")),e(t,{icon:"fa-brands fa-safari"}),n[60]||(n[60]=a("Safari를 사용한다. 그럼 ")),e(t,{icon:"fa-brands fa-safari"}),n[61]||(n[61]=a("Safari에서 User-Agent Client Hints가 도입된다면 brand 리스트에는 어떤 값이 있을까? iOS Chrome을 기준으로 다음과 같이 추측할 수 있다."))]),n[86]||(n[86]=s("ul",null,[s("li",null,"[Safari, Chrome]"),s("li",null,"[Safari, CriOS]"),s("li",null,"[AppleWebkit, Chrome]"),s("li",null,"[AppleWebkit, CriOS]")],-1)),e(t,{icon:"fa-brands fa-safari"}),n[87]||(n[87]=a("Safari 기반의 브라우저는 ")),e(t,{icon:"fa-brands fa-safari"}),n[88]||(n[88]=a("Safari 또는 AppleWebkit brand 정보가 있을 거라 추측하고 있다. 또한 ")),e(t,{icon:"fa-brands fa-safari"}),n[89]||(n[89]=a("Safari 기반 브라우저의 OS는 Mac 또는 iOS만 해당하기 때문에 다음과 같이 OS를 추측할 수 있다.")),s("ul",null,[s("li",null,[s("strong",null,[e(t,{icon:"fa-brands fa-safari"}),n[62]||(n[62]=a("Safari 기반이고 mobile이면 iOS"))]),n[63]||(n[63]=a(" 이다."))]),s("li",null,[s("strong",null,[e(t,{icon:"fa-brands fa-safari"}),n[64]||(n[64]=a("Safari 기반이고 mobile이 아니면 Mac"))]),n[65]||(n[65]=a(" 이다."))])]),n[90]||(n[90]=p(`<p>즉, 다음과 같이 사용자 에이전트 정보를 확인할 수 있을 것이다.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> getAgent <span class="token keyword">from</span> <span class="token string">&quot;@egjs/agent&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> agent <span class="token operator">=</span> <span class="token function">getAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// iOS 추측 가능</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_IOS</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;ios&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// MAC Safari 추측 가능</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_MAC_SAFARI</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;mac&quot;</span> <span class="token operator">&amp;&amp;</span> agent<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;safari&quot;</span><span class="token punctuation">;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="비동기-방식으로-전환" tabindex="-1"><a class="header-anchor" href="#비동기-방식으로-전환"><span>비동기 방식으로 전환</span></a></h3><p>동기 방식으로 확인할 수 없는 정보는 비동기 방식으로 에이전트 값을 얻은 후에 코드가 실행되어야 한다. 동기 방식으로 확인할 수 없는 정보는 다음과 같다.</p><ul><li>Android, iOS, Mac Safari를 제외한 OS 정보</li><li>특정 OS 버전</li><li>브라우저의 풀버전</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> getAgent <span class="token keyword">from</span> <span class="token string">&quot;@egjs/agent&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> agent <span class="token operator">=</span> <span class="token function">getAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Windows를 확인할 수 없다.</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_WINDOWS</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;window&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Safari를 제외한 mac OS를 확인할 수 없다.</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">IS_MAC</span> <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;mac&quot;</span><span class="token punctuation">;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>다음은 <code>navigator.userAgentData.getHighEntropyValues</code> 메서드로 정확한 agent 값을 얻을 수 있도록 만든 <code>getAccurateAgent</code> 비동기 함수이다.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getAccurateAgent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@egjs/agent&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">async <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;hljs-function&quot;</span><span class="token operator">&gt;</span><span class="token keyword">function</span> <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;hljs-title&quot;</span><span class="token operator">&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;hljs-params&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">  <span class="token keyword">const</span> agent <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAccurateAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> isWindows <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;window&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> isMac <span class="token operator">=</span> agent<span class="token punctuation">.</span>os<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;mac&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="마치며" tabindex="-1"><a class="header-anchor" href="#마치며"><span>마치며</span></a></h2><p>매일 3천만 명 이상이 네이버 서비스를 이용하고 있으며 모든 서비스에서 <code>@egjs/agent</code> 또는 <code>navigator.userAgent</code>를 사용하고 있기 때문에 네이버는 User-Agent Client Hints 도입에 주목하고 있다. 갑자기 User-Agent Client Hints가 도입된다면 서비스뿐만 아니라 agent 모듈을 사용하고 있는 Component들도 큰 타격을 입을 것이므로 네이버 FE Platform 팀은 User-Agent Client Hints를 리서치하고 <code>@egjs/agent</code>를 통해 지원하기로 했다.</p>`,11)),e(r,u(c({title:"naver/egjs-agent",desc:"Extracts browser and operating system information from the user agent string or user agent object(userAgentData).",link:"https://github.com/naver/egjs-agent",logo:"https://avatars.githubusercontent.com/u/6589568?s=200&v=4",background:"rgba(10,10,10,0.2)"})),null,16),e(r,u(c({title:"egjs-agent/src/userAgentData.ts at master · naver/egjs-agent",desc:"User-Agent Client Hints를 지원한 코드",link:"https://github.com/blob/master/src/userAgentData.ts",logo:"https://avatars.githubusercontent.com/u/6589568?s=200&v=4",background:"rgba(10,10,10,0.2)"})),null,16),s("p",null,[n[66]||(n[66]=a("User-Agent Client Hints는 아직 Editor's Draft 상태(2020.09.18)이며 언제든지 인터페이스 및 동작이 바뀔 수 있기 때문에 계속 주시하고 있고 ")),e(t,{icon:"fa-brands fa-chrome"}),n[67]||(n[67]=a("Chromium뿐만 아니라 Webkit 코드도 확인하면서 빠르게 대응하고자 한다. 여러분도 함께 준비하는 데 이 글이 도움이 되길 바란다."))])])}const E=k(y,[["render",D]]),I=JSON.parse('{"path":"/d2.naver.com/6532276.html","title":"User-Agent Client Hints의 도입, UA 프리징을 대비하라","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"User-Agent Client Hints의 도입, UA 프리징을 대비하라","description":"Article(s) > User-Agent Client Hints의 도입, UA 프리징을 대비하라","icon":"fa-brands fa-node","category":["Node.js","Article(s)"],"tag":["blog","d2.naver.com","node","nodejs","node-js","user-agent"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"User-Agent Client Hints의 도입, UA 프리징을 대비하라\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/d2.naver.com/6532276/1.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/d2.naver.com/6532276/1.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/d2.naver.com/6532276/3.png\\"],\\"datePublished\\":\\"2020-10-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/d2.naver.com/6532276.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"User-Agent Client Hints의 도입, UA 프리징을 대비하라"}],["meta",{"property":"og:description","content":"Article(s) > User-Agent Client Hints의 도입, UA 프리징을 대비하라"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/d2.naver.com/6532276/banner.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/d2.naver.com/6532276/banner.png"}],["meta",{"name":"twitter:image:alt","content":"User-Agent Client Hints의 도입, UA 프리징을 대비하라"}],["meta",{"property":"article:tag","content":"user-agent"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"d2.naver.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2020-10-12T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > User-Agent Client Hints의 도입, UA 프리징을 대비하라"},{"property":"og:description","content":"User-Agent Client Hints의 도입, UA 프리징을 대비하라"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/d2.naver.com/6532276.html"}]],"prev":"/programming/js-node/articles/README.md","date":"2020-10-12T00:00:00.000Z","isOriginal":false,"cover":"/assets/image/d2.naver.com/6532276/banner.png"},"git":{},"readingTime":{"minutes":3.38,"words":1015},"filePathRelative":"d2.naver.com/6532276.md"}');export{E as comp,I as data};
