import{_ as b}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as o,f as n,b as l,a as h,t as k,n as f,g as u,w as s,e,r as i,o as y}from"./app-BVguHYKu.js";const w={},S={id:"frontmatter-title-관련",tabindex:"-1"},c={class:"header-anchor",href:"#frontmatter-title-관련"},R={class:"table-of-contents"},x={href:"https://robinwieruch.de/react-tech-stack/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://robinwieruch.de/react-starter/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://robinwieruch.de/react-full-stack-framework/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://unsplash.com/ko/@lautaroandreani",target:"_blank",rel:"noopener noreferrer"},C={id:"tailwind-css",tabindex:"-1"},A={class:"header-anchor",href:"#tailwind-css"},I={id:"shadcn-ui",tabindex:"-1"},T={class:"header-anchor",href:"#shadcn-ui"},v={href:"https://robinwieruch.de/react-css-styling/",target:"_blank",rel:"noopener noreferrer"},U={id:"타입스크립트",tabindex:"-1"},N={class:"header-anchor",href:"#타입스크립트"},V={href:"https://robinwieruch.de/react-state/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://robinwieruch.de/react-fetching-data/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://unsplash.com/ko/@casparrubin",target:"_blank",rel:"noopener noreferrer"},D={id:"supabase-데이터베이스",tabindex:"-1"},E={class:"header-anchor",href:"#supabase-데이터베이스"},B={href:"https://lucia-auth.com/",target:"_blank",rel:"noopener noreferrer"},O={id:"s3-파일-업로드",tabindex:"-1"},Y={class:"header-anchor",href:"#s3-파일-업로드"},q={href:"https://postmarkapp.com/",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://coolify.io/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://hetzner.com/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://m.do.co/c/fb27c90322f3",target:"_blank",rel:"noopener noreferrer"},K={href:"https://robinwieruch.de/react-libraries/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://npmjs.com/package/tsx",target:"_blank",rel:"noopener noreferrer"},J={href:"https://road-to-next.com/",target:"_blank",rel:"noopener noreferrer"},W={class:"hint-container info"};function $(m,t){const p=i("VPCard"),r=i("router-link"),a=i("VPIcon"),d=i("SiteInfo");return y(),g("div",null,[o("h1",S,[o("a",c,[o("span",null,k(m.$frontmatter.title)+" 관련",1)])]),n(p,f(u({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),o("nav",R,[o("ul",null,[o("li",null,[n(r,{to:"#리액트-기술-스택-살펴보기"},{default:s(()=>t[0]||(t[0]=[e("리액트 기술 스택 살펴보기")])),_:1,__:[0]}),o("ul",null,[o("li",null,[n(r,{to:"#next-js"},{default:s(()=>t[1]||(t[1]=[e("Next.js")])),_:1,__:[1]})]),o("li",null,[n(r,{to:"#astro"},{default:s(()=>t[2]||(t[2]=[e("Astro")])),_:1,__:[2]})]),o("li",null,[n(r,{to:"#서버-컴포넌트"},{default:s(()=>t[3]||(t[3]=[e("서버 컴포넌트")])),_:1,__:[3]})]),o("li",null,[n(r,{to:"#서버-함수"},{default:s(()=>t[4]||(t[4]=[e("서버 함수")])),_:1,__:[4]})]),o("li",null,[n(r,{to:"#서버-액션"},{default:s(()=>t[5]||(t[5]=[e("서버 액션")])),_:1,__:[5]})]),o("li",null,[n(r,{to:"#tailwind-css"},{default:s(()=>[n(a,{icon:"iconfont icon-tailwindcss"}),t[6]||(t[6]=e("Tailwind CSS"))]),_:1,__:[6]})]),o("li",null,[n(r,{to:"#shadcn-ui"},{default:s(()=>[n(a,{icon:"iconfont icon-shadcn"}),t[7]||(t[7]=e("Shadcn UI"))]),_:1,__:[7]})]),o("li",null,[n(r,{to:"#lucide-react"},{default:s(()=>t[8]||(t[8]=[e("Lucide React")])),_:1,__:[8]})]),o("li",null,[n(r,{to:"#타입스크립트"},{default:s(()=>[n(a,{icon:"iconfont icon-typescript"}),t[9]||(t[9]=e("타입스크립트"))]),_:1,__:[9]})]),o("li",null,[n(r,{to:"#zod"},{default:s(()=>t[10]||(t[10]=[e("Zod")])),_:1,__:[10]})]),o("li",null,[n(r,{to:"#nuqs"},{default:s(()=>t[11]||(t[11]=[e("nuqs")])),_:1,__:[11]})]),o("li",null,[n(r,{to:"#zustand"},{default:s(()=>t[12]||(t[12]=[e("Zustand")])),_:1,__:[12]})]),o("li",null,[n(r,{to:"#react-query"},{default:s(()=>t[13]||(t[13]=[e("React Query")])),_:1,__:[13]})]),o("li",null,[n(r,{to:"#prisma-orm"},{default:s(()=>t[14]||(t[14]=[e("Prisma(ORM)")])),_:1,__:[14]})]),o("li",null,[n(r,{to:"#supabase-데이터베이스"},{default:s(()=>[n(a,{icon:"iconfont icon-supabase"}),t[15]||(t[15]=e("Supabase(데이터베이스)"))]),_:1,__:[15]})]),o("li",null,[n(r,{to:"#lucia-인증"},{default:s(()=>t[16]||(t[16]=[e("Lucia(인증)")])),_:1,__:[16]})]),o("li",null,[n(r,{to:"#s3-파일-업로드"},{default:s(()=>[n(a,{icon:"fa-brands fa-aws"}),t[17]||(t[17]=e("S3(파일 업로드)"))]),_:1,__:[17]})]),o("li",null,[n(r,{to:"#inngest-큐"},{default:s(()=>t[18]||(t[18]=[e("Inngest(큐)")])),_:1,__:[18]})]),o("li",null,[n(r,{to:"#react-email-resend"},{default:s(()=>t[19]||(t[19]=[e("React Email + Resend")])),_:1,__:[19]})]),o("li",null,[n(r,{to:"#vercel-호스팅"},{default:s(()=>t[20]||(t[20]=[e("Vercel(호스팅)")])),_:1,__:[20]})]),o("li",null,[n(r,{to:"#cloudflare-도메인"},{default:s(()=>t[21]||(t[21]=[e("CloudFlare(도메인)")])),_:1,__:[21]})]),o("li",null,[n(r,{to:"#stripe-결제-게이트웨이"},{default:s(()=>t[22]||(t[22]=[e("Stripe(결제 게이트웨이)")])),_:1,__:[22]})]),o("li",null,[n(r,{to:"#테스트-및-도구"},{default:s(()=>t[23]||(t[23]=[e("테스트 및 도구")])),_:1,__:[23]})])])]),o("li",null,[n(r,{to:"#마치며"},{default:s(()=>t[24]||(t[24]=[e("마치며")])),_:1,__:[24]})])])]),t[78]||(t[78]=o("hr",null,null,-1)),n(d,{name:"2025년 리액트 기술 스택 가이드",desc:"리액트 생태계에는 항상 새로운 기술이 등장하고 있습니다. 저는 프리랜서 웹 개발자와 개인 창업자로서 수년간 다양한 프로젝트를 진행해 왔습니다. 매년 제가 사용하는 기술 스택을 재평가하고 최신 트렌드를 따라가면서도, 앞으로 몇 년 동안의 프로젝트 안정성과 유지보수성에 주의를 기울이고 있습니다. 이 글에서는 2025년 풀스택 애플리케이션을 위한 인기 있는 리액트 기술 스택들을 살펴보며, 이를 통해 여러분의 제품이나 MVP*를 만들 수 있는 방법을 알아보겠습니다.",url:"https://yozm.wishket.com/magazine/detail/3029/",logo:"https://yozm.wishket.com/favicon.ico",preview:"https://yozm.wishket.com/media/news/3029/lautaro-andreani-UYsBCu9RP3Y-unsplash__1_-ED.jpg"}),o("p",null,[t[26]||(t[26]=e("본문은 요즘IT와 번역가 David가 함께 로빈 위르흐(Robin Wieruch)의 글 <")),o("a",x,[n(a,{icon:"fas fa-globe"}),t[25]||(t[25]=e("React Tech Stack [2025]"))]),t[27]||(t[27]=e(">을 번역한 글입니다. 필자는 독일 베를린에 거주하는 소프트웨어 엔지니어이자 프리랜서 개발자이며, 컴퓨터 과학 석사 학위를 보유하고 있습니다. 그는 10년 이상의 개발자 경력을 가지고 있으며 웹 애플리케이션 구축과 전 세계의 스타트업 및 기업을 위한 컨설팅, JavaScript와 React에 관한 여러 책과 강좌를 집필한 경험이 있습니다. 이 글에서는 본인이 경험한 기술, 도구 및 라이브러리를 소개하며, 각 기술의 특징과 장점에 대해 설명합니다."))]),t[79]||(t[79]=l('<p>리액트 생태계에는 항상 새로운 기술이 등장하고 있습니다. 이 글에서는 2025년 풀스택 애플리케이션을 위한 인기 있는 리액트 기술 스택들을 살펴보며, 이를 통해 여러분의 제품이나 MVP<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>를 만들 수 있는 방법을 알아보겠습니다.</p><p>우선 제가 이 가이드를 작성하게 된 이유를 말씀드리면, 저는 프리랜서 웹 개발자와 개인 창업자로서 수년간 다양한 프로젝트를 진행해 왔습니다. 매년 제가 사용하는 기술 스택을 재평가하고 최신 트렌드를 따라가면서도, 앞으로 몇 년 동안의 프로젝트 안정성과 유지보수성에 주의를 기울이고 있습니다.</p><p>덧붙이자면, 저는 창업자로서 거의 1년 동안 SaaS<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>를 개발했고 이 SaaS는 수익성을 갖게 되었습니다. 당시 선택한 기술 스택을 좋아하지만, 새 프로젝트를 시작한다면 다른 기술 스택을 선택할 것입니다.</p><p>이 글은 제 연구와 경험, 그리고 2024년 내내 작업한 풀스택 웹 개발 과정에 관한 내용을 바탕으로, 제가 선택한 기술 스택을 반영했습니다. 간략하지만 알차게 담은 목록을 함께 살펴보겠습니다.</p><hr><h2 id="리액트-기술-스택-살펴보기" tabindex="-1"><a class="header-anchor" href="#리액트-기술-스택-살펴보기"><span>리액트 기술 스택 살펴보기</span></a></h2><h3 id="next-js" tabindex="-1"><a class="header-anchor" href="#next-js"><span>Next.js</span></a></h3><p>Next.js는 리액트 위에 구축된 프레임워크입니다. 리액트로 풀스택 애플리케이션을 구축할 때 가장 인기 있는 선택지 중 하나로, 기본적으로 다양한 기능(예: 라우팅, 캐싱)을 제공하고, 다양한 목표를 최적화하기 위한 여러 렌더링 전략을 동일한 애플리케이션 내에서 사용할 수 있으며, 리액트 애플리케이션을 백엔드에 연결하기 위한 최신 리액트 기능(예: 서버 컴포넌트 및 서버 함수)을 모두 지원하고 있습니다.</p><h3 id="astro" tabindex="-1"><a class="header-anchor" href="#astro"><span>Astro</span></a></h3>',9)),o("p",null,[t[29]||(t[29]=e("Astro는 제품의 랜딩 페이지를 만들기 위한 선택적 대안으로, 정적 및 동적 페이지를 제공할 수 있는 Next.js 프로젝트를 하나의 모놀리식 애플리케이션으로 활용하지 않는 경우 사용할 수 있습니다. Astro를 사용하면 애플리케이션에 서브도메인(예: app.example.com)을 사용하게 되지만, 뛰어난 개발자 경험을 바탕으로 빠른 랜딩 페이지를 만들 수 있습니다. 또한 다양한 종류의 랜딩 페이지 중에서 선택할 수 있어, SaaS 개발에 더 많은 시간을 투자할 수 있습니다. (참고: ")),o("a",P,[n(a,{icon:"fas fa-globe"}),t[28]||(t[28]=e("How to start a React Project"))]),t[30]||(t[30]=e(")"))]),t[80]||(t[80]=l('<h3 id="서버-컴포넌트" tabindex="-1"><a class="header-anchor" href="#서버-컴포넌트"><span>서버 컴포넌트</span></a></h3><p>서버 컴포넌트는 모든 React 프레임워크에서 사용할 수 있는 것은 아니지만, Next.js에서는 지원됩니다. 그래서 특별히 언급하고 싶었는데, 이는 풀스택 React 애플리케이션을 구축하는 방식을 바꾸기 때문입니다. 가장 기본적인 형태로, 서버에서 실행되는 컴포넌트를 작성할 수 있게 해주어 서버(예: 데이터베이스)에 접근할 수 있습니다.</p><h3 id="서버-함수" tabindex="-1"><a class="header-anchor" href="#서버-함수"><span>서버 함수</span></a></h3><p>서버 함수는 Next.js에서 지원하는 또 다른 리액트 기능으로, 함수를 호출하는 것만으로 리액트 컴포넌트에서 서버 측 코드를 실행할 수 있게 해줍니다. 이것은 타입이 지정된 원격 프로시저<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup> 호출(RPC)처럼 동작하지만, 내부적으로는 API 엔드포인트<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup>가 자동으로 생성됩니다.</p><h3 id="서버-액션" tabindex="-1"><a class="header-anchor" href="#서버-액션"><span>서버 액션</span></a></h3>',5)),o("p",null,[t[32]||(t[32]=e("서버 액션은 서버 함수의 하위 집합입니다. 사용자 친화적으로 만들기 위한 추상화 레이어를 추가하는 여러 라이브러리가 있지만, 개인적으로는 몇 줄의 코드로 자체 추상화를 쉽게 구현할 수 있기 때문에 아직 사용할 필요성을 느끼지 못했습니다. 그러나 이미 만들어진 솔루션을 찾고 있다면, next-safe-actions 또는 zsa를 확인해 보세요. (참고: ")),o("a",z,[n(a,{icon:"fas fa-globe"}),t[31]||(t[31]=e("React as a full-stack framework"))]),t[33]||(t[33]=e(")"))]),o("figure",null,[t[37]||(t[37]=o("img",{src:"https://wishket.com/media/news/3029/lautaro-andreani-UYsBCu9RP3Y-unsplash.jpg",alt:'<출처: Unsplash, <VPIcon icon="fas fa-globe"/>Lautaro Andreani>',tabindex:"0",loading:"lazy"},null,-1)),o("figcaption",null,[t[35]||(t[35]=e("<출처: Unsplash, ")),o("a",j,[n(a,{icon:"fas fa-globe"}),t[34]||(t[34]=e("Lautaro Andreani"))]),t[36]||(t[36]=e(">"))])]),o("h3",C,[o("a",A,[o("span",null,[n(a,{icon:"iconfont icon-tailwindcss"}),t[38]||(t[38]=e("Tailwind CSS"))])])]),t[81]||(t[81]=o("p",null,"개발자 커뮤니티 내에서 의견이 계속 나뉘고 있지만, 빠른 제품 개발과 장기적인 CSS 유지보수를 위해 오늘날 Tailwind가 최선의 선택이라고 생각합니다. 제 경험과 많은 학생들의 경험에 따르면, 일주일 정도 Tailwind에 익숙해지면 전통적인 CSS 접근 방식으로 돌아가는 것을 상상하기 어렵습니다.",-1)),o("h3",I,[o("a",T,[o("span",null,[n(a,{icon:"iconfont icon-shadcn"}),t[39]||(t[39]=e("Shadcn UI"))])])]),t[82]||(t[82]=o("p",null,"UI 라이브러리는 오고 가지만, Shadcn UI는 1년 넘게 인기를 끌고 있습니다. Tailwind CSS와 원활하게 작동하고 버전 없는 시스템으로, UI 관리에 새로운 접근 방식을 제공하는 인기 있는 선택지입니다. 새로운 대세가 등장하거나, 모든 것이 다시 너무 비슷해지기 전까지는 좋은 선택이라고 말할 수 있습니다.",-1)),t[83]||(t[83]=o("h3",{id:"lucide-react",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#lucide-react"},[o("span",null,"Lucide React")])],-1)),o("p",null,[t[41]||(t[41]=e("이 아이콘 라이브러리는 이미 Shadcn UI와 함께 제공되기 때문에 다른 것으로 대체할 필요가 없을 것입니다. 다른 대안이 등장하면 다음 프로젝트에서 전환을 고려할 것입니다. Lucide React에는 큰 투자가 필요하지 않습니다. (참고: ")),o("a",v,[n(a,{icon:"fas fa-globe"}),t[40]||(t[40]=e("CSS Styling in React"))]),t[42]||(t[42]=e(")"))]),o("h3",U,[o("a",N,[o("span",null,[n(a,{icon:"iconfont icon-typescript"}),t[43]||(t[43]=e("타입스크립트"))])])]),t[84]||(t[84]=o("p",null,"이 선택에 대해 많이 말할 필요는 없을 것 같습니다. TypeScript는 JavaScript 프로젝트의 업계 표준이 되었으며, 더 나은 개발자 경험, 적은 버그, 유지보수가 용이한 코드를 위한 훌륭한 선택입니다.",-1)),t[85]||(t[85]=o("h3",{id:"zod",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#zod"},[o("span",null,"Zod")])],-1)),o("p",null,[t[45]||(t[45]=e("리액트 프로젝트에서 유효성 검사를 위한 업계 표준으로, 타입스크립트와 잘 어울립니다. 요즘 저는 서버 측 유효성 검사(예: 서버 액션)에만 사용하고, 클라이언트 측 폼은 네이티브 HTML 유효성 검사로 가볍게 유지하고 있습니다. 이렇게 하면 서드파티 폼 라이브러리 없이도 폼 컴포넌트에 복잡성이 없어집니다. (참고: ")),o("a",V,[n(a,{icon:"fas fa-globe"}),t[44]||(t[44]=e("State in React"))]),t[46]||(t[46]=e(")"))]),t[86]||(t[86]=l('<h3 id="nuqs" tabindex="-1"><a class="header-anchor" href="#nuqs"><span>nuqs</span></a></h3><p>nuqs는 Next.js에서 타입이 지정된 URL 상태(예: 검색, 정렬, 페이지네이션)를 위한 제 선택입니다. 다른 프레임워크를 사용하는 경우 이 기능이 내장되어 있거나 다른 라이브러리를 사용해야 할 수 있습니다. 어떤 경우든, URL 상태를 위한 솔루션이 있는 것이 중요하다고 생각합니다.</p><h3 id="zustand" tabindex="-1"><a class="header-anchor" href="#zustand"><span>Zustand</span></a></h3><p>Zustand는 클라이언트 측 상태 관리를 위한 선택적 옵션입니다. 그러나 URL 상태, 클라이언트 측 데이터 캐싱(예: React Query), 서버 주도 리액트 애플리케이션(예: 서버 컴포넌트)이 클라이언트 측 상태 관리의 필요성을 줄여주었기 때문에 요즘은 클라이언트 측 상태를 거의 사용하지 않습니다.</p><h3 id="react-query" tabindex="-1"><a class="header-anchor" href="#react-query"><span>React Query</span></a></h3>',5)),o("p",null,[t[48]||(t[48]=e("React Query는 클라이언트 측 데이터를 가져와야 할 때, 특히 무한 스크롤과 같은 복잡한 구현에 선택적으로 사용하는 옵션입니다. 그러나 프로젝트 복잡성이 낮을 때는 서버 컴포넌트만 사용하는 것이 좋습니다. (참고: ")),o("a",L,[n(a,{icon:"fas fa-globe"}),t[47]||(t[47]=e("Data Fetching in React"))]),t[49]||(t[49]=e(")"))]),t[87]||(t[87]=l('<h3 id="prisma-orm" tabindex="-1"><a class="header-anchor" href="#prisma-orm"><span>Prisma(ORM)</span></a></h3><p>Prisma는 항상 제가 선택하는 ORM<sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup>입니다. 그러나 최신 트렌드에 대한 관심이 항상 있기 때문에, 필요하다면 Drizzle로 대체할 수도 있습니다. 저는 Prisma가 안정적인 선택이고 이미 많은 프로젝트에서 사용되고 있기 때문에 당분간은 Prisma를 고수할 것입니다.</p>',2)),o("figure",null,[t[53]||(t[53]=o("img",{src:"https://wishket.com/media/news/3029/caspar-camille-rubin-0qvBNep1Y04-unsplash.jpg",alt:'<출처: Unsplash, <VPIcon icon="fas fa-globe"/>Caspar Camille Rubin>',tabindex:"0",loading:"lazy"},null,-1)),o("figcaption",null,[t[51]||(t[51]=e("<출처: Unsplash, ")),o("a",M,[n(a,{icon:"fas fa-globe"}),t[50]||(t[50]=e("Caspar Camille Rubin"))]),t[52]||(t[52]=e(">"))])]),o("h3",D,[o("a",E,[o("span",null,[n(a,{icon:"iconfont icon-supabase"}),t[54]||(t[54]=e("Supabase(데이터베이스)"))])])]),t[88]||(t[88]=o("p",null,"Supabase는 서비스형 데이터베이스로 제가 선택하는 옵션입니다. PostgreSQL 데이터베이스와 더불어 많은 기능을 제공합니다. 개인적으로는 기술 선택의 유연성을 유지하기 위해 다른 기능들의 종속성을 피하고, 데이터베이스 기능만 사용합니다. 데이터베이스의 경우, Prisma로만 연결하고 Supabase의 다양한 기능은 많이 사용하지 않음으로써, 필요할 때 언제든지 다른 데이터베이스(예: Neon)로 교체할 수 있게 합니다.",-1)),t[89]||(t[89]=o("h3",{id:"lucia-인증",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#lucia-인증"},[o("span",null,"Lucia(인증)")])],-1)),o("p",null,[t[56]||(t[56]=e("라이브러리로서 지원이 중단되었음에도 요즘에는 Lucia를 사용합니다. 그러나 여전히 Oslo, Argon2, 선택적으로 Arctic과 같은 라이브러리를 통한 인증의 기본 개념을 가르치는 ")),o("a",B,[n(a,{icon:"fas fa-globe"}),t[55]||(t[55]=e("학습 자료"))]),t[57]||(t[57]=e("로 사용됩니다. 따라서 Clerk나 Kinde와 같은 서드파티 솔루션에 의존하지 않고, 자신의 필요에 맞게 맞춤화된 직접 구현한 인증 시스템을 갖게 됩니다."))]),o("h3",O,[o("a",Y,[o("span",null,[n(a,{icon:"fa-brands fa-aws"}),t[58]||(t[58]=e("S3(파일 업로드)"))])])]),t[90]||(t[90]=o("p",null,"Amazon의 AWS S3, 사전 인증된 URL, AWS IAM을 사용하여 자체 파일 업로드 시스템을 구축하는 것은 어렵지 않으며, 가장 저렴한 비용으로 파일을 저장할 수 있는 유연성을 제공합니다. “한 번 구현하고 잊어버리는” 시나리오이므로, 다른 서드파티 솔루션을 사용하지 않는 것은 추천하지 않습니다. 대부분의 서드파티 서비스는 동일한 API를 사용하므로, 필요한 경우 나중에 다른 서비스로 전환할 수 있습니다.",-1)),t[91]||(t[91]=o("h3",{id:"inngest-큐",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#inngest-큐"},[o("span",null,"Inngest(큐)")])],-1)),t[92]||(t[92]=o("p",null,"정교한 작업 조율과 백엔드 확장이 필요한 최근 프로젝트에서는 Inngest를 사용했습니다. 개인적으로는 시간에 민감하지 않고, 백그라운드에서 실행할 수 있는 작업에 이를 사용합니다. 간편하게 설정하고 유지할 수 있는 큐 시스템으로 좋은 선택이라고 생각합니다.",-1)),t[93]||(t[93]=o("h3",{id:"react-email-resend",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#react-email-resend"},[o("span",null,"React Email + Resend")])],-1)),o("p",null,[t[60]||(t[60]=e("전자는 리액트 컴포넌트로 이메일 템플릿을 만들 수 있게 해주고, 후자는 이메일을 보내기 위한 훌륭한 솔루션입니다. 이전에는 React Email도 사용할 수 있는 ")),o("a",q,[n(a,{icon:"fas fa-globe"}),t[59]||(t[59]=e("Postmark"))]),t[61]||(t[61]=e("를 사용했지만, Resend로 전환한 것에 꽤 만족하고 있습니다."))]),t[94]||(t[94]=o("h3",{id:"vercel-호스팅",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#vercel-호스팅"},[o("span",null,"Vercel(호스팅)")])],-1)),o("p",null,[t[66]||(t[66]=e("저는 몇 년 동안 Vercel을 사용해 왔습니다. 예전에는 Zeit라고 불렸고, 서비스 이름은 Now였습니다. 풀스택 애플리케이션 호스팅을 위한 훌륭한 솔루션을 제공하지만, 사람들이 사용을 주저하는 이유도 이해합니다. 자체 호스팅 대안을 찾고 있다면, ")),o("a",Z,[n(a,{icon:"fas fa-globe"}),t[62]||(t[62]=e("Coolify"))]),t[67]||(t[67]=e("와 함께 ")),o("a",F,[n(a,{icon:"fas fa-globe"}),t[63]||(t[63]=e("Hetzner"))]),t[68]||(t[68]=e("/")),o("a",Q,[n(a,{icon:"fas fa-globe"}),t[64]||(t[64]=e("DigitalOcean을"))]),t[69]||(t[69]=e(" 사용하는 것을 추천합니다. (참고: ")),o("a",K,[n(a,{icon:"fas fa-globe"}),t[65]||(t[65]=e("Libraries for React projects"))]),t[70]||(t[70]=e(")"))]),t[95]||(t[95]=l('<h3 id="cloudflare-도메인" tabindex="-1"><a class="header-anchor" href="#cloudflare-도메인"><span>CloudFlare(도메인)</span></a></h3><p>수년간 다양한 도메인 제공업체를 사용했지만, 요즘에는 CloudFlare를 사용하여 모든 도메인을 관리하는 데 꽤 만족하고 있습니다. 훌륭한 UI를 제공하고, DNS 레코드에 추가 정보를 첨부할 수 있어 서비스를 추적하기 쉽습니다.</p><h3 id="stripe-결제-게이트웨이" tabindex="-1"><a class="header-anchor" href="#stripe-결제-게이트웨이"><span>Stripe(결제 게이트웨이)</span></a></h3><p>결제 게이트웨이에 대한 강력한 추천은 없습니다. 저는 몇 년 동안 Stripe를 사용했고 만족하고 있습니다. 하지만 사람들이 사용을 주저하는 이유를 알 수 있는데, 이미 훌륭한 문서와 API가 있음에도 불구하고, API와 기능이 늘어나서 부담스러울 수 있기 때문입니다.</p><h3 id="테스트-및-도구" tabindex="-1"><a class="header-anchor" href="#테스트-및-도구"><span>테스트 및 도구</span></a></h3>',5)),o("p",null,[t[72]||(t[72]=e("테스트와 도구에 대한 강력한 추천은 없습니다. 요즘에는 React Testing Library와 Cypress/Playwright를 혼합하여 사용하는 것이 테스트에 좋은 선택이라고 생각합니다. 도구의 경우, ESLint(앞으로는 Biome일 수도 있음)와 Prettier를 추천합니다. 비록 Storybook 대안이 생기기를 바라고 있지만, 여전히 UI 문서화에는 Storybook이 가장 편리한 솔루션입니다. 추가로 터미널에서 타입스크립트를 실행(예: 데이터베이스 시딩)하기 위해 ")),o("a",H,[n(a,{icon:"fa-brands fa-npm"}),t[71]||(t[71]=o("code",null,"tsx",-1))]),t[73]||(t[73]=e("를 사용하고 있습니다."))]),t[96]||(t[96]=o("hr",null,null,-1)),t[97]||(t[97]=o("h2",{id:"마치며",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#마치며"},[o("span",null,"마치며")])],-1)),o("p",null,[t[75]||(t[75]=e("지금까지 살펴본 내용들은 제가 새 프로젝트를 시작할 때 선택할 기술 스택이며, ")),o("a",J,[n(a,{icon:"fas fa-globe"}),t[74]||(t[74]=e("'The Road to Next'"))]),t[76]||(t[76]=e("에서 풀스택 애플리케이션 개발을 위해 가르치고 있는 내용이기도 합니다. 이 글이 여러분이 다음 프로젝트에서 기술 스택을 선택하는 데 도움이 되길 바랍니다."))]),o("div",W,[t[77]||(t[77]=o("p",{class:"hint-container-title"},"<원문>",-1)),n(d,{name:"React Tech Stack [2025]",desc:"Popular React Tech Stack for Full-Stack Applications in 2025 to create your product (i.e. SaaS) ...",url:"https://robinwieruch.de/react-tech-stack/",logo:"https://robinwieruch.de/react-tech-stack/favicon-32x32.png?v=9db82c76a9aaf54925ac42d41f3d384c",preview:"https://robinwieruch.de/static/5a3e9b69ed03d8d86b2bff6769b25b16/14b42/banner.jpg"})]),h(" TODO: add ARTICLE CARD "),n(p,f(u({title:"2025년 리액트 기술 스택 가이드",desc:"리액트 생태계에는 항상 새로운 기술이 등장하고 있습니다. 저는 프리랜서 웹 개발자와 개인 창업자로서 수년간 다양한 프로젝트를 진행해 왔습니다. 매년 제가 사용하는 기술 스택을 재평가하고 최신 트렌드를 따라가면서도, 앞으로 몇 년 동안의 프로젝트 안정성과 유지보수성에 주의를 기울이고 있습니다. 이 글에서는 2025년 풀스택 애플리케이션을 위한 인기 있는 리액트 기술 스택들을 살펴보며, 이를 통해 여러분의 제품이나 MVP*를 만들 수 있는 방법을 알아보겠습니다.",link:"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/3029.html",logo:"https://yozm.wishket.com/favicon.ico",background:"rgba(84,7,224,0.2)"})),null,16),t[98]||(t[98]=l('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>MVP(Minimum Viable Product): 핵심 기능만 갖춘 초기 버전의 제품이나 서비스 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>SaaS(Service as a Software): 사용자가 소프트웨어를 자신의 컴퓨터에 설치하지 않고 인터넷을 통해 필요할 때마다 이용하는 서비스 모델 <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>프로시저: 특정 작업이나 목표를 달성하기 위해 순차적으로 수행해야 하는 일련의 명령어나 단계들을 정의한 것 <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li><li id="footnote4" class="footnote-item"><p>엔드포인트: 통신 네트워크에서 통신 채널의 끝부분으로, 서비스나 리소스에 접근할 수 있는 지점 또는 인터페이스를 의미 <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p></li><li id="footnote5" class="footnote-item"><p>ORM(Object-Relational Mapping): 객체 지향 프로그래밍 언어와 관계형 데이터베이스 사이의 데이터를 변환하는 프로그래밍 기법 <a href="#footnote-ref5" class="footnote-backref">↩︎</a></p></li></ol></section>',2))])}const _=b(w,[["render",$]]),tt=JSON.parse('{"path":"/yozm.wishket.com/3029.html","title":"2025년 리액트 기술 스택 가이드","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"2025년 리액트 기술 스택 가이드","description":"Article(s) > 2025년 리액트 기술 스택 가이드","icon":"fa-brands fa-react","category":["Node.js","React.js","Article(s)"],"tag":["blog","yozm.wishket.com","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2025년 리액트 기술 스택 가이드\\",\\"image\\":[\\"https://unsplash.com/ko/@lautaroandreani\\",\\"https://unsplash.com/ko/@casparrubin\\"],\\"datePublished\\":\\"2025-03-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"요즘IT의 번역글\\",\\"url\\":\\"https://yozm.wishket.com/magazine/@yozm_global/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/3029.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"2025년 리액트 기술 스택 가이드"}],["meta",{"property":"og:description","content":"Article(s) > 2025년 리액트 기술 스택 가이드"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yozm.wishket.com/media/news/3029/lautaro-andreani-UYsBCu9RP3Y-unsplash__1_-ED.jpg"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yozm.wishket.com/media/news/3029/lautaro-andreani-UYsBCu9RP3Y-unsplash__1_-ED.jpg"}],["meta",{"name":"twitter:image:alt","content":"2025년 리액트 기술 스택 가이드"}],["meta",{"property":"article:author","content":"요즘IT의 번역글"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"yozm.wishket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-03-21T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > 2025년 리액트 기술 스택 가이드"},{"property":"og:description","content":"2025년 리액트 기술 스택 가이드"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/3029.html"}]],"prev":"/programming/js-react/articles/README.md","date":"2025-03-21T00:00:00.000Z","isOriginal":false,"author":[{"name":"요즘IT의 번역글","url":"https://yozm.wishket.com/magazine/@yozm_global/"}],"cover":"https://yozm.wishket.com/media/news/3029/lautaro-andreani-UYsBCu9RP3Y-unsplash__1_-ED.jpg"},"git":{},"readingTime":{"minutes":2.17,"words":652},"filePathRelative":"yozm.wishket.com/3029.md","copyright":{"author":"요즘IT의 번역글"}}');export{_ as comp,tt as data};
