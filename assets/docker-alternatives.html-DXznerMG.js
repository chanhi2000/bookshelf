import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as e,f as s,b as l,a as v,t as h,n as c,g as u,w as o,e as a,r,o as f}from"./app-BVguHYKu.js";const y="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/podman.png",w="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/buildah.png",D="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/dive-ci-integration-1.png",q="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/crun-docker-alternative.jpeg",x="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/lxd-docker-alternative.jpeg",I="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/cointainerd-docker-alternative.png",C="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/cri-o-logo.png",A="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/rancher-desktop-docker-desktop-alternative.png",B="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/minikube-docker-desktop-alternative.jpeg",P="/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/lima-docker-desktop-alternative.jpeg",T={},L={id:"frontmatter-title-관련",tabindex:"-1"},R={class:"header-anchor",href:"#frontmatter-title-관련"},K={class:"table-of-contents"},j={href:"https://opencontainers.org/",target:"_blank",rel:"noopener noreferrer"},O={class:"hint-container note"},S={href:"https://blog.logrocket.com/author/matteodipirro/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://podman.io/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://docs.docker.com/engine/security/rootless/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://buildah.io/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/moby/buildkit",target:"_blank",rel:"noopener noreferrer"},N={href:"https://mobyproject.org/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/GoogleContainerTools/kaniko",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/containers/skopeo",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/wagoodman/dive",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/opencontainers/runc",target:"_blank",rel:"noopener noreferrer"},G={href:"https://docker.com/blog/runc/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/containers/crun",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/8/html/building_running_and_managing_containers/selecting-a-container-runtime_building-running-and-managing-containers#con_the-crun-container-runtime_selecting-a-container-runtime",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://linuxcontainers.org/",target:"_blank",rel:"noopener noreferrer"},$={href:"https://linuxcontainers.org/lxd/getting-started-cli/#snap-package",target:"_blank",rel:"noopener noreferrer"},J={href:"https://containerd.io/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://docs.eliot.run/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://cloudfoundry.org/",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/docker/engine",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/firecracker-microvm/firecracker",target:"_blank",rel:"noopener noreferrer"},an={href:"https://aws.amazon.com/bottlerocket",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://cri-o.io/",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://docker.com/blog/updating-product-subscriptions/",target:"_blank",rel:"noopener noreferrer"},on={href:"https://rancherdesktop.io/",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://github.com/kubernetes/minikube",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://github.com/lima-vm/lima",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://github.com/containerd/nerdctl",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://github.com/containerd/nerdctl",target:"_blank",rel:"noopener noreferrer"};function cn(m,n){const p=r("VPCard"),i=r("router-link"),g=r("SiteInfo"),d=r("RouteLink"),t=r("VPIcon");return f(),b("div",null,[e("h1",L,[e("a",R,[e("span",null,h(m.$frontmatter.title)+" 관련",1)])]),s(p,c(u({title:"Docker > Article(s)",desc:"Article(s)",link:"/devops/docker/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s(p,c(u({title:"Podman > Article(s)",desc:"Article(s)",link:"/devops/podman/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s(p,c(u({title:"Go > Article(s)",desc:"Article(s)",link:"/programming/go/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",K,[e("ul",null,[e("li",null,[s(i,{to:"#_1-podman"},{default:o(()=>n[0]||(n[0]=[a("1. Podman")])),_:1,__:[0]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-podman-as-a-docker-alternative"},{default:o(()=>n[1]||(n[1]=[a("Evaluating Podman as a Docker alternative")])),_:1,__:[1]})])])]),e("li",null,[s(i,{to:"#_2-buildah"},{default:o(()=>n[2]||(n[2]=[a("2. Buildah")])),_:1,__:[2]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-buildah-as-a-docker-alternative"},{default:o(()=>n[3]||(n[3]=[a("Evaluating Buildah as a Docker alternative")])),_:1,__:[3]})])])]),e("li",null,[s(i,{to:"#_3-buildkit"},{default:o(()=>n[4]||(n[4]=[a("3. BuildKit")])),_:1,__:[4]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-buildkit-as-a-docker-alternative"},{default:o(()=>n[5]||(n[5]=[a("Evaluating BuildKit as a Docker alternative")])),_:1,__:[5]})])])]),e("li",null,[s(i,{to:"#_4-kaniko"},{default:o(()=>n[6]||(n[6]=[a("4. Kaniko")])),_:1,__:[6]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-kaniko-as-a-docker-alternative"},{default:o(()=>n[7]||(n[7]=[a("Evaluating Kaniko as a Docker alternative")])),_:1,__:[7]})])])]),e("li",null,[s(i,{to:"#_5-skopeo"},{default:o(()=>n[8]||(n[8]=[a("5. Skopeo")])),_:1,__:[8]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-skopeo-as-a-docker-alternative"},{default:o(()=>n[9]||(n[9]=[a("Evaluating Skopeo as a Docker alternative")])),_:1,__:[9]})])])]),e("li",null,[s(i,{to:"#_6-dive"},{default:o(()=>n[10]||(n[10]=[a("6. Dive")])),_:1,__:[10]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-dive-as-a-docker-alternative"},{default:o(()=>n[11]||(n[11]=[a("Evaluating Dive as a Docker alternative")])),_:1,__:[11]})])])]),e("li",null,[s(i,{to:"#_7-runc-and-crun"},{default:o(()=>n[12]||(n[12]=[a("7. runc and crun")])),_:1,__:[12]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-runc-as-a-docker-alternative"},{default:o(()=>n[13]||(n[13]=[a("Evaluating runc as a Docker alternative")])),_:1,__:[13]})])])]),e("li",null,[s(i,{to:"#_8-lxd"},{default:o(()=>n[14]||(n[14]=[a("8. LXD")])),_:1,__:[14]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-lxd-as-a-docker-alternative"},{default:o(()=>n[15]||(n[15]=[a("Evaluating LXD as a Docker alternative")])),_:1,__:[15]})])])]),e("li",null,[s(i,{to:"#_9-containerd"},{default:o(()=>n[16]||(n[16]=[a("9. containerd")])),_:1,__:[16]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-containerd-as-a-docker-alternative"},{default:o(()=>n[17]||(n[17]=[a("Evaluating containerd as a Docker alternative")])),_:1,__:[17]})])])]),e("li",null,[s(i,{to:"#_10-cri-o"},{default:o(()=>n[18]||(n[18]=[a("10. CRI-O")])),_:1,__:[18]}),e("ul",null,[e("li",null,[s(i,{to:"#evaluating-cri-o-as-a-docker-alternative"},{default:o(()=>n[19]||(n[19]=[a("Evaluating CRI-O as a Docker alternative")])),_:1,__:[19]})])])]),e("li",null,[s(i,{to:"#a-quick-mention-of-docker-desktop-alternatives"},{default:o(()=>n[20]||(n[20]=[a("A quick mention of Docker Desktop alternatives")])),_:1,__:[20]}),e("ul",null,[e("li",null,[s(i,{to:"#rancher-desktop"},{default:o(()=>n[21]||(n[21]=[a("Rancher Desktop")])),_:1,__:[21]})]),e("li",null,[s(i,{to:"#minikube"},{default:o(()=>n[22]||(n[22]=[a("Minikube")])),_:1,__:[22]})]),e("li",null,[s(i,{to:"#lima"},{default:o(()=>n[23]||(n[23]=[a("Lima")])),_:1,__:[23]})])])]),e("li",null,[s(i,{to:"#conclusion"},{default:o(()=>n[24]||(n[24]=[a("Conclusion")])),_:1,__:[24]})])])]),n[125]||(n[125]=e("hr",null,null,-1)),s(g,{name:"The 10 best Docker alternatives to consider",desc:"Discover several Docker alternatives for building, running, and distributing container images, including Podman, Buildah, and more.",url:"https://blog.logrocket.com/docker-alternatives",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"https://blog.logrocket.com/wp-content/uploads/2022/10/DockerAlternatives_FeaturedImage.png"}),n[126]||(n[126]=e("p",null,"In modern system engineering and programming, containers are a widely used tool to package and distribute software. In the most general terms, a container is a standalone piece of software that includes everything it needs to run (code, dependencies, tools, runtime, and so forth). Containers can be easily deployed and run by anyone, making the development and deployment process easier and faster.",-1)),n[127]||(n[127]=e("figure",null,[e("img",{src:"https://blog.logrocket.com/wp-content/uploads/2022/10/DockerAlternatives_FeaturedImage.png",alt:"top ten docker alternatives worth considering",tabindex:"0",loading:"lazy"}),e("figcaption",null,"top ten docker alternatives worth considering")],-1)),e("p",null,[n[26]||(n[26]=a("One of the most widespread container platforms is ")),s(d,{to:"/blog.logrocket.com/dockerizing-a-django-app.html"},{default:o(()=>n[25]||(n[25]=[e("strong",null,"Docker, a monolithic tool",-1)])),_:1,__:[25]}),n[27]||(n[27]=a(". It handles every aspect of the containerization process, from building, running, and inspecting container images."))]),e("p",null,[n[29]||(n[29]=a("In this article, we’ll cover a few Docker alternatives. Each tool covered in this tutorial adheres to the ")),e("a",j,[s(t,{icon:"fas fa-globe"}),n[28]||(n[28]=a("Open Containers Initiative (OCI)"))]),n[30]||(n[30]=a(" specification, which includes specifications for container runtime, container distribution, and container images. Let’s get started!"))]),e("div",O,[n[34]||(n[34]=e("p",{class:"hint-container-title"},"Editor’s note",-1)),e("p",null,[n[32]||(n[32]=a("This article was updated by ")),e("a",S,[s(t,{icon:"fas fa-globe"}),n[31]||(n[31]=a("Matteo Di Pirro"))]),n[33]||(n[33]=a(" in February 2025 to expand coverage of Docker alternatives and include new information on additional alternatives, including CRI-O."))])]),n[128]||(n[128]=e("hr",null,null,-1)),n[129]||(n[129]=e("h2",{id:"_1-podman",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-podman"},[e("span",null,"1. Podman")])],-1)),n[130]||(n[130]=e("figure",null,[e("img",{src:y,alt:"Podman Docker Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Podman Docker Alternative")],-1)),e("p",null,[e("a",E,[s(t,{icon:"iconfont icon-podman"}),n[35]||(n[35]=a("Podman"))]),n[36]||(n[36]=a(", a container engine developed by RedHat, is one of the most prominent Docker alternatives for building, running, and storing container images. Podman maintains compatibility with the OCI container image spec just like Docker, meaning Podman can run container images produced by Docker and vice versa."))]),n[131]||(n[131]=l(`<p>Podman is the default container engine in RedHat 8 and CentOS 8. Podman’s command line interface is identical to Docker’s, including the arguments. As a matter of fact, we can simply alias the <code>docker</code> command to <code>podman</code> without noticing the difference, making it easy for existing Docker users to transition to Podman:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title=".bashrc"><span>.bashrc</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">docker</span><span class="token operator">=</span>podman</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="evaluating-podman-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-podman-as-a-docker-alternative"><span>Evaluating Podman as a Docker alternative</span></a></h3><p>Unlike Docker, which uses the <code>dockerd</code> daemon to manage all the containers under its control, Podman is daemonless. Therefore, there’s no persistent connection to some long-living process, removing the single point of failure issue in Docker, where an abrupt crash in the daemon process can kill running containers or cause them to become orphaned.</p><p>In simpler terms, Docker has a client-server logic with a daemon in between. Podman, on the other hand, does not need the mediator and its architecture is therefore more lightweight and secure.</p><p>To run and manage containers, Podman relies on <code>systemd</code>.</p><p>Podman also differentiates from Docker by using rootless containers by default. Root access is not necessary for launching and operating a container, but it helps to mitigate potential vulnerabilities in the container runtime that can cause privilege escalation.</p>`,7)),e("p",null,[n[38]||(n[38]=a("To be fair, Docker supports a ")),e("a",z,[s(t,{icon:"fa-brands fa-docker"}),n[37]||(n[37]=a("rootless mode"))]),n[39]||(n[39]=a(" as well, which debuted as an experimental feature in Docker Engine v19.03 before being stabilized in v20.10. However, its use is not yet widespread in the ecosystem. Furthermore, Podman got there first."))]),n[132]||(n[132]=e("p",null,"This doesn’t necessarily mean that Podman is safer than Docker. However, rootless containers are safer than containers with root privileges. Furthermore, Docker daemons have root privileges, which makes them more suitable for an attacker. Still, Podman can run root containers, so it’s not immune from the problem.",-1)),n[133]||(n[133]=e("p",null,"An additional feature of Podman that is not yet present in Docker is the ability to create and run pods. A pod is a collection of one or more containers that utilize a shared pool of resources and work closely together to achieve a specific function. Pods are also the smallest execution unit in Kubernetes, making the transition to Kubernetes easier, should the need arise. For example, we might have a pod running a backend and a frontend container, sharing resources and running different containers for the same application.",-1)),n[134]||(n[134]=e("p",null,"Lastly, Podman is not an all-in-one solution like Docker. For example, it does not support Docker Swarm, even if it has recently introduced Docker Compose support to be compliant with Docker Swarm. Furthermore, Podman specializes in running containers. To build them, it needs another tool, named Buildah (see below). Lastly, Podman is part of the RedHat OpenShift Container Platform.",-1)),n[135]||(n[135]=e("p",null,"In conclusion, there’s no winner between Podman and Docker. The former might be more suitable when we need a specialized lightweight tool to run containers, but the latter is an all-in-one solution. In many cases, Podman can replace Docker. Therefore, when choosing one over the other, always consider your requirements.",-1)),n[136]||(n[136]=e("hr",null,null,-1)),n[137]||(n[137]=e("h2",{id:"_2-buildah",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-buildah"},[e("span",null,"2. Buildah")])],-1)),n[138]||(n[138]=e("figure",null,[e("img",{src:w,alt:"Buildah Docker Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Buildah Docker Alternative")],-1)),e("p",null,[e("a",F,[s(t,{icon:"fas fa-globe"}),n[40]||(n[40]=a("Buildah"))]),n[41]||(n[41]=a(" is a Docker alternative for building images. Developed by RedHat, Buildah is often used together with Podman. In fact, Podman uses a subset of Buildah’s functionality to implement its ")),n[42]||(n[42]=e("code",null,"build",-1)),n[43]||(n[43]=a(" subcommand."))]),n[139]||(n[139]=l('<p>Buildah is a great tool if we need fine-grained control over the whole image-building process thanks to the Buildah CLI tool. This is very important when we want to optimize our images or when we work with complex builds.</p><h3 id="evaluating-buildah-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-buildah-as-a-docker-alternative"><span>Evaluating Buildah as a Docker alternative</span></a></h3><p>Similarly to Podman, the images produced by Buildah fully comply with the OCI specification, operating in the same manner as images built with Docker. Buildah can also create images using an existing <code>Dockerfile</code> or <code>Containerfile</code>. Unlike Docker, however, Buildah lets us use Bash scripts that sidestep the limitations of Dockerfiles, automating the process more easily. Bash scripting uses the commands of Buildah CLI to install packages, copy files, and configure the layers of an image. It gives us more control, but, in turn, the learning curve is steeper.</p><p>Like Podman, Buildah follows a fork-exec model that doesn’t require a central daemon or root access to work. Thus, all operations are executed directly by the Buildah CLI, which then interacts with the container runtime (e.g. runc). This makes it more lightweight than Docker as well as potentially more secure.</p><p>One advantage of using Buildah over Docker is its ability to commit many changes to a single layer. This was a long-requested feature among container users. Buildah also provides the ability to create an empty container image storing only metadata, making it easy to add only the required packages in the image. Consequently, the final output is smaller than its Docker equivalent.</p><p>Buildah images are user-specific, so only the images built by a user will be visible to them.</p><p>As for the use cases, Docker is ideal for developers needing a fast way to produce images. Simply write a Dockerfile and let Docker take care of the rest. Buildah, on the other hand, is for advanced users who like to get their hands dirty. Whenever we need fine-grained control over the build process, Buildah is a perfect fit.</p><p>At the time of writing, Buildah works on several Linux distributions but is not supported on Windows or macOS.</p><hr><h2 id="_3-buildkit" tabindex="-1"><a class="header-anchor" href="#_3-buildkit"><span>3. BuildKit</span></a></h2><figure><img src="https://blog.logrocket.com/wp-content/uploads/2021/11/buildkit.png" alt="BuildKit Docker Alternative" tabindex="0" loading="lazy"><figcaption>BuildKit Docker Alternative</figcaption></figure>',11)),e("p",null,[e("a",M,[n[44]||(n[44]=a("BuildKit (")),s(t,{icon:"iconfont icon-github"}),n[45]||(n[45]=e("code",null,"moby/buildkit",-1)),n[46]||(n[46]=a(")"))]),n[48]||(n[48]=a(" is an improved image-building engine for Docker that was developed as part of the ")),e("a",N,[s(t,{icon:"fas fa-globe"}),n[47]||(n[47]=a("Moby project"))]),n[49]||(n[49]=a(". It is the default builder for users on Docker Desktop and Docker Engine as of version 23.0, but it also comes as a standalone tool."))]),n[140]||(n[140]=l(`<h3 id="evaluating-buildkit-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-buildkit-as-a-docker-alternative"><span>Evaluating BuildKit as a Docker alternative</span></a></h3><p>One of BuildKit’s headline features includes improved performance through parallel processing of image layers that don’t depend on each other. Another feature is better caching, which reduces the need to rebuild each layer of an image. This tool offers extensibility through a more pluggable architecture. Finally, BuildKit introduces rootless builds and the ability to skip unused stages.</p><p>If we’re using Docker Engine &lt; v23, we can optionally enable BuildKit by setting the <code>DOCKER_BUILDKIT</code> environment variable to <code>1</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token assign-left variable">DOCKER_BUILDKIT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token function">docker</span> build <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Alternatively, we can configure Docker to use BuildKit by default simply by editing the <code>/etc/docker/\`\`daemon.json</code> file as follows:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/docker/daemon.json.json"><span>/etc/docker/daemon.json.json</span></div><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;features&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;buildkit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>After saving the file, reload the daemon to apply the change:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">systemctl reload <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>It’s easy to tell when BuildKit is being used because of its output, which differs from the default engine:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token assign-left variable">DOCKER_BUILDKIT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token function">docker</span> build <span class="token builtin class-name">.</span> </span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># [+] Building 30.8s (7/7) FINISHED =&gt; </span></span>
<span class="line"><span class="token comment"># [internal] load build definition from Dockerfile 0.1s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># transferring dockerfile: 142B 0.1s =&gt; </span></span>
<span class="line"><span class="token comment"># [internal] load .dockerignore 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># transferring context: 2B 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># [internal] load metadata for docker.io/library/centos:latest 0.6s =&gt; </span></span>
<span class="line"><span class="token comment"># [auth] library/centos:pull token for registry-1.docker.io 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># [1/2] FROM docker.io/library/centos:latest@sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6 14.3s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># resolve docker.io/library/centos:latest@sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177 762B / 762B 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># sha256:a1801b843b1bfaf77c501e7a6d3f709401a1e0c83863037fa3aab063a7fdb9dc 529B / 529B 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># sha256:5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6 2.14kB / 2.14kB 0.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1 83.52MB / 83.52MB 2.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># extracting sha256:a1d0c75327776413fa0db9ed3adcdbadedc95a662eb1d360dad82bb913f8a1d1 10.8s =&gt; </span></span>
<span class="line"><span class="token comment"># [2/2] RUN yum -y install httpd 14.7s =&gt; </span></span>
<span class="line"><span class="token comment"># exporting to image 1.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># exporting layers 1.0s =&gt; </span></span>
<span class="line"><span class="token comment"># =&gt; </span></span>
<span class="line"><span class="token comment"># writing image sha256:c18170a407ca85218ee83526075a3f2a2e74f27d7bd5908ad68ba2328b4f4783 0.0s</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-kaniko" tabindex="-1"><a class="header-anchor" href="#_4-kaniko"><span>4. Kaniko</span></a></h2><figure><img src="https://blog.logrocket.com/wp-content/uploads/2021/11/kaniko-docker-alternative.png" alt="Kaniko Docker Alternative" tabindex="0" loading="lazy"><figcaption>Kaniko Docker Alternative</figcaption></figure>`,13)),e("p",null,[n[52]||(n[52]=a("Developed by Google, ")),e("a",H,[n[50]||(n[50]=a("Kaniko (")),s(t,{icon:"iconfont icon-github"}),n[51]||(n[51]=e("code",null,"GoogleContainerTools/kaniko",-1))]),n[53]||(n[53]=a(" is used to build container images inside of an unprivileged container or a Kubernetes cluster. Like Buildah, Kaniko does not require a daemon, and it can build images from Dockerfiles without depending on Docker."))]),n[141]||(n[141]=l(`<p>For example, here’s a Kubernetes <code>Pod</code> definition of building an image using Kaniko:</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> kaniko</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">containers</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> kaniko</span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> gcr.io/kaniko<span class="token punctuation">-</span>project/executor<span class="token punctuation">:</span>latest</span>
<span class="line">    <span class="token key atrule">args</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;--dockerfile=&lt;path-to-dockerfile&gt;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">           <span class="token string">&quot;--context=dir://&lt;path-to-source-code&gt;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">           <span class="token string">&quot;--destination=&lt;registry&gt;/&lt;image-name&gt;:&lt;tag&gt;&quot;</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the code snippet above, we define a <code>container</code>, running the <code>kaniko:latest</code> Docker image. The container’s arguments build a new image, based on a Dockerfile possibly mounted on the pod itself.</p><p>The whole process is a bit more cumbersome when run locally. In this case, everything happens in the context of a <code>docker run</code> command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /path/to/your/source/code:/workspace <span class="token punctuation">\\</span></span>
<span class="line">gcr.io/kaniko-project/executor:latest <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--dockerfile</span><span class="token operator">=</span>/workspace/Dockerfile <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--destination</span><span class="token operator">=</span>your-registry/your-image-name:your-tag</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="evaluating-kaniko-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-kaniko-as-a-docker-alternative"><span>Evaluating Kaniko as a Docker alternative</span></a></h3>`,6)),e("p",null,[n[55]||(n[55]=a("The major difference between Docker and Kaniko is that the latter is more focused on ")),s(d,{to:"/blog.logrocket.com/deploy-react-app-kubernetes-using-docker.html"},{default:o(()=>n[54]||(n[54]=[e("strong",null,"Kubernetes workflows",-1)])),_:1,__:[54]}),n[56]||(n[56]=a(", and it is meant to be run as an image, making it a bit less suitable for local development. Furthermore, being more focused on running inside Kubernetes containers, Kaniko can only run on Linux."))]),n[142]||(n[142]=e("p",null,"Similarly to Docker, Kaniko produces OCI-compliant images, making it a drop-in replacement for Docker-in-Kubernetes use cases.",-1)),e("p",null,[n[58]||(n[58]=a("Speaking of use cases, Kaniko is particularly suitable for building secure images in environments (aka ")),s(d,{to:"/blog.logrocket.com/best-practices-ci-cd-pipeline-frontend.html"},{default:o(()=>n[57]||(n[57]=[e("strong",null,"CI/CD pipelines",-1)])),_:1,__:[57]}),n[59]||(n[59]=a(") when running the privileged mode needed by Docker is a no-go."))]),n[143]||(n[143]=e("p",null,"Regarding the build process, in Kaniko we can specify a set of directories or files needed during the build. In contrast, Docker needs the entire project directory (the so-called build context) to be sent to the Docker daemon. Consequently, Kaniko builds are generally faster.",-1)),n[144]||(n[144]=e("hr",null,null,-1)),n[145]||(n[145]=e("h2",{id:"_5-skopeo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-skopeo"},[e("span",null,"5. Skopeo")])],-1)),n[146]||(n[146]=e("figure",null,[e("img",{src:"https://blog.logrocket.com/wp-content/uploads/2021/11/skopeo-docker-alternative.webp",alt:"Skopeo Docker Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Skopeo Docker Alternative")],-1)),e("p",null,[e("a",V,[n[60]||(n[60]=a("Skopeo (")),s(t,{icon:"iconfont icon-github"}),n[61]||(n[61]=e("code",null,"containers/skopeo",-1)),n[62]||(n[62]=a(")"))]),n[63]||(n[63]=a(" is another tool developed by RedHat and part of the RedHat OpenShift Container Platform. As such, it is usually adopted along with Podman and Buildah."))]),n[147]||(n[147]=l(`<p>More precisely, Skopeo provides us with a way to inspect Docker images. In particular, the <code>inspect</code> sub-command returns low-level information about a container image, similar to <code>docker inspect</code>.</p><h3 id="evaluating-skopeo-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-skopeo-as-a-docker-alternative"><span>Evaluating Skopeo as a Docker alternative</span></a></h3><p>Not surprisingly, and similar to Podman and Buildah, Skopeo doesn’t require a daemon to run nor does it need root privileges. Lastly, it works with OCI-compatible images.</p><p>In contrast to Docker, Skopeo can help us gather useful information about a repository or a tag without having to download it first:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">skopeo inspect docker://docker.io/fedora <span class="token comment"># inspect remote image</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#     &quot;Name&quot;: &quot;docker.io/library/fedora&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;Digest&quot;: &quot;sha256:72c6c48a902baff1ab9948558556ef59e3429c65697287791be3c709738955b3&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;RepoTags&quot;: [</span></span>
<span class="line"><span class="token comment">#         &quot;20&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;21&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;22&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;23&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;24&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;25&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;26&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;26-modular&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;27&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;28&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;29&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;30&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;31&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;32&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;33&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;34&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;35&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;36&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;branched&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;heisenbug&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;latest&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;modular&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;rawhide&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;Created&quot;: &quot;2021-11-02T21:29:22.547065293Z&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;DockerVersion&quot;: &quot;20.10.7&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;Labels&quot;: {</span></span>
<span class="line"><span class="token comment">#         &quot;maintainer&quot;: &quot;Clement Verna \\u003ccverna@fedoraproject.org\\u003e&quot;</span></span>
<span class="line"><span class="token comment">#     },</span></span>
<span class="line"><span class="token comment">#     &quot;Architecture&quot;: &quot;amd64&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;Os&quot;: &quot;linux&quot;,</span></span>
<span class="line"><span class="token comment">#     &quot;Layers&quot;: [</span></span>
<span class="line"><span class="token comment">#         &quot;sha256:fc811dadee2400b171b0e1eed1d973c4aa9459c6f81c77ce11c014a6104ae005&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;Env&quot;: [</span></span>
<span class="line"><span class="token comment">#         &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;DISTTAG=f35container&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;FGC=f35&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;FBR=f35&quot;</span></span>
<span class="line"><span class="token comment">#     ]</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this regard, Skopeo is simply a replacement for the <code>docker inspect</code> command, with similar use cases. However, it benefits from enhanced security, as we already saw for Podman and Buildah.</p><p>A major use case of Skopeo is the ability to copy a container image from one remote registry to another or a local directory:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">skopeo login quay.io</span>
<span class="line"></span>
<span class="line">skopeo copy docker://hello-world:latest docker://quay.io/hello-world:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is a nice-to-have, since Docker Hub has introduced rate limits and paid tier changes.</p><p>Lastly, another useful feature is Skopeo’s ability to synchronize images between container registries and local directories with the <code>skopeo sync</code> command.</p><p>As we said for Podman and Buildah, Skopeo does not mean to fulfill all the use cases addressed by Docker. On the other hand, adopting the RedHat OpenShift Container Platform would give us a toolbox for all our needs.</p><hr><h2 id="_6-dive" tabindex="-1"><a class="header-anchor" href="#_6-dive"><span>6. Dive</span></a></h2>`,13)),e("p",null,[e("a",U,[n[64]||(n[64]=a("Dive (")),s(t,{icon:"iconfont icon-github"}),n[65]||(n[65]=e("code",null,"wagoodman/dive",-1)),n[66]||(n[66]=a(")"))]),n[67]||(n[67]=a(" is not a Docker alternative per se, but it’s surely worth a mention. It’s a tool for inspecting, analyzing, and optimizing container images. Dive can show the content of an image by layer, highlighting the differences between each. Through image analysis, Dive provides us with a percentage score for efficiency by estimating wasted space, which is helpful when trying to reduce the image size."))]),n[148]||(n[148]=l(`<p>Another useful feature is Dive’s CI integration, which provides a pass-or-fail result based on the image’s efficiency and the amount of wasted space. To access the CI integration feature, set the <code>CI</code> environmental variable to <code>true</code> when invoking any valid <code>dive</code> command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token assign-left variable">CI</span><span class="token operator">=</span>true dive node:alpine</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="`+D+'" alt="Dive CI Integration" tabindex="0" loading="lazy"><figcaption>Dive CI Integration</figcaption></figure><h3 id="evaluating-dive-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-dive-as-a-docker-alternative"><span>Evaluating Dive as a Docker alternative</span></a></h3><p>In conclusion, Dive is a great tool for learning and developing confidence in what we are building/shipping. We can use it to understand how Docker images work and how to write efficient Dockerfiles. Thanks to it, we can make any changes to the Dockerfile and see how it has affected the resulting layer structure.</p><hr><h2 id="_7-runc-and-crun" tabindex="-1"><a class="header-anchor" href="#_7-runc-and-crun"><span>7. runc and crun</span></a></h2><figure><img src="'+q+'" alt="CRUN Docker Alternative" tabindex="0" loading="lazy"><figcaption>CRUN Docker Alternative</figcaption></figure>',8)),e("p",null,[e("a",X,[s(t,{icon:"iconfont icon-github"}),n[68]||(n[68]=e("code",null,"opencontainers/runc",-1))]),n[70]||(n[70]=a(" is a CLI tool providing a low-level interface to create and run containers on Linux based on the OCI specification. runc was formerly embedded into Docker as a module but was later spun into a ")),e("a",G,[s(t,{icon:"fa-brands fa-docker"}),n[69]||(n[69]=a("standalone tool in 2015"))]),n[71]||(n[71]=a(". It’s specifically designed to be a lightweight and secure runtime that’s easily integrated with higher-level orchestrators (e.g. Kubernetes)."))]),e("p",null,[n[73]||(n[73]=a("runc remains the default container runtime in Docker and most other container engines. An alternative to runc is ")),e("a",W,[s(t,{icon:"iconfont icon-github"}),n[72]||(n[72]=e("code",null,"containers/crun",-1))]),n[74]||(n[74]=a(", developed by RedHat and written in C instead of Go like most Linux container tools."))]),n[149]||(n[149]=e("h3",{id:"evaluating-runc-as-a-docker-alternative",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#evaluating-runc-as-a-docker-alternative"},[e("span",null,"Evaluating runc as a Docker alternative")])],-1)),e("p",null,[n[76]||(n[76]=a("The main advantages of crun over runc are all about performance. ")),e("a",Z,[s(t,{icon:"fa-brands fa-redhat"}),n[75]||(n[75]=a("According to RedHat"))]),n[77]||(n[77]=a(", the crun binary is up to 50 times smaller and up to twice as fast as the runc binary. What’s important is that we can use runc and crun interchangeably, as both implement the OCI runtime specification. crun, however, supports more low-level features that make it the preferred choice if we want to have fine-grained control over the runtime our containers run on. For example, with crun we can set stricter limits on the memory allowed in the container."))]),e("p",null,[n[79]||(n[79]=a("Lastly, being written in C, crun works on architectures where ")),s(d,{to:"/blog.logrocket.com/error-handling-golang-best-practices.html"},{default:o(()=>n[78]||(n[78]=[e("strong",null,"Go support",-1)])),_:1,__:[78]}),n[80]||(n[80]=a(" is limited or absent (e.g. Risc-V)."))]),n[150]||(n[150]=e("p",null,"crun is Production-ready and we can therefore use it as a runc replacement without worries.",-1)),n[151]||(n[151]=e("hr",null,null,-1)),n[152]||(n[152]=e("h2",{id:"_8-lxd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_8-lxd"},[e("span",null,"8. LXD")])],-1)),n[153]||(n[153]=e("figure",null,[e("img",{src:x,alt:"LXD Docker Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"LXD Docker Alternative")],-1)),e("p",null,[e("a",Y,[s(t,{icon:"fas fa-globe"}),n[81]||(n[81]=a("LXD"))]),n[82]||(n[82]=a(" and Docker are not competing container technologies, as they serve different purposes. The former, in particular, is a virtual machine manager and image-based system container. It offers images for a variety of Linux distributions as well as a complete user experience centered on entire Linux systems operating within containers or virtual machines."))]),n[154]||(n[154]=e("h3",{id:"evaluating-lxd-as-a-docker-alternative",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#evaluating-lxd-as-a-docker-alternative"},[e("span",null,"Evaluating LXD as a Docker alternative")])],-1)),n[155]||(n[155]=e("p",null,"LXD runs the so-called system containers, that are similar to virtual/physical machines, as they run a full operating system. Normally, system containers are long-lasting and used to host several applications.",-1)),n[156]||(n[156]=e("p",null,"Docker, on the other hand, runs application containers that package and run a single process or a service.",-1)),n[157]||(n[157]=e("p",null,"Both application and system containers share a kernel with the host operating system. The main difference, however, is that the former runs a single application/process, whereas the latter runs a full operating system, providing their users with more flexibility.",-1)),n[158]||(n[158]=e("p",null,"LXD offers compatibility for many storage backends and network types, along with the ability to run on hardware such as a laptop or cloud instance.",-1)),n[159]||(n[159]=e("p",null,[a("A component of LXD security and access control is based on group membership. As a root user, we may create an "),e("code",null,"lxd"),a(" group and add trusted members or users so that we can communicate with the local daemon and have complete control over LXD.")],-1)),e("p",null,[n[84]||(n[84]=a("LXD provides ")),e("a",$,[s(t,{icon:"fas fa-globe"}),n[83]||(n[83]=a("snap packages"))]),n[85]||(n[85]=a(" for many Linux distributions (including Ubuntu, Fedora, Arch Linux, Debian, and OpenSUSE) to facilitate installation. LXD’s most important features are its basic API, instances, profiles, backup, export, and configurability."))]),n[160]||(n[160]=e("p",null,"Based on what we saw above, LXD and Docker are not competing technologies. In fact, we could run Docker containers in an LXD system container. Generally speaking, the former is more similar to VMWare or KVM hypervisors, even though it is much lighter on resources and without the virtualization overhead.",-1)),n[161]||(n[161]=e("p",null,"Docker, on the other hand, abstracts away storage, networking, and logging. It was specifically designed to decouple and isolate individual processes, which can then be scaled independently from the rest of the application or system they are a part of (basically a microservice architecture).",-1)),n[162]||(n[162]=e("hr",null,null,-1)),n[163]||(n[163]=e("h2",{id:"_9-containerd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_9-containerd"},[e("span",null,"9. containerd")])],-1)),n[164]||(n[164]=e("figure",null,[e("img",{src:I,alt:"Containerd Docker Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Containerd Docker Alternative")],-1)),e("p",null,[e("a",J,[s(t,{icon:"fas fa-globe"}),n[86]||(n[86]=a("containerd"))]),n[87]||(n[87]=a(" is a container runtime created by Docker that handles the lifecycle of a container on a virtual machine. containerd retrieves container images from container registries, mounts storage and enables networking for a container. In other words, Docker builds upon containerd to give developers a more comprehensive experience."))]),e("p",null,[n[97]||(n[97]=a("containerd, together with Kubernetes, Envoy, Prometheus, and CoreDNS, graduated from the CNCF (Cloud Native Computing Foundation) in February 2019. It is available as a Linux and Windows daemon. Some of its users include ")),e("a",Q,[s(t,{icon:"fas fa-globe"}),n[88]||(n[88]=a("eliot"))]),n[98]||(n[98]=a(", ")),e("a",_,[s(t,{icon:"fas fa-globe"}),n[89]||(n[89]=a("Cloud Foundry"))]),n[99]||(n[99]=a(", ")),e("a",nn,[n[90]||(n[90]=a("Docker (")),s(t,{icon:"iconfont icon-github"}),n[91]||(n[91]=e("code",null,"docker/engine",-1)),n[92]||(n[92]=a(")"))]),n[100]||(n[100]=a(", ")),e("a",en,[n[93]||(n[93]=a("Firecracker (")),s(t,{icon:"iconfont icon-github"}),n[94]||(n[94]=e("code",null,"firecracker-microvm/firecracker",-1)),n[95]||(n[95]=a(")"))]),n[101]||(n[101]=a(", and ")),e("a",an,[s(t,{icon:"fa-brands fa-aws"}),n[96]||(n[96]=a("Bottlerocket"))]),n[102]||(n[102]=a("."))]),n[165]||(n[165]=l(`<h3 id="evaluating-containerd-as-a-docker-alternative" tabindex="-1"><a class="header-anchor" href="#evaluating-containerd-as-a-docker-alternative"><span>Evaluating containerd as a Docker alternative</span></a></h3><p>The main containerd features are as follows:</p><h4 id="containers" tabindex="-1"><a class="header-anchor" href="#containers"><span>Containers</span></a></h4><p>A container is a metadata object in containerd. A container can be associated with resources such as an OCI runtime specification, image, root filesystem, and other features:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line">redis<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">NewContainer</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&quot;redis-master&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">defer</span> redis<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="namespaces" tabindex="-1"><a class="header-anchor" href="#namespaces"><span>Namespaces</span></a></h4><p>Namespaces enable several consumers to use the same container without conflict. They offer the advantage of sharing data while maintaining isolation with containers and pictures.</p><p>To provide a namespace for API calls, run the following code:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line">context <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//create a context for docker</span></span>
<span class="line">docker <span class="token operator">=</span> namespaces<span class="token punctuation">.</span><span class="token function">WithNamespace</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&quot;docker&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">containerd<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">NewContainer</span><span class="token punctuation">(</span>docker<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To provide a default namespace on the client, do the following:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line">client<span class="token punctuation">,</span> err <span class="token operator">:=</span> containerd<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> containerd<span class="token punctuation">.</span><span class="token function">WithDefaultNamespace</span><span class="token punctuation">(</span><span class="token string">&quot;docker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="client" tabindex="-1"><a class="header-anchor" href="#client"><span>Client</span></a></h4><p>containerd provides a complete client package to assist us in integrating it into our platform:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;context&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token string">&quot;github.com/containerd/containerd&quot;</span></span>
<span class="line">  <span class="token string">&quot;github.com/containerd/containerd/cio&quot;</span></span>
<span class="line">  <span class="token string">&quot;github.com/containerd/containerd/namespaces&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        client<span class="token punctuation">,</span> err <span class="token operator">:=</span> containerd<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;/run/containerd/containerd.sock&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">defer</span> client<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="oci-runtime-specification" tabindex="-1"><a class="header-anchor" href="#oci-runtime-specification"><span>OCI runtime specification</span></a></h4><p>For operating containers, containerd fully implements the OCI runtime specification.</p><p>When constructing a container, we can indicate how to alter the specification:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line">redis<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">NewContainer</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&quot;redis-master&quot;</span><span class="token punctuation">,</span> containerd<span class="token punctuation">.</span><span class="token function">WithNewSpec</span><span class="token punctuation">(</span>oci<span class="token punctuation">.</span><span class="token function">WithImageConfig</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="_10-cri-o" tabindex="-1"><a class="header-anchor" href="#_10-cri-o"><span>10. CRI-O</span></a></h2><figure><img src="`+C+'" alt="cri-o logo docker alternative" tabindex="0" loading="lazy"><figcaption>cri-o logo docker alternative</figcaption></figure>',21)),e("p",null,[e("a",sn,[s(t,{icon:"fas fa-globe"}),n[103]||(n[103]=a("CRI-O"))]),n[104]||(n[104]=a(" is another container runtime implementing the Kubernetes Container Runtime Interface. This means we can use it in our Kubernetes clusters to run containers."))]),n[166]||(n[166]=e("h3",{id:"evaluating-cri-o-as-a-docker-alternative",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#evaluating-cri-o-as-a-docker-alternative"},[e("span",null,"Evaluating CRI-O as a Docker alternative")])],-1)),n[167]||(n[167]=e("p",null,"CRI-O is an alternative to containerd and the other container runtimes. Similar to the latter, it pulls container images from registries, manages them on disk, and runs them.",-1)),n[168]||(n[168]=e("p",null,"Therefore, their use cases are pretty much the same. Generally speaking, we should choose based on the ecosystem we’re adopting. CRI-O is backed by RedHat and used in the RedHat OpenShift Container Platform.",-1)),n[169]||(n[169]=e("p",null,"Hence, if are migrating to tools like Podman and Buildah, using CRI-O rather than containerd might be a good choice. For example, you might receive more support from RedHat if you’re paying for it.",-1)),n[170]||(n[170]=e("hr",null,null,-1)),n[171]||(n[171]=e("h2",{id:"a-quick-mention-of-docker-desktop-alternatives",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#a-quick-mention-of-docker-desktop-alternatives"},[e("span",null,"A quick mention of Docker Desktop alternatives")])],-1)),n[172]||(n[172]=e("p",null,"Docker Desktop is a fully-featured software allowing Mac and Windows systems to use a Linux virtual machine to run the Docker engine. It enables us to create and share containerized applications and microservices.",-1)),e("p",null,[n[106]||(n[106]=a("In August 2021, however, Docker Desktop announced ")),e("a",tn,[s(t,{icon:"fa-brands fa-docker"}),n[105]||(n[105]=a("changes to its licensing"))]),n[107]||(n[107]=a(", meaning it would no longer be free for companies with more than 250 employees or over $10 million in revenue."))]),n[173]||(n[173]=e("p",null,"However, there are several alternative approaches to containerization, often in the form of standalone tools, which sometimes offer better results than what Docker Desktop delivers:",-1)),n[174]||(n[174]=e("h3",{id:"rancher-desktop",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rancher-desktop"},[e("span",null,"Rancher Desktop")])],-1)),n[175]||(n[175]=e("figure",null,[e("img",{src:A,alt:"Rancher Desktop Docker Desktop alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Rancher Desktop Docker Desktop alternative")],-1)),e("p",null,[e("a",on,[s(t,{icon:"fas fa-globe"}),n[108]||(n[108]=a("Rancher Desktop"))]),n[109]||(n[109]=a(" features a built-in GUI and is easy to use. The container runtime used by Kubernetes and Rancher Desktop is similar. Lastly, Rancher Desktop offers container management for building, pushing, and running containers."))]),n[176]||(n[176]=e("p",null,"Rancher Desktop offers container management for building, pushing, and running containers. You have a choice between the Moby/dockerd engine offered by Docker CLI and the containerd engine offered by nerdctl. The containerd project provides nerdctl, a “Docker-compatible CLI for containerd.”",-1)),n[177]||(n[177]=e("h3",{id:"minikube",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#minikube"},[e("span",null,"Minikube")])],-1)),n[178]||(n[178]=e("figure",null,[e("img",{src:B,alt:"Minikube Docker Desktop Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Minikube Docker Desktop Alternative")],-1)),e("p",null,[e("a",ln,[n[110]||(n[110]=a("Minikube (")),s(t,{icon:"iconfont icon-github"}),n[111]||(n[111]=e("code",null,"kubernetes/minikube",-1)),n[112]||(n[112]=a(")"))]),n[113]||(n[113]=a(" is a method for running Kubernetes locally on macOS, Windows, or Linux. Minikube does not have a graphical user interface, although it is open source."))]),n[179]||(n[179]=e("p",null,"Minikube may be configured in almost every aspect, including the use of alternative container runtimes, the use of a custom virtual machine image, and support for GPU and other hardware pass-through.",-1)),n[180]||(n[180]=e("p",null,"Minikube works on macOS via the Hypervisor framework, Windows via Hyper-V, Linux via native (no virtual machine), Docker, or KVM. You may also run the machine in VirtualBox. However, if you’re using Kubernetes with Docker, Minikube is the only Docker Desktop alternative you can use. If you choose, you may run just Docker with Minikube. The architecture is straightforward, yet recursive.",-1)),n[181]||(n[181]=e("h3",{id:"lima",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#lima"},[e("span",null,"Lima")])],-1)),n[182]||(n[182]=e("figure",null,[e("img",{src:P,alt:"Lima Docker Desktop Alternative",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Lima Docker Desktop Alternative")],-1)),e("p",null,[e("a",rn,[n[114]||(n[114]=a("Lima (")),s(t,{icon:"iconfont icon-github"}),n[115]||(n[115]=e("code",null,"lima-vm/lima",-1)),n[116]||(n[116]=a(")"))]),n[122]||(n[122]=a(" is a container management application designed specifically for macOS, but it can be used on Linux as well. Lima promotes containerd and nerdctl (")),e("a",pn,[n[117]||(n[117]=a("contaiNERD (")),s(t,{icon:"iconfont icon-github"}),n[118]||(n[118]=e("code",null,"containerd/nerdctl",-1))]),n[123]||(n[123]=a(") ")),e("a",dn,[n[119]||(n[119]=a("ctl (")),s(t,{icon:"iconfont icon-github"}),n[120]||(n[120]=e("code",null,"containerd/nerdctl",-1)),n[121]||(n[121]=a(")"))]),n[124]||(n[124]=a(") to Mac users, although it may also be used for non-container apps. Lima provides Linux virtual machines with automated data transfer, port forwarding, and built-in support for containerd."))]),n[183]||(n[183]=l(`<p>You can install <code>lima</code> with this command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">brew <span class="token function">install</span> lima</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>After installation, you can start Lima using the command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">limactl start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>In this article, we’ve described several Docker alternatives for building, running, and distributing container images. Although Docker remains the dominant platform for containerization and container management, it’s good to know about different tools that may work better for our use cases.</p><p>Replacing a specific Docker aspect should be fairly seamless because each tool mentioned adheres to the OCI specification.</p><p>Generally speaking, in some cases we don’t really have to choose between Docker and something else. The OCI-compliance of basically all of the Docker alternatives enable us to experiment and to use different tools in different environments. For example, we could use Docker locally, for its simplicity and ecosystem, whereas we could be using containerd in our production environment. Even if (sometimes) limited, Dockerfiles do not couple us to Docker. As we saw, many tools are capable of building images from them.</p><p>Be sure to leave a comment if there is any tool you think we missed. Thanks for reading!</p>`,10)),v(" TODO: add ARTICLE CARD "),s(p,c(u({title:"The 10 best Docker alternatives to consider",desc:"Discover several Docker alternatives for building, running, and distributing container images, including Podman, Buildah, and more.",link:"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/docker-alternatives.html",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16)])}const gn=k(T,[["render",cn]]),kn=JSON.parse('{"path":"/blog.logrocket.com/docker-alternatives.html","title":"The 10 best Docker alternatives to consider","lang":"en-US","frontmatter":{"lang":"en-US","title":"The 10 best Docker alternatives to consider","description":"Article(s) > The 10 best Docker alternatives to consider","icon":"fa-brands fa-docker","category":["DevOps","Docker","Podman","Go","VM","Article(s)"],"tag":["blog","blog.logrocket.com","devops","docker","vm","go","golang"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"The 10 best Docker alternatives to consider\\",\\"image\\":[\\"https://blog.logrocket.com/wp-content/uploads/2022/10/DockerAlternatives_FeaturedImage.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/podman.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/buildah.png\\",\\"https://blog.logrocket.com/wp-content/uploads/2021/11/buildkit.png\\",\\"https://blog.logrocket.com/wp-content/uploads/2021/11/kaniko-docker-alternative.png\\",\\"https://blog.logrocket.com/wp-content/uploads/2021/11/skopeo-docker-alternative.webp\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/dive-ci-integration-1.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/crun-docker-alternative.jpeg\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/lxd-docker-alternative.jpeg\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/cointainerd-docker-alternative.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/cri-o-logo.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/rancher-desktop-docker-desktop-alternative.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/minikube-docker-desktop-alternative.jpeg\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/docker-alternatives/lima-docker-desktop-alternative.jpeg\\"],\\"datePublished\\":\\"2025-02-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ayooluwa Isaiah\\",\\"url\\":\\"https://blog.logrocket.com/author/ayooluwaisaiah/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/docker-alternatives.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"The 10 best Docker alternatives to consider"}],["meta",{"property":"og:description","content":"Article(s) > The 10 best Docker alternatives to consider"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.logrocket.com/wp-content/uploads/2022/10/DockerAlternatives_FeaturedImage.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://blog.logrocket.com/wp-content/uploads/2022/10/DockerAlternatives_FeaturedImage.png"}],["meta",{"name":"twitter:image:alt","content":"The 10 best Docker alternatives to consider"}],["meta",{"property":"article:author","content":"Ayooluwa Isaiah"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"go"}],["meta",{"property":"article:tag","content":"vm"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-02-21T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Top Docker and Docker Desktop alternatives"},{"property":"og:description","content":"Top Docker and Docker Desktop alternatives"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/docker-alternatives.html"}]],"prev":"/devops/docker/articles/README.md","date":"2025-02-21T00:00:00.000Z","isOriginal":false,"author":[{"name":"Ayooluwa Isaiah","url":"https://blog.logrocket.com/author/ayooluwaisaiah/"}],"cover":"https://blog.logrocket.com/wp-content/uploads/2022/10/DockerAlternatives_FeaturedImage.png"},"git":{},"readingTime":{"minutes":14.69,"words":4406},"filePathRelative":"blog.logrocket.com/docker-alternatives.md","copyright":{"author":"Ayooluwa Isaiah"}}');export{gn as comp,kn as data};
