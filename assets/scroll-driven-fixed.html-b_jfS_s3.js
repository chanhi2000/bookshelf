import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,d as e,f as s,b as h,a as g,t as v,n as r,g as c,e as a,r as i,o as f}from"./app-BVguHYKu.js";const k={},b={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"};function x(t,n){const o=i("VPCard"),p=i("SiteInfo"),l=i("CodePen"),d=i("BaselineStatus");return f(),u("div",null,[e("h1",b,[e("a",y,[e("span",null,v(t.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),s(o,r(c({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n[0]||(n[0]=e("nav",{class:"table-of-contents"},[e("ul")],-1)),n[1]||(n[1]=e("hr",null,null,-1)),s(p,{name:"Scroll-Driven & Fixed",desc:"It's quite fun to have an element react to another element scrolling in an unexpected way! ",url:"https://frontendmasters.com/blog/scroll-driven-fixed/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4812"}),n[2]||(n[2]=h(`<p>Scroll-driven animations is a good name. They are‚Ä¶ animations‚Ä¶ that are‚Ä¶ scroll-driven. As you scroll you can make something happen. The most basic kind, where a <code>@keyframe</code> is ran 0% to 100% as the element is scrolled 0% to 100% is particularly easy to wrap your mind around.</p><p>I also think it‚Äôs fun to mess with the expectations of scrolling.</p><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext"><pre><code class="language-plaintext"><span class="line">In very light, fun-only, non-crucial ways. Not in ways that would hurt the access of content.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Like what if we made an element that definitely scrolled:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.scrolling-element</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 100dvh<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">/* ... make something inside it taller than it is ... */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>But then all the content within it was <code>position: fixed;</code> so it didn‚Äôt move normally when the element was scrolled.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.scrolling-element</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 100dvh<span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">&gt; *</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Instead, we could have the elements react the scroll position however we wanted.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.scrolling-element</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">scroll-timeline-name</span><span class="token punctuation">:</span> --my-scroller<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">scroll-timeline-axis</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">&gt; *</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span> doSomethingCool linear<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">animation-timeline</span><span class="token punctuation">:</span> --my-scroller<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> doSomethingCool</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">100%</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">rotate</span><span class="token punctuation">:</span> 2turn<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here‚Äôs that basic setup:</p>`,10)),s(l,{user:"chriscoyier","slug-hash":"JoPNEjB",title:"Simple Fixed Spinner","default-tab":["css","result"],theme:t.$isDarkmode?"dark":"light"},null,8,["theme"]),s(d,{featureid:"scroll-driven-animations"}),n[3]||(n[3]=e("p",null,[a("I bet you could imagine that this is the same exact trick for a ‚Äúscroll position indicator‚Äù bit of UI. Position that "),e("code",null,"<div>"),a(" as like a 2px tall bar and have the "),e("code",null,"scaleX"),a(" transform go from 0 to 100% and donezo.")],-1)),n[4]||(n[4]=e("p",null,"I‚Äôll use the same spirit here to have a whole grid of cells use that ‚Äúscale to zero‚Äù animation to reveal a hidden picture.",-1)),s(l,{user:"chriscoyier","slug-hash":"zxOqqpx",title:"Here's Johnny - Scroll Driven Animations","default-tab":["css","result"],theme:t.$isDarkmode?"dark":"light"},null,8,["theme"]),n[5]||(n[5]=e("p",null,[a("I think that hidden picture thing is fun! I‚Äôm imagining a game where you have to guess the picture by scrolling down "),e("em",null,"as little as possible"),a(". Like ‚Äúname that tune‚Äù only ‚Äúname that movie still‚Äù or whatever.")],-1)),n[6]||(n[6]=e("p",null,"In this next one I took the idea a bit further and create randomized positions for each of the grid cells to ‚Äúfly off‚Äù to (in SCSS).",-1)),s(l,{user:"chriscoyier","slug-hash":"YPKqqaV",title:"You Win - Scroll Driven Animations - Different Take","default-tab":["css","result"],theme:t.$isDarkmode?"dark":"light"},null,8,["theme"]),n[7]||(n[7]=e("p",null,"I find that extraordinary that that kind of interaction can be done in HTML and CSS these days.",-1)),g(" TODO: add ARTICLE CARD "),s(o,r(c({title:"Scroll-Driven & Fixed",desc:"It's quite fun to have an element react to another element scrolling in an unexpected way! ",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/scroll-driven-fixed.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const D=m(k,[["render",x]]),C=JSON.parse('{"path":"/frontendmasters.com/scroll-driven-fixed.html","title":"Scroll-Driven & Fixed","lang":"en-US","frontmatter":{"lang":"en-US","title":"Scroll-Driven & Fixed","description":"Article(s) > Scroll-Driven & Fixed","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","frontendmasters.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Scroll-Driven & Fixed\\",\\"image\\":[\\"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4812\\"],\\"datePublished\\":\\"2024-12-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/scroll-driven-fixed.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Scroll-Driven & Fixed"}],["meta",{"property":"og:description","content":"Article(s) > Scroll-Driven & Fixed"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4812"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4812"}],["meta",{"name":"twitter:image:alt","content":"Scroll-Driven & Fixed"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-12-20T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Scroll-Driven & Fixed"},{"property":"og:description","content":"Scroll-Driven & Fixed"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/scroll-driven-fixed.html"}]],"prev":"/programming/css/articles/README.md","date":"2024-12-20T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4812"},"git":{},"readingTime":{"minutes":1.94,"words":583},"filePathRelative":"frontendmasters.com/scroll-driven-fixed.md","copyright":{"author":"Chris Coyier"}}');export{D as comp,C as data};
