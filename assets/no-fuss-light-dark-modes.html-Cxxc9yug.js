import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as n,f as t,b as l,a as k,t as b,n as c,g as u,w as a,e,r as o,o as y}from"./app-BVguHYKu.js";const v={},w={id:"frontmatter-title-관련",tabindex:"-1"},T={class:"header-anchor",href:"#frontmatter-title-관련"},S={class:"table-of-contents"},C={href:"https://css-tricks.com/flash-of-inaccurate-color-theme-fart/",target:"_blank",rel:"noopener noreferrer"};function I(d,s){const r=o("VPCard"),i=o("router-link"),m=o("SiteInfo"),p=o("RouteLink"),h=o("VPIcon");return y(),f("div",null,[n("h1",w,[n("a",T,[n("span",null,b(d.$frontmatter.title)+" 관련",1)])]),t(r,c(u({title:"CSS > Article(s)",desc:"Article(s)",link:"/programming/css/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",S,[n("ul",null,[n("li",null,[t(i,{to:"#the-basics"},{default:a(()=>s[0]||(s[0]=[e("The Basics")])),_:1,__:[0]})]),n("li",null,[t(i,{to:"#why-is-offering-a-site-level-toggle-so-challenging"},{default:a(()=>s[1]||(s[1]=[e("Why is offering a site-level toggle so challenging?")])),_:1,__:[1]})]),n("li",null,[t(i,{to:"#the-effect"},{default:a(()=>s[2]||(s[2]=[e("The Effect")])),_:1,__:[2]})])])]),s[20]||(s[20]=n("hr",null,null,-1)),t(m,{name:"No Fuss Light/Dark Modes",desc:"One approach to color modes it to do it all in CSS with prefers-color-scheme media queries and/or the light-dark() function. A user toggle can be a future improvement.",url:"https://frontendmasters.com/blog/no-fuss-light-dark-modes/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4412"}),s[21]||(s[21]=n("p",null,"There was some user feedback this site should have a light mode instead of all-dark-all-the-time. The theme of this site is simple enough that some quick design tweaks is all it took.",-1)),s[22]||(s[22]=n("p",null,"But here’s the thing: it just relies on your system preference.",-1)),n("p",null,[s[4]||(s[4]=e("(Or whatever is controlling what ")),s[5]||(s[5]=n("code",null,"prefers-color-scheme",-1)),s[6]||(s[6]=e(" is returning in your browser. I use the browser Arc sometimes and it’s Light/Dark modes override what is set in my System Preferences. It ")),t(p,{to:"/frontendmasters.com/why-is-this-thing-in-dark-mode.html"},{default:a(()=>s[3]||(s[3]=[n("strong",null,"can get confusing",-1)])),_:1,__:[3]}),s[7]||(s[7]=e(".)"))]),s[23]||(s[23]=l(`<p>It’s more on-trend when offering color modes to offer users a <strong>toggle.</strong> That way users can easily choose between which they prefer without ever leaving your site. And they might have a preference that is the <em>opposite</em> of what their overall system preference is. Those are perfectly fair and legitment things.</p><p>Those things also complicate the work.</p><p>I think it’s also perfectly fair to make development choices that are purposefully <em>un</em>complicated.</p><p>In this case, choosing to support light and dark modes <em>entirely within CSS alone</em> was the uncomplicated choice.</p><hr><h2 id="the-basics" tabindex="-1"><a class="header-anchor" href="#the-basics"><span>The Basics</span></a></h2><p>It really is just this:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">html</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">--brand-red</span><span class="token punctuation">:</span> <span class="token function">oklch</span><span class="token punctuation">(</span>0.67 0.24 27.98<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token property">--bg</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--text</span><span class="token punctuation">:</span> #ffdbdb<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token property">--link-color</span><span class="token punctuation">:</span> #4ac6ff<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--link-color-hover</span><span class="token punctuation">:</span> #9ce0ff<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--bright-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">--faded-color</span><span class="token punctuation">:</span> #373232<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> light<span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">html</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">--bg</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">--text</span><span class="token punctuation">:</span> #323232<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token property">--link-color</span><span class="token punctuation">:</span> #068dcb<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">--link-color-hover</span><span class="token punctuation">:</span> #67cfff<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">--bright-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">--faded-color</span><span class="token punctuation">:</span> #dedede<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then steadfastly use those color variables everywhere any color is set.</p><p>The red stays the same across both. Fortunately red is fine with that.</p><p>The main point of modes is that <em>most</em> of the color should be dominantly dark or dominantly light, which is <em>mostly</em> about backgrounds. So the <code>--bg</code> background does the work there and the <code>--text</code> variable is an accessible color that sits on top of that background.</p><p>But it’s never <em>quite that easy</em>. You always need to need a couple of more colors, even on simple sites. So here I’m setting up variables for links and a couple of variations.</p><p>Purposefully simple.</p>`,13)),n("p",null,[s[9]||(s[9]=e("I kinda like approach of just changing same-named ")),s[10]||(s[10]=n("code",null,"--custom-properties",-1)),s[11]||(s[11]=e(" myself, but there are alternatives. For instance you could use named colors (e.g. ")),s[12]||(s[12]=n("code",null,"--my-gray-8",-1)),s[13]||(s[13]=e(") then use the ")),t(p,{to:"/frontendmasters.com/dark-and-light.html"},{default:a(()=>s[8]||(s[8]=[n("strong",null,[e("now well-supported "),n("code",null,"light-dark()"),e(" function")],-1)])),_:1,__:[8]}),s[14]||(s[14]=e(" to do something like:"))]),s[24]||(s[24]=l(`<div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.card</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">light-dark</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--my-gray-4<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">var</span><span class="token punctuation">(</span>--my-gray-9<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">light-dark</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--my-gray-9<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">var</span><span class="token punctuation">(</span>--my-gray-1<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="why-is-offering-a-site-level-toggle-so-challenging" tabindex="-1"><a class="header-anchor" href="#why-is-offering-a-site-level-toggle-so-challenging"><span>Why is offering a site-level toggle so challenging?</span></a></h2>`,3)),n("ul",null,[s[18]||(s[18]=n("li",null,[e("The site level choice needs to override any other choice, so it means you can’t leverage "),n("code",null,"@media"),e(" very cleanly. But you still need to use "),n("code",null,"@media"),e(" for the default if there isn’t a choice, so you can’t back away from it entirely.")],-1)),s[19]||(s[19]=n("li",null,[e("You have to persist the choice, otherwise simply refreshing the browser could wipe away the choice, which is pretty weak sauce. Persisting data means at a minimum using "),n("code",null,"localStorage"),e(" or cookies, but you’d probably want to do better than that.")],-1)),n("li",null,[s[16]||(s[16]=e("The user choice can be different on the site than what their system or browser-level choice might be, so you need to load what that choice is before you render anything. Otherwise you risk ")),n("a",C,[t(h,{icon:"fas fa-globe"}),s[15]||(s[15]=e("Flash of inAccurate coloR Theme(FART)"))]),s[17]||(s[17]=e(" which is incredibly awkward."))])]),s[25]||(s[25]=l('<p>I’d say it’s still worth doing if you’re working on a “big” site where you expect quite a bit of time-on-site from your users. You can also do something like I’ve done above <em>as a first step</em> and then move onto a toggle approach.</p><hr><h2 id="the-effect" tabindex="-1"><a class="header-anchor" href="#the-effect"><span>The Effect</span></a></h2><p>I swear the change is much smoother than this (no thanks to <code>transition</code> or anything, macOS just makes it super smooth somehow). But when I was recording this video it wanted to be a more more abrupt 🤷‍♀️.</p><p>This was based on user-feedback, remember? Well one of those users noticed immediately and thanked Marc because it’s a better experience for them.</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/11/IMG_0320.jpg?resize=1024%2C813&amp;ssl=1" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',6)),k(" TODO: add ARTICLE CARD "),t(r,c(u({title:"No Fuss Light/Dark Modes",desc:"One approach to color modes it to do it all in CSS with prefers-color-scheme media queries and/or the light-dark() function. A user toggle can be a future improvement.",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/no-fuss-light-dark-modes.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const x=g(v,[["render",I]]),A=JSON.parse('{"path":"/frontendmasters.com/no-fuss-light-dark-modes.html","title":"No Fuss Light/Dark Modes","lang":"en-US","frontmatter":{"lang":"en-US","title":"No Fuss Light/Dark Modes","description":"Article(s) > No Fuss Light/Dark Modes","icon":"fa-brands fa-css3-alt","category":["CSS","Article(s)"],"tag":["blog","frontendmasters.com","css"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"No Fuss Light/Dark Modes\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/11/IMG_0320.jpg?resize=1024%2C813&ssl=1\\"],\\"datePublished\\":\\"2024-11-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/no-fuss-light-dark-modes.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"No Fuss Light/Dark Modes"}],["meta",{"property":"og:description","content":"Article(s) > No Fuss Light/Dark Modes"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4412"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4412"}],["meta",{"name":"twitter:image:alt","content":"No Fuss Light/Dark Modes"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-18T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > No Fuss Light/Dark Modes"},{"property":"og:description","content":"No Fuss Light/Dark Modes"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/no-fuss-light-dark-modes.html"}]],"prev":"/programming/css/articles/README.md","date":"2024-11-18T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4412"},"git":{},"readingTime":{"minutes":3.04,"words":911},"filePathRelative":"frontendmasters.com/no-fuss-light-dark-modes.md","copyright":{"author":"Chris Coyier"}}');export{x as comp,A as data};
