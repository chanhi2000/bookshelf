import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as s,f as e,b as c,a as v,t as k,n as d,g as u,w as o,e as a,r as l,o as h}from"./app-BVguHYKu.js";const f={},w={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},q={class:"table-of-contents"},S={href:"https://medium.com/@niranjanky14/sonarqube-tutorial-for-getting-started-in-android-app-7d11e2ef6932",target:"_blank",rel:"noopener noreferrer"},j={id:"step-1-in-app-s-build-gradle-if-we-add-sonarqube-plugin-and-other-details-like-this",tabindex:"-1"},D={class:"header-anchor",href:"#step-1-in-app-s-build-gradle-if-we-add-sonarqube-plugin-and-other-details-like-this"};function A(m,n){const i=l("VPCard"),t=l("router-link"),p=l("VPIcon"),r=l("SiteInfo");return h(),b("div",null,[s("h1",w,[s("a",y,[s("span",null,k(m.$frontmatter.title)+" 관련",1)])]),e(i,d(u({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e(i,d(u({title:"Docker > Article(s)",desc:"Article(s)",link:"/devops/docker/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",q,[s("ul",null,[s("li",null,[e(t,{to:"#introduction"},{default:o(()=>n[0]||(n[0]=[a("Introduction")])),_:1,__:[0]})]),s("li",null,[e(t,{to:"#steps-to-implement"},{default:o(()=>n[1]||(n[1]=[a("Steps to implement")])),_:1,__:[1]}),s("ul",null,[s("li",null,[e(t,{to:"#step-1-downloadsonarqube-free-editionfrom-below-link"},{default:o(()=>n[2]||(n[2]=[a("Step 1. DownloadSonarQube Free Editionfrom below link")])),_:1,__:[2]})]),s("li",null,[e(t,{to:"#step-2-download-and-installdockerfrom-below-link"},{default:o(()=>n[3]||(n[3]=[a("Step 2. Download and installDockerfrom below link")])),_:1,__:[3]})]),s("li",null,[e(t,{to:"#step-3-open-terminal-and-run-the-following-command"},{default:o(()=>n[4]||(n[4]=[a("Step 3. Open terminal and run the following command")])),_:1,__:[4]})]),s("li",null,[e(t,{to:"#step-4-after-step-3-enter-the-following-command-to-pull-all-the-necessary-postgres-library"},{default:o(()=>n[5]||(n[5]=[a("Step 4:After step 3, enter the following command to pull all the necessary postgres library")])),_:1,__:[5]})]),s("li",null,[e(t,{to:"#step-5-setup-the-sonarqube-container-with-a-link-to-postgressql-using-the-following-command"},{default:o(()=>n[6]||(n[6]=[a("Step 5:Setup the SonarQube container with a link to PostgresSQL using the following command")])),_:1,__:[6]})])])]),s("li",null,[e(t,{to:"#configuration"},{default:o(()=>n[7]||(n[7]=[a("Configuration")])),_:1,__:[7]}),s("ul",null,[s("li",null,[e(t,{to:"#step-1-in-app-s-build-gradle-if-we-add-sonarqube-plugin-and-other-details-like-this"},{default:o(()=>[n[8]||(n[8]=a("Step 1: In app’s ")),e(p,{icon:"iconfont icon-gradle"}),n[9]||(n[9]=a("build.gradle, if we add SonarQube Plugin and other details like this"))]),_:1,__:[8,9]})]),s("li",null,[e(t,{to:"#step-2-in-gradle-properties"},{default:o(()=>n[10]||(n[10]=[a("Step 2: In gradle.properties")])),_:1,__:[10]})]),s("li",null,[e(t,{to:"#step-3-finally-run-your-sonar-analysis-for-your-project-using-this-command-in-android-studio-terminal"},{default:o(()=>n[11]||(n[11]=[a("Step 3: Finally run your sonar analysis for your project using this command in Android Studio Terminal:")])),_:1,__:[11]})])])]),s("li",null,[e(t,{to:"#view-sonarqube-reports"},{default:o(()=>n[12]||(n[12]=[a("View SonarQube Reports:")])),_:1,__:[12]})])])]),n[21]||(n[21]=s("hr",null,null,-1)),e(r,{name:"SonarQube in Android — Implementation tips and challenges faced",desc:"SonarQube is an open-source tool that helps developers and teams improve the quality of their code:",url:"https://droidcon.com/sonarqube-in-android-implementation-tips-and-challenges-faced",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/11/1_Qb_6n_mQxOyOTuuf48s9XQ-1024x388.webp"}),n[22]||(n[22]=c('<hr><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>SonarQube is an open-source tool that helps developers and teams improve the quality of their code:</p><ul><li><strong>Code quality analysis</strong>: Analyzes code quality for over 30 languages, frameworks, and IaC platforms</li><li><strong>Automatic reviews</strong>: Performs automatic reviews with static analysis of code to detect bugs and code smells</li><li><strong>Integration with DevOps platforms</strong>: Integrates with GitHub, GitLab, Azure, and Bitbucket</li><li><strong>Real-time feedback</strong>: Provides immediate feedback in your IDE as you write code</li><li><strong>Quality gates</strong>: Keeps code with issues from being released to production</li></ul><hr><h2 id="steps-to-implement" tabindex="-1"><a class="header-anchor" href="#steps-to-implement"><span>Steps to implement</span></a></h2>',6)),s("p",null,[n[16]||(n[16]=a("I followed this ")),s("a",S,[n[13]||(n[13]=a("medium article (")),e(p,{icon:"fa-brands fa-medium"}),n[14]||(n[14]=s("code",null,"@niranjanky14",-1)),n[15]||(n[15]=a(")"))]),n[17]||(n[17]=a("while trying to implement SonarQube."))]),n[23]||(n[23]=s("h3",{id:"step-1-downloadsonarqube-free-editionfrom-below-link",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#step-1-downloadsonarqube-free-editionfrom-below-link"},[s("span",null,[a("Step 1. Download"),s("strong",null,"SonarQube Free Edition"),a("from below link")])])],-1)),e(r,{name:"Download SonarQube",desc:"Get the latest version of SonarQube, the leading product for code quality and security, from the official download page.",url:"https://sonarsource.com/products/sonarqube/downloads/",logo:"https://sonarsource.com/favicon.ico",preview:"https://assets-eu-01.kc-usercontent.com:443/f42196a6-70a1-01d0-99f1-43134f12a58b/85b81454-7b7d-4a5b-aa0a-ccfb58055bf9/meta-tag-sonar.png"}),n[24]||(n[24]=s("h3",{id:"step-2-download-and-installdockerfrom-below-link",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#step-2-download-and-installdockerfrom-below-link"},[s("span",null,[a("Step 2. Download and install"),s("strong",null,"Docker"),a("from below link")])])],-1)),e(r,{name:"Home",desc:"Docker is a platform designed to help developers build, share, and run container applications. We handle the tedious setup, so you can focus on the code.",url:"https://docker.com/",logo:"https://docker.com/wp-content/uploads/2024/02/cropped-docker-logo-favicon-192x192.png",preview:"https://docker.com/wp-content/uploads/2013/06/Docker-logo-01.png"}),n[25]||(n[25]=c(`<h3 id="step-3-open-terminal-and-run-the-following-command" tabindex="-1"><a class="header-anchor" href="#step-3-open-terminal-and-run-the-following-command"><span>Step 3. Open terminal and run the following command</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> pull sonarqube:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">Note</p><p>If you get an error —<strong>Docker command not found</strong>, then export its path</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$PATH</span>:/Applications/Docker.app/Contents/Resources/bin/&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Keep Docker Application open in your system while typing the command<strong>docker pull sonarqube:latest,</strong> otherwise you may get the following error</p><blockquote><p><em>Cannot connect to the Docker daemon at <code>unix:///var/run/docker.sock</code>. Is the docker daemon running?</em></p></blockquote></div><p>If Step 3 is successful, you will see the following</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> pull sonarqube:latest</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># latest: Pulling from library/sonarqube</span></span>
<span class="line"><span class="token comment"># a186900671ab: Download complete</span></span>
<span class="line"><span class="token comment"># 4821edbf1831: Download complete</span></span>
<span class="line"><span class="token comment"># 4bec9b5f92ec: Download complete</span></span>
<span class="line"><span class="token comment"># b0c3c08b4553: Download complete</span></span>
<span class="line"><span class="token comment"># 4f4fb700ef54: Download complete</span></span>
<span class="line"><span class="token comment"># 666db0722bb8: Download complete</span></span>
<span class="line"><span class="token comment"># 26811a6e12de: Download complete</span></span>
<span class="line"><span class="token comment"># 6c88cd8dd883: Download complete</span></span>
<span class="line"><span class="token comment"># Digest: sha256:0842dcd4c8f851ce44f8edaf45ac93f7c9079017d60d99f614663e60cef5efe9</span></span>
<span class="line"><span class="token comment"># Status: Downloaded newer image for sonarqube:latest</span></span>
<span class="line"><span class="token comment"># docker.io/library/sonarqube:latest</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-4-after-step-3-enter-the-following-command-to-pull-all-the-necessary-postgres-library" tabindex="-1"><a class="header-anchor" href="#step-4-after-step-3-enter-the-following-command-to-pull-all-the-necessary-postgres-library"><span>Step 4:After step 3, enter the following command to pull all the necessary postgres library</span></a></h3><p>If Step 4 is successful, you will see the following results</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> sonarqube-db <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>sonar <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>sonar <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_DB</span><span class="token operator">=</span>sonarqube <span class="token punctuation">\\</span></span>
<span class="line">postgres:alpine</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Unable to find image &#39;postgres:alpine&#39; locally</span></span>
<span class="line"><span class="token comment"># alpine: Pulling from library/postgres</span></span>
<span class="line"><span class="token comment"># 440196fcba86: Download complete </span></span>
<span class="line"><span class="token comment"># c97ff27562e7: Download complete </span></span>
<span class="line"><span class="token comment"># 2f5a5dbb159e: Download complete </span></span>
<span class="line"><span class="token comment"># e64e42d2e378: Download complete </span></span>
<span class="line"><span class="token comment"># 0a8fa91fd8dd: Download complete </span></span>
<span class="line"><span class="token comment"># 368fad94fbf5: Download complete </span></span>
<span class="line"><span class="token comment"># cf04c63912e1: Download complete </span></span>
<span class="line"><span class="token comment"># 044d9972b6f9: Download complete </span></span>
<span class="line"><span class="token comment"># 1c4b963fa70b: Download complete </span></span>
<span class="line"><span class="token comment"># fc336a10ac24: Download complete </span></span>
<span class="line"><span class="token comment"># Digest: sha256:14195b0729fce792f47ae3c3704d6fd04305826d57af3b01d5b4d004667df174</span></span>
<span class="line"><span class="token comment"># Status: Downloaded newer image for postgres:alpine</span></span>
<span class="line"><span class="token comment"># 44c04103a85884090a9cbe479c4dd3c2fa73f4d61c56c35cfaed5c474db52528</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-5-setup-the-sonarqube-container-with-a-link-to-postgressql-using-the-following-command" tabindex="-1"><a class="header-anchor" href="#step-5-setup-the-sonarqube-container-with-a-link-to-postgressql-using-the-following-command"><span>Step 5:Setup the SonarQube container with a link to PostgresSQL using the following command</span></a></h3><p>On successful completion of Step 5, you will see a<strong>hash</strong>value. For me it was</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> sonarqube <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">--link</span> sonarqube-db:db <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_JDBC_URL</span><span class="token operator">=</span>jdbc:postgresql://db:5432/sonarqube <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_JDBC_USERNAME</span><span class="token operator">=</span>sonar <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">SONAR_JDBC_PASSWORD</span><span class="token operator">=</span>sonar sonarqube</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># b473d891d6f9e842fe2e7ba72b2b0493640ca44552250e6770d6d9468ad1c956</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once SonarQube is up and running, you can access the web interface by opening<code>http://localhost:9000</code>(or the appropriate IP address if running on a remote server) in your web browser.</p><p>The default login credentials for the first-time login are<code>admin</code>for both<strong>username and password</strong>. You’ll be prompted to change the password after the initial login.</p><p>Next, we can see how to configure SonarQube in Android Studio</p><hr><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2>`,16)),s("h3",j,[s("a",D,[s("span",null,[n[18]||(n[18]=a("Step 1: In app’s ")),e(p,{icon:"iconfont icon-gradle"}),n[19]||(n[19]=s("code",null,"build.gradle",-1)),n[20]||(n[20]=a(", if we add SonarQube Plugin and other details like this"))])])]),n[26]||(n[26]=c(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="build.gradle"><span>build.gradle</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">allprojects <span class="token punctuation">{</span></span>
<span class="line">    apply plugin<span class="token punctuation">:</span> <span class="token string">&#39;org.sonarqube&#39;</span></span>
<span class="line">    sonar <span class="token punctuation">{</span></span>
<span class="line">        properties <span class="token punctuation">{</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.host.url&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;http://localhost:9000&quot;</span></span> </span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.test.inclusions&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;src/test/**&quot;</span></span></span>
<span class="line">            property <span class="token string">&#39;sonar.profile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Android Lint&#39;</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.sourceEncoding&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;UTF-8&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectName&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;SonarTestApp&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectKey&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;SonarTestKey&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectVersion&quot;</span></span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">0</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.login&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;sqp_123123kj123k123j123kj123j1k23k123jk132j&quot;</span></span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>we may get the following error <strong>Plugin with id ‘org.sonarqube’ not found</strong></p><p>So, we can try this instead (applying plugin outside allprojects and mentioning other details inside allprojects)</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="build.gradle"><span>build.gradle</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line">    id <span class="token interpolation-string"><span class="token string">&quot;org.sonarqube&quot;</span></span> version <span class="token interpolation-string"><span class="token string">&quot;4.0.0.2929&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="build.gradle"><span>build.gradle</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">allprojects <span class="token punctuation">{</span></span>
<span class="line">    sonar <span class="token punctuation">{</span></span>
<span class="line">        properties <span class="token punctuation">{</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.host.url&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;http://localhost:9000&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.test.inclusions&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;src/test/**&quot;</span></span></span>
<span class="line">            property <span class="token string">&#39;sonar.profile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Android Lint&#39;</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.sourceEncoding&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;UTF-8&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectName&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;SonarTestApp&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectKey&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;SonarTestKey&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectVersion&quot;</span></span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">.</span><span class="token number">0</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.login&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;sqp_123123kj123k123j123kj123j1k23k123jk132j&quot;</span></span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>In the above code, property “sonar.projectVersion” should match your project’s <code>versionName</code>.</p><h3 id="step-2-in-gradle-properties" tabindex="-1"><a class="header-anchor" href="#step-2-in-gradle-properties"><span>Step 2: In gradle.properties</span></a></h3><div class="code-block-with-title"><div class="code-block-title-bar" data-title="gradle.properties"><span>gradle.properties</span></div><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties"><pre><code class="language-properties"><span class="line"><span class="token key attr-name">systemProp.sonar.host.url</span><span class="token punctuation">=</span><span class="token value attr-value">http://localhost:9000</span></span>
<span class="line"><span class="token comment"># (Optional, if not using credentials in build.gradle)</span></span>
<span class="line"><span class="token key attr-name">systemProp.sonar.login</span><span class="token punctuation">=</span><span class="token value attr-value">your_sonar_username</span></span>
<span class="line"><span class="token key attr-name">systemProp.sonar.password</span><span class="token punctuation">=</span><span class="token value attr-value">your_sonar_password</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="step-3-finally-run-your-sonar-analysis-for-your-project-using-this-command-in-android-studio-terminal" tabindex="-1"><a class="header-anchor" href="#step-3-finally-run-your-sonar-analysis-for-your-project-using-this-command-in-android-studio-terminal"><span>Step 3: Finally run your sonar analysis for your project using this command in Android Studio Terminal:</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">./gradlew sonarqube</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You may get the following error if JDK is not installed.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><blockquote><p>The operation couldn’t be completed. Unable to locate a Java Runtime.</p></blockquote><p>I downloaded suitable JDK Version 17 as my <strong>Android Gradle plugin requires Java 17 to run</strong>. After installing JDK and typing the same command <code>./gradlew sonarqube</code> again</p></div><p>Build was getting failed due to an error.</p><p>:: warning</p><blockquote><p>Execution failed for task ‘:app:sonarqube’. &gt; Cannot get property ‘0.0’ on null object</p></blockquote><p><strong>Solution?</strong> From Step 2, we should replace property <code>&quot;sonar.projectVersion”</code>, <code>1.0.0</code> to <code>“sonar.projectVersion”</code>, <code>1.0</code> (as my project’s <code>versionName</code> is 1.0) like this</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="build.gradle"><span>build.gradle</span></div><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy"><pre><code class="language-groovy"><span class="line">allprojects <span class="token punctuation">{</span></span>
<span class="line">    sonar <span class="token punctuation">{</span></span>
<span class="line">        properties <span class="token punctuation">{</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.host.url&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;http://localhost:9000&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.test.inclusions&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;src/test/**&quot;</span></span></span>
<span class="line">            property <span class="token string">&#39;sonar.profile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Android Lint&#39;</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.sourceEncoding&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;UTF-8&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectName&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;SonarTestApp&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectKey&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;SonarTestKey&quot;</span></span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.projectVersion&quot;</span></span><span class="token punctuation">,</span> <span class="token number">1.0</span></span>
<span class="line">            property <span class="token interpolation-string"><span class="token string">&quot;sonar.login&quot;</span></span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">&quot;sqp_123123kj123k123j123kj123j1k23k123jk132j&quot;</span></span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>:::</p><p>After all steps are successful, we will get <strong>BUILD SUCCESSFUL</strong> message in terminal</p><hr><h2 id="view-sonarqube-reports" tabindex="-1"><a class="header-anchor" href="#view-sonarqube-reports"><span>View SonarQube Reports:</span></a></h2><ul><li>Open your SonarQube server URL (usually <code>http://localhost:9000</code>) in a web browser.</li><li>Log in with your SonarQube credentials.</li><li>You should see your project listed and its code quality metrics.</li></ul><p>Screenshots for my sample project has been attached for reference</p><p><img src="https://www.droidcon.com/wp-content/uploads/2024/11/1_yZX7v1lT7UQ1GmDm3tnGGA-600x388.webp" alt="" loading="lazy"><img src="https://www.droidcon.com/wp-content/uploads/2024/11/1_MGCdMMi7qmwgRkqzaRiqRQ-600x388.webp" alt="" loading="lazy"><img src="https://www.droidcon.com/wp-content/uploads/2024/11/1_DO7zpYwYrJoeQzL3WULpMQ-600x388.webp" alt="" loading="lazy"></p>`,24)),v(" TODO: add ARTICLE CARD "),e(i,d(u({title:"SonarQube in Android — Implementation tips and challenges faced",desc:"SonarQube is an open-source tool that helps developers and teams improve the quality of their code:",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/sonarqube-in-android-implementation-tips-and-challenges-faced.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const _=g(f,[["render",A]]),I=JSON.parse('{"path":"/droidcon.com/sonarqube-in-android-implementation-tips-and-challenges-faced.html","title":"SonarQube in Android — Implementation tips and challenges faced","lang":"en-US","frontmatter":{"lang":"en-US","title":"SonarQube in Android — Implementation tips and challenges faced","description":"Article(s) > SonarQube in Android — Implementation tips and challenges faced","icon":"fa-brands fa-android","category":["Java","Kotlin","Android","DevOps","Docker","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android","devops","vm","docker"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SonarQube in Android — Implementation tips and challenges faced\\",\\"image\\":[\\"https://www.droidcon.com/wp-content/uploads/2024/11/1_yZX7v1lT7UQ1GmDm3tnGGA-600x388.webp\\",\\"https://www.droidcon.com/wp-content/uploads/2024/11/1_MGCdMMi7qmwgRkqzaRiqRQ-600x388.webp\\",\\"https://www.droidcon.com/wp-content/uploads/2024/11/1_DO7zpYwYrJoeQzL3WULpMQ-600x388.webp\\"],\\"datePublished\\":\\"2024-11-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dilipchandar\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/sonarqube-in-android-implementation-tips-and-challenges-faced.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"SonarQube in Android — Implementation tips and challenges faced"}],["meta",{"property":"og:description","content":"Article(s) > SonarQube in Android — Implementation tips and challenges faced"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/11/1_Qb_6n_mQxOyOTuuf48s9XQ-1024x388.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/11/1_Qb_6n_mQxOyOTuuf48s9XQ-1024x388.webp"}],["meta",{"name":"twitter:image:alt","content":"SonarQube in Android — Implementation tips and challenges faced"}],["meta",{"property":"article:author","content":"Dilipchandar"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"vm"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-26T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > SonarQube in Android — Implementation tips and challenges faced"},{"property":"og:description","content":"SonarQube in Android — Implementation tips and challenges faced"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/sonarqube-in-android-implementation-tips-and-challenges-faced.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-11-26T00:00:00.000Z","isOriginal":false,"author":"Dilipchandar","cover":"https://droidcon.com/wp-content/uploads/2024/11/1_Qb_6n_mQxOyOTuuf48s9XQ-1024x388.webp"},"git":{},"readingTime":{"minutes":4.05,"words":1214},"filePathRelative":"droidcon.com/sonarqube-in-android-implementation-tips-and-challenges-faced.md","copyright":{"author":"Dilipchandar"}}');export{_ as comp,I as data};
