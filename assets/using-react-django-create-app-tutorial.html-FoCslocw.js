import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,d as s,f as t,b as o,e as a,a as b,t as h,n as d,g as k,w as p,r as c,o as f}from"./app-BVguHYKu.js";const w="/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/final-visualization.png",y="/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/testing-endpoints-django-student-list.png",j="/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/frontend-components-header-home.png",x="/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/creating-new-student-modal.png",q={},S={id:"frontmatter-title-관련",tabindex:"-1"},T={class:"header-anchor",href:"#frontmatter-title-관련"},R={class:"table-of-contents"},D={href:"https://djangoproject.com/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://docs.graphene-python.org/projects/django/en/latest/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://djangogrpcframework.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://main.grokoverflow.com/posts/2022/02-understanding-rpc-node-walkthrough",target:"_blank",rel:"noopener noreferrer"},C={href:"https://graphql.org/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://python.org/download/releases/3.0/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://pypi.org/project/pip/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://npmjs.com/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/pyenv/pyenv",target:"_blank",rel:"noopener noreferrer"},H={href:"https://docs.python.org/3/tutorial/venv.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://docs.python.org/3/tutorial/venv.html",target:"_blank",rel:"noopener noreferrer"},U={href:"https://stackoverflow.com/questions/52827722/folder-naming-convention-for-python-projects",target:"_blank",rel:"noopener noreferrer"},O={href:"https://djangoproject.com/",target:"_blank",rel:"noopener noreferrer"},B={class:"hint-container note"},W={href:"https://django-rest-framework.org/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/adamchainz/django-cors-headers",target:"_blank",rel:"noopener noreferrer"},V={href:"https://docs.djangoproject.com/en/4.0/ref/django-admin/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://docs.djangoproject.com/en/3.0/ref/models/instances/#django.db.models.Model",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://docs.djangoproject.com/en/3.0/ref/models/instances/#django.db.models.Model",target:"_blank",rel:"noopener noreferrer"},Q={href:"http://django-rest-framework.org/api-guide/serializers/",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://django-rest-framework.org/topics/browsable-api/",target:"_blank",rel:"noopener noreferrer"},$={href:"https://blog.logrocket.com/tag/react/",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/diogosouza/django-react-logrocket",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/pallets/flask",target:"_blank",rel:"noopener noreferrer"},_={href:"https://django-rest-framework.org/api-guide/pagination/",target:"_blank",rel:"noopener noreferrer"};function nn(m,n){const u=c("VPCard"),l=c("router-link"),r=c("SiteInfo"),e=c("VPIcon"),i=c("RouteLink");return f(),v("div",null,[s("h1",S,[s("a",T,[s("span",null,h(m.$frontmatter.title)+" 관련",1)])]),t(u,d(k({title:"Django > Article(s)",desc:"Article(s)",link:"/programming/py-django/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t(u,d(k({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",R,[s("ul",null,[s("li",null,[t(l,{to:"#how-do-we-send-data-from-django-to-react"},{default:p(()=>n[0]||(n[0]=[a("How do we send data from Django to React?")])),_:1,__:[0]})]),s("li",null,[t(l,{to:"#setting-up-python-and-django"},{default:p(()=>n[1]||(n[1]=[a("Setting up Python and Django")])),_:1,__:[1]}),s("ul",null,[s("li",null,[t(l,{to:"#setting-up-python"},{default:p(()=>n[2]||(n[2]=[a("Setting up Python")])),_:1,__:[2]})]),s("li",null,[t(l,{to:"#setting-up-django"},{default:p(()=>n[3]||(n[3]=[a("Setting up Django")])),_:1,__:[3]})])])]),s("li",null,[t(l,{to:"#adding-models-and-views-to-django"},{default:p(()=>n[4]||(n[4]=[a("Adding models and views to Django")])),_:1,__:[4]})]),s("li",null,[t(l,{to:"#migrating-our-django-models-to-the-database"},{default:p(()=>n[5]||(n[5]=[a("Migrating our Django models to the database")])),_:1,__:[5]})]),s("li",null,[t(l,{to:"#diving-into-our-django-rest-api"},{default:p(()=>n[6]||(n[6]=[a("Diving into our Django REST API")])),_:1,__:[6]})]),s("li",null,[t(l,{to:"#testing-our-endpoints-in-django"},{default:p(()=>n[7]||(n[7]=[a("Testing our endpoints in Django")])),_:1,__:[7]})]),s("li",null,[t(l,{to:"#building-the-react-app"},{default:p(()=>n[8]||(n[8]=[a("Building the React app")])),_:1,__:[8]}),s("ul",null,[s("li",null,[t(l,{to:"#crud-react-components"},{default:p(()=>n[9]||(n[9]=[a("CRUD React components")])),_:1,__:[9]})]),s("li",null,[t(l,{to:"#setting-up-our-react-app-to-integrate-with-django"},{default:p(()=>n[10]||(n[10]=[a("Setting up our React app to integrate with Django")])),_:1,__:[10]})]),s("li",null,[t(l,{to:"#working-on-the-header-component"},{default:p(()=>n[11]||(n[11]=[a("Working on the header component")])),_:1,__:[11]})]),s("li",null,[t(l,{to:"#working-on-the-creating-new-student-form"},{default:p(()=>n[12]||(n[12]=[a("Working on the Creating New Student form")])),_:1,__:[12]})]),s("li",null,[t(l,{to:"#working-on-the-modal-to-edit-student-information"},{default:p(()=>n[13]||(n[13]=[a("Working on the modal to edit student information")])),_:1,__:[13]})]),s("li",null,[t(l,{to:"#creating-the-students-listing"},{default:p(()=>n[14]||(n[14]=[a("Creating the students listing")])),_:1,__:[14]})]),s("li",null,[t(l,{to:"#working-on-the-home-component"},{default:p(()=>n[15]||(n[15]=[a("Working on the home component")])),_:1,__:[15]})])])]),s("li",null,[t(l,{to:"#conclusion"},{default:p(()=>n[16]||(n[16]=[a("Conclusion")])),_:1,__:[16]})])])]),n[222]||(n[222]=s("hr",null,null,-1)),t(r,{name:"Using React with Django to create an app: Tutorial",desc:"Learn how to integrate React with Django, create a simple CRUD API with the Django REST framework free from common CORS issues, and more.",url:"https://blog.logrocket.com/using-react-django-create-app-tutorial",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/banner.png"}),n[223]||(n[223]=s("div",{class:"hint-container note"},[s("p",{class:"hint-container-title"},"Editor's note"),s("p",null,"This post was updated on 15 July 2022 to reflect the most recent versions of React and Django, as well as to add information about how to send data between React and Django.")],-1)),s("p",null,[s("a",D,[t(e,{icon:"iconfont icon-django"}),n[17]||(n[17]=a("Django"))]),n[18]||(n[18]=a(" is one of the most complete web development frameworks available. It’s fast, secure, and scalable. With the power of Python, we can get an application up and running in just about no time. It manages everything, from the database to the final HTML sent to the client."))]),n[224]||(n[224]=s("p",null,"However, with the advent of single-page applications (SPAs), it’s become increasingly common to create applications that use Django only to provide an API that responds to JSON data consumed by applications developed in the most varied JavaScript frameworks.",-1)),n[225]||(n[225]=s("p",null,"This architecture, which separates the frontend from the backend, allows a better decoupling of both interfaces so that teams can develop in their respective domains completely independently.",-1)),n[226]||(n[226]=s("p",null,"It also enables multiple client apps to interact with the same API, while ensuring data integrity and business rules, and a variety of user interfaces.",-1)),n[227]||(n[227]=s("p",null,"On the other hand, two different projects generate even more work: two separate deployments, two environments to configure, etc. One way to simplify this is to use Django’s own capabilities to serve static files. After all, the frontend is nothing more than a set of files of this type.",-1)),n[228]||(n[228]=s("p",null,"In this article, we’ll outline how to create a simple CRUD API with Django and its famous Django REST framework free from common Cross-Origin Resource Sharing (CORS) issues. We’ll also learn how to integrate Django with a React app.",-1)),n[229]||(n[229]=s("hr",null,null,-1)),n[230]||(n[230]=s("h2",{id:"how-do-we-send-data-from-django-to-react",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#how-do-we-send-data-from-django-to-react"},[s("span",null,"How do we send data from Django to React?")])],-1)),s("p",null,[n[23]||(n[23]=a("You can expose your API in different ways with Django. You can use a REST API, a ")),s("a",P,[t(e,{icon:"iconfont icon-graphql"}),n[19]||(n[19]=a("GraphQL API"))]),n[24]||(n[24]=a(", or ")),s("a",A,[t(e,{icon:"iconfont icon-django"}),n[20]||(n[20]=a("RPC API"))]),n[25]||(n[25]=a(", each with ")),s("a",I,[t(e,{icon:"fas fa-globe"}),n[21]||(n[21]=a("their own pros and cons"))]),n[26]||(n[26]=a(". While ")),s("a",C,[t(e,{icon:"iconfont icon-graphql"}),n[22]||(n[22]=a("GraphQL"))]),n[27]||(n[27]=a(" is a safe bet, we’re going to use traditional REST endpoints."))]),n[231]||(n[231]=s("figure",null,[s("img",{src:w,alt:"By the end of this tutorial, this will be our final output",tabindex:"0",loading:"lazy"}),s("figcaption",null,"By the end of this tutorial, this will be our final output")],-1)),n[232]||(n[232]=s("hr",null,null,-1)),n[233]||(n[233]=s("h2",{id:"setting-up-python-and-django",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#setting-up-python-and-django"},[s("span",null,"Setting up Python and Django")])],-1)),n[234]||(n[234]=s("p",null,"For this article, we’re not going to cover how to install basic tools, so make sure you review this list of what you need to have set up in your machine before you can follow this article:",-1)),s("ul",null,[s("li",null,[s("a",N,[t(e,{icon:"fa-brands fa-python"}),n[28]||(n[28]=a("Python 3"))])]),s("li",null,[s("a",E,[t(e,{icon:"fa-brands fa-python"}),n[29]||(n[29]=a("Pip"))]),n[30]||(n[30]=a(" (the default Python package installer)"))]),s("li",null,[s("a",M,[t(e,{icon:"fa-brands fa-node"}),n[31]||(n[31]=a("NodeJS"))]),n[33]||(n[33]=a(" (in a version 6 or plus) and ")),s("a",L,[t(e,{icon:"fa-brands fa-npm"}),n[32]||(n[32]=a("npm"))]),n[34]||(n[34]=a(" (5.2+)"))])]),n[235]||(n[235]=s("p",null,[a("If you’re using Linux, chances are that Python is already installed. Run the "),s("code",null,"python3 -V"),a(" command to check.")],-1)),s("p",null,[n[38]||(n[38]=a("In certain environments, you may have have Python 2 and Python 3 installed. In this case, you should use ")),n[39]||(n[39]=s("code",null,"python3",-1)),n[40]||(n[40]=a(" instead of ")),n[41]||(n[41]=s("code",null,"python",-1)),n[42]||(n[42]=a(" when running commands. You can ")),s("a",F,[n[35]||(n[35]=a("avoid this by installing PyEnv (")),t(e,{icon:"iconfont icon-github"}),n[36]||(n[36]=s("code",null,"pyenv/pyenv",-1)),n[37]||(n[37]=a(")"))]),n[43]||(n[43]=a(" to be able to switch which version of Python the ")),n[44]||(n[44]=s("code",null,"python",-1)),n[45]||(n[45]=a(" command uses."))]),s("p",null,[n[48]||(n[48]=a("In the article, we’ll also make use of a ")),s("a",H,[t(e,{icon:"fa-brands fa-python"}),n[46]||(n[46]=a("handy Python feature called"))]),n[49]||(n[49]=a()),s("a",z,[t(e,{icon:"fa-brands fa-python"}),n[47]||(n[47]=s("code",null,"venv",-1))]),n[50]||(n[50]=a(", also known as Python Virtual Environment. This feature basically allows developers to create a folder that’ll act exactly like a specific Python environment."))]),n[236]||(n[236]=s("h3",{id:"setting-up-python",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#setting-up-python"},[s("span",null,"Setting up Python")])],-1)),s("p",null,[n[52]||(n[52]=a("Open your preferred IDE to an empty directory and follow along as we begin. Remember to always ")),s("a",U,[t(e,{icon:"fa-brands fa-stack-overflow"}),n[51]||(n[51]=a("give your directory a good name"))]),n[53]||(n[53]=a("."))]),s("p",null,[n[54]||(n[54]=a("Let’s run the command inside this folder to create our ")),t(e,{icon:"fa-brands fa-python"}),n[55]||(n[55]=s("code",null,"venv",-1)),n[56]||(n[56]=a(":"))]),n[237]||(n[237]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">python <span class="token parameter variable">-m</span> venv logrocket_env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>After you enter the created folder, you’ll see some other files, such as <code>bin</code>, <code>lib</code>, and <code>share</code>. These files guarantee you are in an isolated context of Python configuration. To make use of the <code>bin</code> file, you have to make sure it’s activated:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">source</span> ./logrocket_env/bin/activate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,3)),s("p",null,[n[57]||(n[57]=a("Then your command line will look like the example below, with the name in parentheses confirming that you’re in the ")),t(e,{icon:"fa-brands fa-python"}),n[58]||(n[58]=s("code",null,"venv",-1)),n[59]||(n[59]=a(":"))]),n[238]||(n[238]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># (logrocket_env) username@localhost: _</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),s("p",null,[n[60]||(n[60]=a("Note that once you are inside the ")),t(e,{icon:"fa-brands fa-python"}),n[61]||(n[61]=s("code",null,"venv",-1)),n[62]||(n[62]=a(", you can use the commands ")),n[63]||(n[63]=s("code",null,"pip",-1)),n[64]||(n[64]=a(" or ")),n[65]||(n[65]=s("code",null,"python",-1)),n[66]||(n[66]=a(" normally. If you are outside the ")),t(e,{icon:"fa-brands fa-python"}),n[67]||(n[67]=s("code",null,"venv",-1)),n[68]||(n[68]=a(", you must use ")),n[69]||(n[69]=s("code",null,"pip3",-1)),n[70]||(n[70]=a(" and ")),n[71]||(n[71]=s("code",null,"python3",-1)),n[72]||(n[72]=a("."))]),n[239]||(n[239]=s("p",null,"That’s it. You’re good to go with your venv.",-1)),n[240]||(n[240]=s("h3",{id:"setting-up-django",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#setting-up-django"},[s("span",null,"Setting up Django")])],-1)),s("p",null,[n[74]||(n[74]=a("Next, let’s ")),s("a",O,[t(e,{icon:"iconfont icon-django"}),n[73]||(n[73]=a("start installing Django"))]),n[75]||(n[75]=a(" by running the following command inside of your ")),t(e,{icon:"fa-brands fa-python"}),n[76]||(n[76]=s("code",null,"venv",-1)),n[77]||(n[77]=a(":"))]),n[241]||(n[241]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">pip <span class="token function">install</span> django djangorestframework django-cors-headers</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),s("div",B,[n[82]||(n[82]=s("p",{class:"hint-container-title"},"Note",-1)),n[83]||(n[83]=s("p",null,"We’re installing two more dependencies for our API:",-1)),s("ul",null,[s("li",null,[s("a",W,[t(e,{icon:"iconfont icon-django"}),n[78]||(n[78]=a("Django REST Framework"))]),n[79]||(n[79]=a(": a powerful and flexible toolkit for building Web APIs"))]),s("li",null,[s("a",G,[t(e,{icon:"iconfont icon-github"}),n[80]||(n[80]=s("code",null,"adamchainz/django-cors-headers",-1))]),n[81]||(n[81]=a(": an app for handling the server headers required for CORS"))])]),n[84]||(n[84]=s("p",null,"These dependencies are useful for when we try to access the API from a different application.",-1))]),n[242]||(n[242]=s("p",null,"In this case, they help to connect Django and React.",-1)),s("p",null,[n[88]||(n[88]=a("We’ll also make use of two other Django features designed to help us with boilerplate configs: ")),s("a",V,[t(e,{icon:"iconfont icon-django"}),n[85]||(n[85]=s("code",null,"django-admin",-1)),n[86]||(n[86]=a(" and ")),t(e,{icon:"iconfont icon-django"}),n[87]||(n[87]=s("code",null,"manage.py",-1))]),n[89]||(n[89]=a("`."))]),n[243]||(n[243]=s("p",null,[s("code",null,"django-admin"),a(" is Django’s automatic admin interface. It’s basically a command-line utility to perform handy operations with Django.")],-1)),t(e,{icon:"iconfont icon-django"}),n[244]||(n[244]=s("code",null,"manage.py",-1)),n[245]||(n[245]=a(" is a script that will help us manage our database, create tables from our models, handle migration and versioning, and properly create our projects.")),s("p",null,[n[90]||(n[90]=a("Now, we’ll run the following command to create our API project — remember that you must be inside the ")),t(e,{icon:"fa-brands fa-python"}),n[91]||(n[91]=s("code",null,"venv",-1)),n[92]||(n[92]=a(":"))]),n[246]||(n[246]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">django-admin startproject django_react_proj</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),s("p",null,[n[93]||(n[93]=a("After the project is created, check the root folder for the ")),t(e,{icon:"iconfont icon-django"}),n[94]||(n[94]=s("code",null,"manage.py",-1)),n[95]||(n[95]=a(" file we mentioned earlier. We’ll explore the rest of the files further."))]),s("p",null,[n[96]||(n[96]=a("Let’s start our Django configuration using the ")),t(e,{icon:"iconfont icon-django"}),n[97]||(n[97]=s("code",null,"settings.py",-1)),n[98]||(n[98]=a(" file inside the ")),t(e,{icon:"fas fa-folder-open"}),n[99]||(n[99]=s("code",null,"django_react_proj/",-1)),n[100]||(n[100]=a(" folder. When you open this file, you’ll see a lot of configs. ")),n[101]||(n[101]=s("code",null,"INSTALLED_APPS",-1)),n[102]||(n[102]=a(" is the one that matters to us."))]),n[247]||(n[247]=o(`<p>Add the following three lines to the array:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="settings.py"><span>settings.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token string">&#39;rest_framework&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;corsheaders&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;students&#39;</span> </span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>These three lines are the dependencies we’ve previously installed, along with the name of our to-be-created API folder.</p><p>Now, add the following into the <code>MIDDLEWARE</code> array:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="settings.py"><span>settings.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">MIDDLEWARE <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token string">&#39;corsheaders.middleware.CorsMiddleware&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;django.middleware.common.CommonMiddleware&#39;</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>These correspond to a filter that will intercept all of our application’s requests and apply CORS logic to them.</p><p>However, since we’re working full <code>localhost</code>, we’ll disable the CORS feature by adding the following to the same file:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="settings.py"><span>settings.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">CORS_ORIGIN_ALLOW_ALL <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Great! Now, let’s move on to the models and views of our application.</p><hr><h2 id="adding-models-and-views-to-django" tabindex="-1"><a class="header-anchor" href="#adding-models-and-views-to-django"><span>Adding models and views to Django</span></a></h2>`,11)),s("p",null,[n[103]||(n[103]=a("In order to create some preset files, we’ll make use of the ")),t(e,{icon:"iconfont icon-django"}),n[104]||(n[104]=s("code",null,"manage.py",-1)),n[105]||(n[105]=a(" script once again. This time, run the following:"))]),n[248]||(n[248]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">django-admin startapp students</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),s("p",null,[n[106]||(n[106]=a("After that, a ")),t(e,{icon:"fas fa-folder-open"}),n[107]||(n[107]=s("code",null,"students/",-1)),n[108]||(n[108]=a(" folder will be created, along with ")),t(e,{icon:"fa-brands fa-python"}),n[109]||(n[109]=s("code",null,"models.py",-1)),n[110]||(n[110]=a(" and ")),t(e,{icon:"fa-brands fa-python"}),n[111]||(n[111]=s("code",null,"views.py",-1)),n[112]||(n[112]=a(". Initially, these files will have little to no content inside."))]),s("p",null,[n[113]||(n[113]=a("Let’s start by removing everything currently in the ")),t(e,{icon:"fa-brands fa-python"}),n[114]||(n[114]=s("code",null,"models.py",-1)),n[115]||(n[115]=a(" file and adding our models instead:"))]),n[249]||(n[249]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="models.py"><span>models.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">240</span><span class="token punctuation">)</span></span>
<span class="line">    email <span class="token operator">=</span> models<span class="token punctuation">.</span>EmailField<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    document <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span><span class="token string">&quot;Document&quot;</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line">    phone <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line">    registrationDate <span class="token operator">=</span> models<span class="token punctuation">.</span>DateField<span class="token punctuation">(</span><span class="token string">&quot;Registration Date&quot;</span><span class="token punctuation">,</span> auto_now_add<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),s("p",null,[n[119]||(n[119]=a("Notice that our ")),n[120]||(n[120]=s("code",null,"Student",-1)),n[121]||(n[121]=a(" class extends from ")),s("a",J,[t(e,{icon:"iconfont icon-django"}),n[116]||(n[116]=a("Django’s"))]),n[122]||(n[122]=a()),s("a",Y,[t(e,{icon:"iconfont icon-django"}),n[117]||(n[117]=s("code",null,"Model",-1)),n[118]||(n[118]=a(" class"))]),n[123]||(n[123]=a(". This will make our lives easier once it connects directly to the Django models framework, which we’ll use to create our database tables."))]),n[250]||(n[250]=s("p",null,[a("It’s also important to set all the fields with the proper types and configurations, including "),s("code",null,"max length"),a(" if it’s required, "),s("code",null,"description"),a(", "),s("code",null,"autocreation"),a(", etc.")],-1)),n[251]||(n[251]=s("hr",null,null,-1)),n[252]||(n[252]=s("h2",{id:"migrating-our-django-models-to-the-database",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#migrating-our-django-models-to-the-database"},[s("span",null,"Migrating our Django models to the database")])],-1)),s("p",null,[n[125]||(n[125]=a("Now, let’s export our models to the database through ")),t(i,{to:"/blog.logrocket.com/making-django-migrations-python.html"},{default:p(()=>n[124]||(n[124]=[s("strong",null,"Django’s migrations feature",-1)])),_:1,__:[124]}),n[126]||(n[126]=a("."))]),n[253]||(n[253]=o(`<p>Migrations are Django’s way of propagating changes you make to your models — such as adding a field or deleting a model — into your database schema.</p><p>They’re designed to be mostly automatic, but you’ll need to know when to make migrations, when to run them, and what common problems you may run into.</p><p>Go to the root of the application and run the following:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">python manage.py makemigrations</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You’ll see the name and location of the file created for versioning these changes. Then, we need to apply the changes to the database itself:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">python manage.py migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The next step consists of creating what we call a data migration file. It represents the direct manipulation of data into the database. To create this file, run the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">python manage.py makemigrations <span class="token parameter variable">--empty</span> <span class="token parameter variable">--name</span> students students</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Note that the versioning is made upon numbers by the end of the file to maintain the order.</p>`,9)),s("p",null,[n[127]||(n[127]=a("After that, go to the ")),t(e,{icon:"fas fa-folder-open"}),n[128]||(n[128]=s("code",null,"django_react_proj/students/migrations/",-1)),n[129]||(n[129]=a(" folder and change the content to the following:"))]),n[254]||(n[254]=o(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> migrations</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">create_data</span><span class="token punctuation">(</span>apps<span class="token punctuation">,</span> schema_editor<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    Student <span class="token operator">=</span> apps<span class="token punctuation">.</span>get_model<span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Student&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    Student<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Joe Silver&quot;</span><span class="token punctuation">,</span> email<span class="token operator">=</span><span class="token string">&quot;joe@email.com&quot;</span><span class="token punctuation">,</span> document<span class="token operator">=</span><span class="token string">&quot;22342342&quot;</span><span class="token punctuation">,</span> phone<span class="token operator">=</span><span class="token string">&quot;00000000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Migration</span><span class="token punctuation">(</span>migrations<span class="token punctuation">.</span>Migration<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    dependencies <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0001_initial&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    operations <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        migrations<span class="token punctuation">.</span>RunPython<span class="token punctuation">(</span>create_data<span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In short, the <code>create_data</code> method recovers the <code>Student</code> model object and creates initial data, just so that our database isn’t empty when the API starts.</p><p>The <code>dependencies</code> property relates the other files to be considered into the migration process.</p><p>The <code>operations</code> are basically the actions Django has to perform once the migration is triggered.</p>`,4)),s("p",null,[n[130]||(n[130]=a("Now we’re ready to run the migrate command again. In the ")),t(e,{icon:"fas fa-folder-open"}),n[131]||(n[131]=s("code",null,"django_react_proj/",-1)),n[132]||(n[132]=a(" folder, run:"))]),n[255]||(n[255]=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">python manage.py migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="diving-into-our-django-rest-api" tabindex="-1"><a class="header-anchor" href="#diving-into-our-django-rest-api"><span>Diving into our Django REST API</span></a></h2>`,3)),s("p",null,[n[134]||(n[134]=a("Now it’s time to dive into the REST API that we’re going to ")),t(i,{to:"/blog.logrocket.com/django-rest-framework-create-api.html"},{default:p(()=>n[133]||(n[133]=[s("strong",null,"build on top of Django REST framework",-1)])),_:1,__:[133]}),n[135]||(n[135]=a(". Here, you’ll get in touch with two main worlds: views and URLs. A view is the initial entrypoint of a request made upon a specific endpoint served by a URL."))]),s("p",null,[n[137]||(n[137]=a("This is all mapped by the Django REST framework once we connect the function itself to the endpoint. We’ll also ")),s("a",Q,[t(e,{icon:"iconfont icon-django"}),n[136]||(n[136]=a("make use of serializers"))]),n[138]||(n[138]=a("."))]),s("p",null,[n[140]||(n[140]=a("They allow ")),t(i,{to:"/blog.logrocket.com/querysets-and-aggregations-in-django.html"},{default:p(()=>n[139]||(n[139]=[s("strong",null,[a("complex data, such as "),s("code",null,"QuerySets")],-1)])),_:1,__:[139]}),n[141]||(n[141]=a(" and model instances, to be converted to native Python datatypes that can then be easily rendered into JSON. Let’s start there."))]),s("p",null,[n[142]||(n[142]=a("Create a new file ")),t(e,{icon:"fa-brands fa-python"}),n[143]||(n[143]=s("code",null,"serializers.py",-1)),n[144]||(n[144]=a(" into the ")),n[145]||(n[145]=s("code",null,"students/",-1)),n[146]||(n[146]=a(" folder and add the following content:"))]),n[256]||(n[256]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="students/serializers.py"><span>students/serializers.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> serializers</span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Student</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">StudentSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span> </span>
<span class="line">        model <span class="token operator">=</span> Student</span>
<span class="line">        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;pk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;document&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;phone&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;registrationDate&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The <code>Meta</code> class is important here because it defines the metadata information that our model has (database) and that must be converted to the <code>Student</code> class.</p>`,2)),s("p",null,[n[147]||(n[147]=a("Next, let’s open the ")),t(e,{icon:"fa-brands fa-python"}),n[148]||(n[148]=s("code",null,"urls.py",-1)),n[149]||(n[149]=a(" file located in the ")),t(e,{icon:"fas fa-folder-open"}),n[150]||(n[150]=s("code",null,"django_react_proj/",-1)),n[151]||(n[151]=a(" folder and change its content to the following:"))]),n[257]||(n[257]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="urls.py"><span>urls.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin</span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> re_path</span>
<span class="line"><span class="token keyword">from</span> students <span class="token keyword">import</span> views</span>
<span class="line"></span>
<span class="line">urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    path<span class="token punctuation">(</span><span class="token string">&#39;admin/&#39;</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    re_path<span class="token punctuation">(</span><span class="token string">r&#39;^api/students/$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>students_list<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    re_path<span class="token punctuation">(</span><span class="token string">r&#39;^api/students/([0-9])$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>students_detail<span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The <code>admin</code> path was already there. The only things we added are the <code>students</code> endpoints. Note that each of them is connected to a to-be-created view function, so this is the place where we route our requests.</p><p>The first endpoint will handle both creations (<code>POST</code>) and listing (<code>GET</code>). The second one will remove (<code>DELETE</code>) or update (<code>PUT</code>) the data of a single student. Simple, right?</p>`,3)),s("p",null,[n[152]||(n[152]=a("Now, let’s go to the views. Open up the ")),t(e,{icon:"fas fa-folder-open"}),n[153]||(n[153]=s("code",null,"students/",-1)),t(e,{icon:"fa-brands fa-python"}),n[154]||(n[154]=s("code",null,"views.py",-1)),n[155]||(n[155]=a(" file and copy in the following code:"))]),n[258]||(n[258]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="students/views.py"><span>students/views.py</span></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response </span>
<span class="line"><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> api_view </span>
<span class="line"><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> status </span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Student </span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">.</span>serializers <span class="token keyword">import</span> <span class="token operator">*</span> </span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@api_view</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </span>
<span class="line"><span class="token keyword">def</span> <span class="token function">students_list</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">:</span> </span>
<span class="line">        data <span class="token operator">=</span> Student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span>
<span class="line">        serializer <span class="token operator">=</span> StudentSerializer<span class="token punctuation">(</span>data<span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">:</span> request<span class="token punctuation">}</span><span class="token punctuation">,</span> many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> </span>
<span class="line">        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>serializer<span class="token punctuation">.</span>data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">elif</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        serializer <span class="token operator">=</span> StudentSerializer<span class="token punctuation">(</span>data<span class="token operator">=</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span> </span>
<span class="line">        <span class="token keyword">if</span> serializer<span class="token punctuation">.</span>is_valid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            serializer<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span> </span>
<span class="line">            <span class="token keyword">return</span> Response<span class="token punctuation">(</span>status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_201_CREATED<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>serializer<span class="token punctuation">.</span>errors<span class="token punctuation">,</span> status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_400_BAD_REQUEST<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@api_view</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">students_detail</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        student <span class="token operator">=</span> Student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>pk<span class="token operator">=</span>pk<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">except</span> Student<span class="token punctuation">.</span>DoesNotExist<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_404_NOT_FOUND<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        serializer <span class="token operator">=</span> StudentSerializer<span class="token punctuation">(</span>student<span class="token punctuation">,</span> data<span class="token operator">=</span>request<span class="token punctuation">.</span>data<span class="token punctuation">,</span>context<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">:</span> request<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> serializer<span class="token punctuation">.</span>is_valid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            serializer<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span> Response<span class="token punctuation">(</span>status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_204_NO_CONTENT<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>serializer<span class="token punctuation">.</span>errors<span class="token punctuation">,</span> status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_400_BAD_REQUEST<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">elif</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        student<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_204_NO_CONTENT<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The first method, <code>students_list</code>, is handling both <code>GET</code> and <code>POST</code> operations over the root endpoint of our API.</p><p>This means every time we make a request over <code>http://localhost:8000/api/students</code> with <code>GET</code> and <code>POST</code> HTTP verbs, we’ll execute this method.</p><p>The first thing is to get all the students from our model through the <code>Student</code> object. It provides an implicit object called <code>object</code> with a method to access the entire database: <code>all()</code>.</p><p>Then, we pass the result to our serializer, which will take care of the converting process before we return it as a response.</p><p>For the <code>POST</code> method, note that we’re first calling the <code>is_valid()</code> method on the serializer to ensure that the data received is conformed with our model. Otherwise, the serializer would throw an exception here. If all is fine, we save it to the datastore.</p><p>The next <code>PUT</code> and <code>DELETE</code> operations are pretty much the same, changing only the HTTP verbs and the responses.</p><p>That’s it!</p><hr><h2 id="testing-our-endpoints-in-django" tabindex="-1"><a class="header-anchor" href="#testing-our-endpoints-in-django"><span>Testing our endpoints in Django</span></a></h2><p>Now, let’s run our Django application in order to test these endpoints. Run the following command into the root folder:</p><p>python manage.py runserver</p><p>After you see the log showing our server is up and running, go to the browser and access <code>http://localhost:8000/api/students/</code>. You’ll see something like this:</p><figure><img src="`+y+'" alt="Student List Shown At Localhost 8000 While Testing Django Endpoints" tabindex="0" loading="lazy"><figcaption>Student List Shown At Localhost 8000 While Testing Django Endpoints</figcaption></figure>',14)),s("p",null,[n[157]||(n[157]=a("What you see here is ")),s("a",Z,[t(e,{icon:"iconfont icon-django"}),n[156]||(n[156]=a("Django’s Browsable API"))]),n[158]||(n[158]=a(", a human-friendly HTML output that allows for easy browsing of resources, as well as forms for submitting data to the resources. It’s very handy for testing your endpoints easily without having to make use of ")),n[159]||(n[159]=s("code",null,"cURL",-1)),n[160]||(n[160]=a(" or other UI tools."))]),n[259]||(n[259]=s("p",null,"You can also use the other HTTP methods through the form in the bottom of the image. Go ahead and play around with it.",-1)),n[260]||(n[260]=s("hr",null,null,-1)),n[261]||(n[261]=s("h2",{id:"building-the-react-app",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#building-the-react-app"},[s("span",null,"Building the React app")])],-1)),n[262]||(n[262]=s("p",null,"Now it’s frontend time.",-1)),s("p",null,[n[162]||(n[162]=a("It’s important to note that we’re not going to dive into React details here, so take some time to ")),s("a",$,[t(e,{icon:"fas fa-globe"}),n[161]||(n[161]=a("read up on React"))]),n[163]||(n[163]=a(" if you’re a beginner. The focus of this tutorial is to show you how to consume a Django API quickly from a React app."))]),s("p",null,[n[166]||(n[166]=a("In this article, we’ll use the latest version of React. However, feel free to use whichever version you prefer. We also won’t discuss ")),t(i,{to:"/blog.logrocket.com/react-hooks-the-good-the-bad-and-the-ugly.html"},{default:p(()=>n[164]||(n[164]=[s("strong",null,"the use of React Hooks",-1)])),_:1,__:[164]}),n[167]||(n[167]=a(" or other side features of React, since the purpose is ")),t(i,{to:"/blog.logrocket.com/modern-api-data-fetching-methods-react.html"},{default:p(()=>n[165]||(n[165]=[s("strong",null,"the API consumption itself",-1)])),_:1,__:[165]}),n[168]||(n[168]=a("."))]),n[263]||(n[263]=o(`<p>Once you have Node and npm installed, let’s run the following command in the root folder of our Django project to create our React app:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">npx create-react-app students-fe</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2)),s("p",null,[n[170]||(n[170]=a("If you don’t know ")),n[171]||(n[171]=s("code",null,"create-react-app",-1)),n[172]||(n[172]=a(", ")),t(i,{to:"/blog.logrocket.com/create-react-app-a-quick-setup-guide.html"},{default:p(()=>n[169]||(n[169]=[s("strong",null,"read through a quick setup guide",-1)])),_:1,__:[169]}),n[173]||(n[173]=a(" for some help getting started."))]),n[264]||(n[264]=o('<h3 id="crud-react-components" tabindex="-1"><a class="header-anchor" href="#crud-react-components"><span>CRUD React components</span></a></h3><figure><img src="'+j+'" alt="We’ll divide our front end in some smaller components, as seen in the following figure" tabindex="0" loading="lazy"><figcaption>We’ll divide our front end in some smaller components, as seen in the following figure</figcaption></figure><p>The header component will store the header information, logo, etc.</p><p>The home component will be our main container, storing the rest of the other components, such as the listing of the students in a table.</p><p>We’ll also have two more components for the forms. The “update” and “add” forms will have pretty much the same components and will be placed in modals. Having both functions depends on which modal is active now.</p><figure><img src="'+x+'" alt="Popup Modal Titled Creating New Student With Blank Fields For Name, Email, Document, And Phone, And Send Button" tabindex="0" loading="lazy"><figcaption>Popup Modal Titled Creating New Student With Blank Fields For Name, Email, Document, And Phone, And Send Button</figcaption></figure><h3 id="setting-up-our-react-app-to-integrate-with-django" tabindex="-1"><a class="header-anchor" href="#setting-up-our-react-app-to-integrate-with-django"><span>Setting up our React app to integrate with Django</span></a></h3>',7)),s("p",null,[n[176]||(n[176]=a("Let’s go right to it. We’ll ")),t(i,{to:"/blog.logrocket.com/using-bootstrap-with-react-tutorial-with-examples.html"},{default:p(()=>n[174]||(n[174]=[s("strong",null,"use Bootstrap with React for styling",-1)])),_:1,__:[174]}),n[177]||(n[177]=a(" with the powerful ")),n[178]||(n[178]=s("code",null,"reactstrap",-1)),n[179]||(n[179]=a(" package. We’ll also use the promise-based HTTP client ")),t(i,{to:"/blog.logrocket.com/http-requests-axios.html"},{default:p(()=>n[175]||(n[175]=[s("strong",null,"Axios to make HTTP request calls",-1)])),_:1,__:[175]}),n[180]||(n[180]=a(" to our Django API."))]),n[265]||(n[265]=o(`<p>First, we’ll add some important dependencies to our <code>students-fe</code> project, so <code>cd</code> into the project and run the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> <span class="token function">install</span> bootstrap reactstrap axios <span class="token parameter variable">--save</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2)),s("p",null,[n[181]||(n[181]=a("Next, go to the ")),t(e,{icon:"fas fa-folder-open"}),n[182]||(n[182]=s("code",null,"src/",-1)),t(e,{icon:"fa-brands fa-js"}),n[183]||(n[183]=s("code",null,"index.js",-1)),n[184]||(n[184]=a(" file and add the following import statement:"))]),n[266]||(n[266]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/index.js"><span>src/index.js</span></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;bootstrap/dist/css/bootstrap.min.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div>`,1)),s("p",null,[n[185]||(n[185]=a("In your ")),t(e,{icon:"fas fa-folder-open"}),n[186]||(n[186]=s("code",null,"src/",-1)),n[187]||(n[187]=a(" folder, create another folder called ")),t(e,{icon:"fas fa-folder-open"}),n[188]||(n[188]=s("code",null,"constants",-1)),n[189]||(n[189]=a(", and then a file ")),t(e,{icon:"fa-brands fa-js"}),n[190]||(n[190]=s("code",null,"index.js",-1)),n[191]||(n[191]=a(". This file will store the utility constants of our React project. Add a single constant to hold the URL of our API:"))]),n[267]||(n[267]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/contants/index.js"><span>src/contants/index.js</span></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">API_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8000/api/students/&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Then, let’s begin creating our components, starting with the header.</p><h3 id="working-on-the-header-component" tabindex="-1"><a class="header-anchor" href="#working-on-the-header-component"><span>Working on the header component</span></a></h3>`,3)),s("p",null,[n[192]||(n[192]=a("Create another folder called ")),t(e,{icon:"fas fa-folder-open"}),n[193]||(n[193]=s("code",null,"components",-1)),n[194]||(n[194]=a(" and, within it, a JavaScript file called ")),t(e,{icon:"fa-brands fa-react"}),n[195]||(n[195]=s("code",null,"Header.js",-1)),n[196]||(n[196]=a(". Add the following content:"))]),n[268]||(n[268]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/components/Header.js"><span>src/components/Header.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Header</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token operator">&lt;</span>div className<span class="token operator">=</span> <span class="token string">&quot;text-center&quot;</span><span class="token operator">&gt;</span> </span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span></span>
<span class="line">          <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://logrocket-assets.io/img/logo.png<span class="token punctuation">&quot;</span></span></span>
<span class="line">          <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span></span>
<span class="line">          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>img-thumbnail<span class="token punctuation">&quot;</span></span></span>
<span class="line">          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token string">&quot;20px&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> </span>
<span class="line">        <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">presents</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">App with React + Django </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Header<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>This is pretty much static HTML represented under JSX. Nothing much of note here.</p><h3 id="working-on-the-creating-new-student-form" tabindex="-1"><a class="header-anchor" href="#working-on-the-creating-new-student-form"><span>Working on the Creating New Student form</span></a></h3>`,3)),s("p",null,[n[197]||(n[197]=a("Now, let’s change our strategy and build the next components from the innermost to the outermost ones. In the same ")),t(e,{icon:"fas fa-folder-open"}),n[198]||(n[198]=s("code",null,"components",-1)),n[199]||(n[199]=a(" folder, create a new file called ")),n[200]||(n[200]=s("code",null,"NewStudentForm.js",-1)),n[201]||(n[201]=a(" and add the following:"))]),n[269]||(n[269]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/components/NewStudentForm.js"><span>src/components/NewStudentForm.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> FormGroup<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Label <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reactstrap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">API_URL</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../constants&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">NewStudentForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span></span>
<span class="line">  state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">pk</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">document</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>student<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> <span class="token punctuation">{</span> pk<span class="token punctuation">,</span> name<span class="token punctuation">,</span> document<span class="token punctuation">,</span> email<span class="token punctuation">,</span> phone <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>student<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pk<span class="token punctuation">,</span> name<span class="token punctuation">,</span> document<span class="token punctuation">,</span> email<span class="token punctuation">,</span> phone <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">[</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">createStudent</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token constant">API_URL</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">resetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">editStudent</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">API_URL</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pk<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">resetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">defaultIfEmpty</span> <span class="token operator">=</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> value <span class="token operator">===</span> <span class="token string">&quot;&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> value<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token operator">&lt;</span>Form onSubmit<span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>student <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>editStudent <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>createStudent <span class="token punctuation">}</span><span class="token operator">&gt;</span> </span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> Name: </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Label</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> </span>
<span class="line">            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> </span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Email:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Label</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>email<span class="token punctuation">)</span> <span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> </span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>document<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Document:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Label</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>document<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>document<span class="token punctuation">)</span> <span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> </span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Phone:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Label</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>phone<span class="token punctuation">)</span> <span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormGroup</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Send</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> NewStudentForm<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Here, we have some important things going on.</p><p>In the first lines, we’re importing some <code>reactstrap</code> components for the first time, including <code>Form</code>, <code>Button</code>, and other components that will comprise our form.</p><p>Then, we created our <code>state</code> object with the corresponding properties of our <code>NewStudentForm</code> model. This is going to be useful for manipulating each prop individually.</p><p>The <code>componentDidMount</code> function will run after the component finishes its startup, so we can recover the student’s <code>props</code> from the parent component (<code>this.props</code>) here, and set the <code>state</code> with them (if they exist, for the editing scenario.)</p><p>The <code>onChange</code> function will handle the update of each <code>state</code>’s prop with the current value typed in each respective field.</p><p>The <code>createStudent</code> function will deal with the HTTP <code>POST</code> requests of our form. Every time we press the “submit” button, this function will be called, triggering the Axios <code>post()</code> function and passing the current <code>state</code> in the request’s <code>body.</code></p><p>Once it’s completed, we’ll call two <code>props</code> functions: <code>resetState</code> to refresh the table, and <code>toggle</code> to close the modal. We’ll go over how to create these later on.</p><h3 id="working-on-the-modal-to-edit-student-information" tabindex="-1"><a class="header-anchor" href="#working-on-the-modal-to-edit-student-information"><span>Working on the modal to edit student information</span></a></h3><p>The <code>editStudent</code> function works almost like the previous one, but by calling our <code>PUT</code> operation instead.</p><p>The <code>defaultIfEmpty</code> function was created as an auxiliary function that’ll check the current value of each field in order to determine if they’re going to be filled with the value of the <code>state</code> — in case any exists, for editing — or not, when creating a new student.</p><p>The <code>render</code> function will just compose our form with the help of <code>reactstrap</code> components. Note the <code>onSubmit</code> property, which checks for a <code>props</code> property called <code>student</code>. If the property exists, the submit function will be for editing (the value was passed by the parent component); otherwise, it’s for creation.</p><p>Next, we’ll turn our attention to the modal component that’ll contain the form we’ve just created. For this, create a new component file called <code>NewStudentModal.js</code> and add the code below:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/components/NewStudentModel.js"><span>src/components/NewStudentModel.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Modal<span class="token punctuation">,</span> ModalHeader<span class="token punctuation">,</span> ModalBody <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reactstrap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> NewStudentForm <span class="token keyword">from</span> <span class="token string">&quot;./NewStudentForm&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">NewStudentModal</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">modal</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">toggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">previous</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">      <span class="token literal-property property">modal</span><span class="token operator">:</span> <span class="token operator">!</span>previous<span class="token punctuation">.</span>modal </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> create <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>create<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> title <span class="token operator">=</span> <span class="token string">&quot;Editing Student&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> button <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toggle <span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Edit</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>create<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        title <span class="token operator">=</span> <span class="token string">&quot;Creating New Student&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        button <span class="token operator">=</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span></span>
<span class="line">            <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>float-right<span class="token punctuation">&quot;</span></span></span>
<span class="line">            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>toggle<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token string">&quot;200px&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token punctuation">&gt;</span></span><span class="token plain-text"> </span>
<span class="line">            Create New</span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fragment</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span> button <span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        &lt;Modal isOpen = </span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>modal <span class="token punctuation">}</span><span class="token plain-text"> toggle = </span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toggle <span class="token punctuation">}</span><span class="token plain-text">&gt;</span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ModalHeader</span></span> <span class="token attr-name">toggle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toggle <span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ModalHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ModalBody</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NewStudentForm</span></span></span>
<span class="line">              <span class="token attr-name">resetState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>resetState<span class="token punctuation">}</span></span></span>
<span class="line">              <span class="token attr-name">toggle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>toggle<span class="token punctuation">}</span></span></span>
<span class="line">              <span class="token attr-name">student</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>student<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ModalBody</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fragment</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> NewStudentModal<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>This time, the only <code>state</code> prop we’re creating is the modal’s <code>state</code> in order to check whether it must be open or closed.</p><p>The <code>toggle</code> function (the one our form receives as a parameter) will switch the current modal’s value to the opposite every time it’s called.</p><p>In the <code>render</code> function, we’re first checking if a <code>create</code> boolean was passed as a parameter from the parent caller to decide if the button is for editing or creating. The buttons are created dynamically depending on what the parent said to us.</p><p>Then, the <code>Modal</code> component can be mounted upon these conditions further down. Pay attention to where we’re placing the <code>&lt;NewStudentForm /&gt;</code> component we’ve just created.</p><h3 id="creating-the-students-listing" tabindex="-1"><a class="header-anchor" href="#creating-the-students-listing"><span>Creating the students listing</span></a></h3>`,19)),s("p",null,[n[202]||(n[202]=a("The ")),n[203]||(n[203]=s("code",null,"NewStudentModal",-1)),n[204]||(n[204]=a(" component will be placed into the ")),t(e,{icon:"fa-brands fa-react"}),n[205]||(n[205]=s("code",null,"StudentList.js",-1)),n[206]||(n[206]=a(" we’re going to create now:"))]),n[270]||(n[270]=o(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/components/StudentList.js"><span>src/components/StudentList.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reactstrap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> NewStudentModal <span class="token keyword">from</span> <span class="token string">&quot;./NewStudentModal&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> ConfirmRemovalModal <span class="token keyword">from</span> <span class="token string">&quot;./ConfirmRemovalModal&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">StudentList</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> students <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>students<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">dark</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Name</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Email</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Document</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Phone</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Registration</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token punctuation">{</span><span class="token operator">!</span>students <span class="token operator">||</span> students<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colSpan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Ops, no one here yet</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span></span>
<span class="line">              students<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">student</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>pk<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>email<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>document<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>phone<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>registrationDate<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NewStudentModal</span></span></span>
<span class="line">                      <span class="token attr-name">create</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span></span>
<span class="line">                      <span class="token attr-name">student</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>student<span class="token punctuation">}</span></span></span>
<span class="line">                      <span class="token attr-name">resetState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>resetState<span class="token punctuation">}</span></span> </span>
<span class="line">                    <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">                    &amp;nbsp;&amp;nbsp;</span>
<span class="line">                    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ConfirmRemovalModal</span></span></span>
<span class="line">                      <span class="token attr-name">pk</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>student<span class="token punctuation">.</span>pk<span class="token punctuation">}</span></span></span>
<span class="line">                      <span class="token attr-name">resetState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>resetState<span class="token punctuation">}</span></span></span>
<span class="line">                    <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> StudentList<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Here, the focus is explicitly the <code>students</code> listing and nothing else. Be careful not to mix different logic and rules that don’t belong here.</p><p>The heart of this component is the iteration over the <code>students</code> prop we’ll receive from the parent component (<code>Home</code>). The <code>map</code> function will take care of the iteration by providing a variable (<code>student</code>) for us to access each value.</p><p>Again, take a look at the <code>NewStudentModal</code> and <code>ConfirmRemovalModal</code>components, which are just placed under the last <code>&lt;td&gt;</code>.</p><p>The following is the content of the <code>ConfirmRemovalModal</code> component:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/components/ConfirmRemovalModal.js"><span>src/components/ConfirmRemovalModal.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> ModalHeader<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> ModalFooter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reactstrap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">API_URL</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../constants&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ConfirmRemovalModal</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span> state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">modal</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function-variable function">toggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">previous</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">      <span class="token literal-property property">modal</span><span class="token operator">:</span> <span class="token operator">!</span>previous<span class="token punctuation">.</span>modal </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">deleteStudent</span> <span class="token operator">=</span> <span class="token parameter">pk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    axios<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token constant">API_URL</span> <span class="token operator">+</span> pk<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">resetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fragment</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          Remove</span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">isOpen</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>modal<span class="token punctuation">}</span></span> <span class="token attr-name">toggle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>toggle<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ModalHeader</span></span> <span class="token attr-name">toggle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>toggle<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            Do you really wanna delete the student?</span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ModalHeader</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ModalFooter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              Cancel</span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">deleteStudent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>pk<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">              Yes</span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ModalFooter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fragment</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> ConfirmRemovalModal<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>This component is also very simple; it hosts the removal operation. We’ll call this one our <code>DELETE</code> endpoint.</p><p>Since it’s also a modal, we must have the state’s <code>modal</code> prop too, as well as the <code>toggle</code> function.<br> The <code>deleteStudent</code> function will handle the HTTP call to delete the given student.</p><p>The rest of the code is very similar to what we’ve seen already.</p><h3 id="working-on-the-home-component" tabindex="-1"><a class="header-anchor" href="#working-on-the-home-component"><span>Working on the home component</span></a></h3><p>Let’s build our <code>Home.js</code> component now. Create the file and add the following to it:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/compoenent/Home.js"><span>src/compoenent/Home.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Col<span class="token punctuation">,</span> Container<span class="token punctuation">,</span> Row <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reactstrap&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> StudentList <span class="token keyword">from</span> <span class="token string">&quot;./StudentList&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> NewStudentModal <span class="token keyword">from</span> <span class="token string">&quot;./NewStudentModal&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">API_URL</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../constants&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">students</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function-variable function">getStudents</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">API_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> </span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">students</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function-variable function">resetState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Container</span></span> </span>
<span class="line">        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token string">&quot;20px&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span>
<span class="line">      <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StudentList</span></span></span>
<span class="line">              <span class="token attr-name">students</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>students<span class="token punctuation">}</span></span></span>
<span class="line">              <span class="token attr-name">resetState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetState<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NewStudentModal</span></span></span>
<span class="line">              <span class="token attr-name">create</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span></span>
<span class="line">              <span class="token attr-name">resetState</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetState<span class="token punctuation">}</span></span></span>
<span class="line">            <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Container</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Home<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Here, our <code>state</code> will host the array of <code>students</code> we’ll recover from the server.</p><p>The <code>resetState</code> function (which we called earlier) will just call <code>getStudents</code>, which in turn calls the <code>GET</code> endpoint in our API with the full list of students.</p><p>The rest of the listing refers to the use of <code>StudentList</code> and <code>NewStudentModal</code> components. Feel free to organize the exhibition of your components on your own.</p><p>Next comes the last step before we can test our app. Import the <code>Header</code> and <code>Home</code> components to our <code>App.js</code> file:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="src/App.js"><span>src/App.js</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">&quot;./components/Header&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&quot;./components/Home&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Fragment</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Home</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Fragment</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Now, run the command <code>npm start</code> and your React app will open the browser to the <a href="http://localhost:3000/" target="_blank" rel="noopener noreferrer">http://localhost:3000/</a> URL. Make sure to have your Django API up and running as well.</p><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2>`,20)),s("p",null,[n[210]||(n[210]=a("You can ")),s("a",X,[n[207]||(n[207]=a("access the full source code of this project here (")),t(e,{icon:"iconfont icon-github"}),n[208]||(n[208]=s("code",null,"diogosouza/django-react-logrocket",-1)),n[209]||(n[209]=a(")"))]),n[211]||(n[211]=a("."))]),t(r,{name:"diogosouza/django-react-logrocket",desc:"A simple integration between Django API and React App",url:"https://github.com/diogosouza/django-react-logrocket/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/2c3e3d2ad971331e4b91c3062f6ddf09b54788992fc8ada1177d810dbf38a6f3/diogosouza/django-react-logrocket"}),n[271]||(n[271]=s("p",null,"Of course, this is only one way of doing this. The good thing about using React is that you can organize your components (or even create more components out of the ones you have) in many different ways to achieve the same goal.",-1)),s("p",null,[n[215]||(n[215]=a("In the world of SPAs, your backend APIs are practically fully independent from the frontend clients. This gives you the flexibility to change the whole architecture of your API (like switching from Django to ")),s("a",K,[n[212]||(n[212]=a("Flask (")),t(e,{icon:"iconfont icon-github"}),n[213]||(n[213]=s("code",null,"pallets/flask",-1)),n[214]||(n[214]=a(")"))]),n[216]||(n[216]=a(", for example) without any side effects to your React apps."))]),t(r,{name:"pallets/flask",desc:"The Python micro framework for building web applications.",url:"https://github.com/pallets/flask/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://repository-images.githubusercontent.com/596892/cc2c69ec-9251-4b33-8283-b86a8659c9cb"}),s("p",null,[n[219]||(n[219]=a("As a challenge, try to add a ")),t(i,{to:"/blog.logrocket.com/render-large-lists-react-5-methods-examples.html"},{default:p(()=>n[217]||(n[217]=[s("strong",null,"pagination system",-1)])),_:1,__:[217]}),n[220]||(n[220]=a(" to your API/React app. The Django REST Framework provides support for ")),s("a",_,[t(e,{icon:"iconfont icon-django"}),n[218]||(n[218]=a("customizable pagination styles"))]),n[221]||(n[221]=a("."))]),b(" TODO: add ARTICLE CARD "),t(u,d(k({title:"Using React with Django to create an app: Tutorial",desc:"Learn how to integrate React with Django, create a simple CRUD API with the Django REST framework free from common CORS issues, and more.",link:"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/using-react-django-create-app-tutorial.html",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16)])}const tn=g(q,[["render",nn]]),en=JSON.parse('{"path":"/blog.logrocket.com/using-react-django-create-app-tutorial.html","title":"Using React with Django to create an app: Tutorial","lang":"en-US","frontmatter":{"lang":"en-US","title":"Using React with Django to create an app: Tutorial","description":"Article(s) > Using React with Django to create an app: Tutorial","icon":"iconfont icon-django","category":["Python","Django","Node.js","React.js","Article(s)"],"tag":["blog","blog.logrocket.com","python","py","django","py-django","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Using React with Django to create an app: Tutorial\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/final-visualization.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/testing-endpoints-django-student-list.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/frontend-components-header-home.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/creating-new-student-modal.png\\"],\\"datePublished\\":\\"2022-07-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Diogo Souza\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/using-react-django-create-app-tutorial.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Using React with Django to create an app: Tutorial"}],["meta",{"property":"og:description","content":"Article(s) > Using React with Django to create an app: Tutorial"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Using React with Django to create an app: Tutorial"}],["meta",{"property":"article:author","content":"Diogo Souza"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"py-django"}],["meta",{"property":"article:tag","content":"django"}],["meta",{"property":"article:tag","content":"py"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2022-07-15T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Using React with Django to create an app: Tutorial"},{"property":"og:description","content":"Using React with Django to create an app: Tutorial"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/using-react-django-create-app-tutorial.html"}]],"prev":"/programming/py-django/articles/README.md","date":"2022-07-15T00:00:00.000Z","isOriginal":false,"author":"Diogo Souza","cover":"/assets/image/blog.logrocket.com/using-react-django-create-app-tutorial/banner.png"},"git":{},"readingTime":{"minutes":17.15,"words":5145},"filePathRelative":"blog.logrocket.com/using-react-django-create-app-tutorial.md","copyright":{"author":"Diogo Souza"}}');export{tn as comp,en as data};
