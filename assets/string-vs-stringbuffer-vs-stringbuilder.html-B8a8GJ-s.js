import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,d as e,f as i,b as g,a as S,t as v,n as f,g as m,e as n,w as r,r as a,o as y}from"./app-BVguHYKu.js";const w={},B={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"hint-container info"},I={href:"https://youtube.com/playlist?list=PL_I3TGB7aK6jNBMZkw3FYdJXyf7quHdI8",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/amitshekhariitbhu/android-interview-questions",target:"_blank",rel:"noopener noreferrer"},q={class:"hint-container info"},T={href:"https://twitter.com/amitiitbhu",target:"_blank",rel:"noopener noreferrer"},P={href:"https://linkedin.com/in/amit-shekhar-iitbhu",target:"_blank",rel:"noopener noreferrer"},M={href:"https://youtube.com/@amitshekhar",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/amitshekhariitbhu",target:"_blank",rel:"noopener noreferrer"},j={href:"https://twitter.com/outcome_school",target:"_blank",rel:"noopener noreferrer"},N={href:"https://linkedin.com/company/outcomeschool",target:"_blank",rel:"noopener noreferrer"},C={href:"https://youtube.com/@OutcomeSchool",target:"_blank",rel:"noopener noreferrer"},O={href:"http://github.com/OutcomeSchool",target:"_blank",rel:"noopener noreferrer"};function Y(c,t){const d=a("VPCard"),u=a("SiteInfo"),o=a("VPIcon"),h=a("Tabs");return y(),b("div",null,[e("h1",B,[e("a",k,[e("span",null,v(c.$frontmatter.title)+" 관련",1)])]),i(d,f(m({title:"Java > Article(s)",desc:"Article(s)",link:"/programming/java/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t[38]||(t[38]=e("nav",{class:"table-of-contents"},[e("ul")],-1)),t[39]||(t[39]=e("hr",null,null,-1)),i(u,{name:"String vs StringBuffer vs StringBuilder",desc:"In this blog, we will learn about String, StringBuffer, and StringBuilder.",url:"https://outcomeschool.com/string-vs-stringbuffer-vs-stringbuilder",logo:"https://outcomeschool.com/static/favicons/apple-touch-icon.png",preview:"https://outcomeschool.com/static/images/blog/string-vs-stringbuffer-vs-stringbuilder.png"}),e("div",A,[t[3]||(t[3]=e("p",{class:"hint-container-title"},"Info",-1)),e("p",null,[t[1]||(t[1]=n("Before we start, I would like to mention that, I have released a video playlist to help you crack the Android Interview: Check out ")),e("a",I,[i(o,{icon:"fa-brands fa-youtube"}),t[0]||(t[0]=n("Android Interview Questions and Answers"))]),t[2]||(t[2]=n("."))])]),t[40]||(t[40]=g("<p>In this blog, we will learn about <code>String</code>, <code>StringBuffer</code>, and <code>StringBuilder</code>.</p><p>As we know, we have <code>String</code>, <code>StringBuffer</code>, and <code>StringBuilder</code> in both Java and Kotlin. So, whatever you are going to read now applies to both languages.</p><p>Let&#39;s begin.</p><p><code>String</code>, <code>StringBuffer</code>, and <code>StringBuilder</code> are completely different. We need to know the difference to avoid misusing them. They serve different purposes, especially when it comes to mutability, thread-safe, and performance.</p><p>We will start with the String.</p>",5)),i(h,{data:[{id:"<code>String</code>"},{id:"<code>StringBuffer</code>"},{id:"<code>StringBuilder</code>"}]},{title0:r(({value:l,isActive:s})=>t[4]||(t[4]=[e("code",null,"String",-1)])),title1:r(({value:l,isActive:s})=>t[5]||(t[5]=[e("code",null,"StringBuffer",-1)])),title2:r(({value:l,isActive:s})=>t[6]||(t[6]=[e("code",null,"StringBuilder",-1)])),tab0:r(({value:l,isActive:s})=>t[7]||(t[7]=[e("ul",null,[e("li",null,[e("strong",null,"Mutability"),n(": "),e("code",null,"String"),n(" is immutable. A "),e("code",null,"String"),n(" can't be changed once it's made. If you change it, a new "),e("code",null,"String"),n(" object will be created.")]),e("li",null,[e("strong",null,"Thread-Safe"),n(": Yes, being immutable, "),e("code",null,"String"),n(" is inherently thread-safe.")]),e("li",null,[e("strong",null,"Performance"),n(": As the "),e("code",null,"String"),n(" is immutable, so it is slower for concatenation due to object creation. When we do frequent modifications, it can lead to performance issues due to the creation of many temporary objects.")]),e("li",null,[e("strong",null,"Use case"),n(": Ideal for situations where strings don't require frequent modifications or when immutability is preferred.")])],-1),e("p",null,[n("Now that we have learned about the "),e("code",null,"String"),n(", it's time to learn about the "),e("code",null,"StringBuffer"),n(".")],-1)])),tab1:r(({value:l,isActive:s})=>t[8]||(t[8]=[e("ul",null,[e("li",null,[e("strong",null,"Mutability"),n(": StringBuffer is mutable. As it is mutable, it can be modified after it is created.")]),e("li",null,[e("strong",null,"Thread-Safe"),n(": Yes, it is thread-safe as its methods are synchronized. So, the advantage is that it can be used in multi-threaded environments.")]),e("li",null,[e("strong",null,"Performance"),n(": More efficient than String for frequent modifications, but slower than "),e("code",null,"StringBuilder"),n(" due to synchronization overhead.")]),e("li",null,[e("strong",null,"Use case"),n(": Ideal for situations where strings require frequent modifications in multi-threaded environments.")])],-1),e("p",null,[n("Perfect, now let's jump into the "),e("code",null,"StringBuilder"),n(".")],-1)])),tab2:r(({value:l,isActive:s})=>t[9]||(t[9]=[e("ul",null,[e("li",null,[e("strong",null,"Mutability"),n(": "),e("code",null,"StringBuilder"),n(" is mutable. As it is mutable, it can be modified after it is created.")]),e("li",null,[e("strong",null,"Thread-Safe"),n(": No, it is not thread-safe as its methods are not synchronized. So, the disadvantage is that it can't be used in multi-threaded environments.")]),e("li",null,[e("strong",null,"Performance"),n(": Most efficient for frequent string modifications in single-threaded environments.")]),e("li",null,[e("strong",null,"Use case"),n(": Ideal for situations where strings require frequent modifications in single-threaded environments.")])],-1)])),_:1}),t[41]||(t[41]=g('<p>We now understand the differences between <code>String</code>, <code>StringBuffer</code>, and <code>StringBuilder</code>.</p><p><strong>Let me tabulate the difference between <code>String</code>, <code>StringBuffer</code>, and <code>StringBuilder</code>.</strong></p><table><thead><tr><th style="text-align:left;">Feature</th><th style="text-align:left;"><code>String</code></th><th style="text-align:left;"><code>StringBuffer</code></th><th style="text-align:left;"><code>StringBuilder</code></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Mutability</strong></td><td style="text-align:left;">Immutable.</td><td style="text-align:left;">Mutable.</td><td style="text-align:left;">Mutable.</td></tr><tr><td style="text-align:left;"><strong>Thread-Safe</strong></td><td style="text-align:left;">Yes.</td><td style="text-align:left;">Yes.</td><td style="text-align:left;">No.</td></tr><tr><td style="text-align:left;"><strong>Performance</strong></td><td style="text-align:left;">Slower for frequent modifications.</td><td style="text-align:left;">More efficient than <code>String</code> for frequent modifications, but slower than <code>StringBuilder</code> due to synchronization overhead.</td><td style="text-align:left;">Most efficient for frequent string modifications in single-threaded environments.</td></tr><tr><td style="text-align:left;"><strong>Use case</strong></td><td style="text-align:left;">Ideal for situations where strings don&#39;t require frequent modifications or when immutability is preferred.</td><td style="text-align:left;">Ideal for situations where strings require frequent modifications in multi-threaded environments.</td><td style="text-align:left;">Ideal for situations where strings require frequent modifications in single-threaded environments.</td></tr></tbody></table><p>This was all about <code>String</code>, <code>StringBuffer</code>, and <code>StringBuilder</code>.</p>',4)),e("p",null,[t[13]||(t[13]=n("Prepare yourself for Android Interview: ")),e("a",x,[t[10]||(t[10]=n("Android Interview Questions (")),i(o,{icon:"iconfont icon-github"}),t[11]||(t[11]=e("code",null,"amitshekhariitbhu/android-interview-questions",-1)),t[12]||(t[12]=n(")"))])]),i(u,{name:"amitshekhariitbhu/android-interview-questions",desc:"Your Cheat Sheet For Android Interview - Android Interview Questions and Answers",url:"https://github.com/amitshekhariitbhu/android-interview-questions/",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://repository-images.githubusercontent.com/96704265/3a1039a7-29ee-425d-b4ea-53fcff2c1db7"}),t[42]||(t[42]=e("p",null,"That's it for now.",-1)),t[43]||(t[43]=e("p",null,"Thanks",-1)),e("div",q,[t[35]||(t[35]=e("p",{class:"hint-container-title"},"Amit Shekhar",-1)),t[36]||(t[36]=e("p",null,"You can connect with me on:",-1)),e("ul",null,[e("li",null,[e("a",T,[t[14]||(t[14]=n("X (")),i(o,{icon:"fa-brands fa-x-twitter"}),t[15]||(t[15]=e("code",null,"amitiitbhu",-1))])]),e("li",null,[e("a",P,[t[16]||(t[16]=n("LinkedIn (")),i(o,{icon:"fa-brands fa-linkedin"}),t[17]||(t[17]=e("code",null,"amit-shekhar-iitbhu",-1))])]),e("li",null,[e("a",M,[t[18]||(t[18]=n("YouTube (")),i(o,{icon:"fa-brands fa-youtube"}),t[19]||(t[19]=e("code",null,"amitshekhar",-1)),t[20]||(t[20]=n(")"))])]),e("li",null,[e("a",V,[t[21]||(t[21]=n("GitHub (")),i(o,{icon:"iconfont icon-github"}),t[22]||(t[22]=e("code",null,"amitshekhariitbhu",-1))])])]),t[37]||(t[37]=e("p",null,"Follow Outcome School on:",-1)),e("ul",null,[e("li",null,[e("a",j,[t[23]||(t[23]=n("X (")),i(o,{icon:"fa-brands fa-x-twitter"}),t[24]||(t[24]=e("code",null,"outcome_school",-1)),t[25]||(t[25]=n(")"))])]),e("li",null,[e("a",N,[t[26]||(t[26]=n("LinkedIn (")),i(o,{icon:"fa-brands fa-linkedin"}),t[27]||(t[27]=e("code",null,"outcomeschool",-1)),t[28]||(t[28]=n(")"))])]),e("li",null,[e("a",C,[t[29]||(t[29]=n("YouTube (")),i(o,{icon:"fa-brands fa-youtube"}),t[30]||(t[30]=e("code",null,"OutcomeSchool",-1)),t[31]||(t[31]=n(")"))])]),e("li",null,[e("a",O,[t[32]||(t[32]=n("GitHub (")),i(o,{icon:"iconfont icon-github"}),t[33]||(t[33]=e("code",null,"OutcomeSchool",-1)),t[34]||(t[34]=n(")"))])])])]),S(" TODO: add ARTICLE CARD "),i(d,f(m({title:"String vs StringBuffer vs StringBuilder",desc:"In this blog, we will learn about String, StringBuffer, and StringBuilder.",link:"https://chanhi2000.github.io/bookshelf/outcomeschool.com/string-vs-stringbuffer-vs-stringbuilder.html",logo:"https://outcomeschool.com/static/favicons/apple-touch-icon.png",background:"rgba(78,70,220,0.2)"})),null,16)])}const L=p(w,[["render",Y]]),R=JSON.parse('{"path":"/outcomeschool.com/string-vs-stringbuffer-vs-stringbuilder.html","title":"String vs StringBuffer vs StringBuilder","lang":"en-US","frontmatter":{"lang":"en-US","title":"String vs StringBuffer vs StringBuilder","description":"Article(s) > String vs StringBuffer vs StringBuilder","icon":"iconfont icon-kotlin","category":["Java","Kotlin","Article(s)"],"tag":["blog","outcomeschool.com","java","kotlin"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String vs StringBuffer vs StringBuilder\\",\\"image\\":[\\"https://outcomeschool.com/static/images/blog/string-vs-stringbuffer-vs-stringbuilder.png\\"],\\"datePublished\\":\\"2024-08-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amit Shekhar\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/outcomeschool.com/string-vs-stringbuffer-vs-stringbuilder.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"String vs StringBuffer vs StringBuilder"}],["meta",{"property":"og:description","content":"Article(s) > String vs StringBuffer vs StringBuilder"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://outcomeschool.com/static/images/blog/string-vs-stringbuffer-vs-stringbuilder.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://outcomeschool.com/static/images/blog/string-vs-stringbuffer-vs-stringbuilder.png"}],["meta",{"name":"twitter:image:alt","content":"String vs StringBuffer vs StringBuilder"}],["meta",{"property":"article:author","content":"Amit Shekhar"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"outcomeschool.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-08-26T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > String vs StringBuffer vs StringBuilder"},{"property":"og:description","content":"String vs StringBuffer vs StringBuilder"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/outcomeschool.com/string-vs-stringbuffer-vs-stringbuilder.html"}]],"prev":"/programming/java/articles/README.md","date":"2024-08-26T00:00:00.000Z","isOriginal":false,"author":"Amit Shekhar","cover":"https://outcomeschool.com/static/images/blog/string-vs-stringbuffer-vs-stringbuilder.png"},"git":{},"readingTime":{"minutes":2.84,"words":853},"filePathRelative":"outcomeschool.com/string-vs-stringbuffer-vs-stringbuilder.md","copyright":{"author":"Amit Shekhar"}}');export{L as comp,R as data};
