import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as w,d as n,f as o,b as l,a as h,t as k,n as d,g as m,w as s,e,r,o as b}from"./app-BVguHYKu.js";const y={},x={id:"frontmatter-title",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title"},I={class:"table-of-contents"};function A(u,t){const p=r("VPCard"),i=r("router-link"),c=r("SiteInfo"),a=r("RouteLink"),f=r("VPIcon");return b(),w("div",null,[n("h1",x,[n("a",v,[n("span",null,k(u.$frontmatter.title),1)])]),o(p,d(m({title:"awk > Article(s)",desc:"Article(s)",link:"/tool/awk/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),o(p,d(m({title:"Shell > Article(s)",desc:"Article(s)",link:"/programming/sh/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",I,[n("ul",null,[n("li",null,[o(i,{to:"#list-files-owned-by-user-in-directory"},{default:s(()=>t[0]||(t[0]=[e("List Files Owned by User in Directory")])),_:1,__:[0]})]),n("li",null,[o(i,{to:"#list-files-owned-by-root-user"},{default:s(()=>t[1]||(t[1]=[e("List Files Owned by Root User")])),_:1,__:[1]})]),n("li",null,[o(i,{to:"#use-awk-comparison-operator-to-match-string"},{default:s(()=>t[2]||(t[2]=[e("Use Awk Comparison Operator to Match String")])),_:1,__:[2]})]),n("li",null,[o(i,{to:"#filter-files-modified-today"},{default:s(()=>t[3]||(t[3]=[e("Filter Files Modified Today")])),_:1,__:[3]})]),n("li",null,[o(i,{to:"#count-files-of-a-specific-type"},{default:s(()=>t[4]||(t[4]=[e("Count Files of a Specific Type")])),_:1,__:[4]})]),n("li",null,[o(i,{to:"#extract-specific-fields-from-command-output"},{default:s(()=>t[5]||(t[5]=[e("Extract Specific Fields from Command Output")])),_:1,__:[5]})])])]),t[54]||(t[54]=n("hr",null,null,-1)),o(c,{name:"How to Read and Filter Awk Input from STDIN in Linux - Part 7",desc:"In this Part 7 of Awk series, we shall look at few examples where you can filter the output of other commands instead of reading input from a file.",url:"https://tecmint.com/read-awk-input-from-stdin-in-linux",logo:"https://tecmint.com/wp-content/uploads/2020/07/favicon.ico",preview:"https://tecmint.com/wp-content/uploads/2016/06/Read-Awk-Input-from-STDIN.png"}),n("p",null,[t[7]||(t[7]=e("In the previous parts of the ")),o(a,{to:"/tecmint.com/use-linux-awk-command-to-filter-text-string-in-files.html"},{default:s(()=>t[6]||(t[6]=[n("strong",null,"Awk command series",-1)])),_:1,__:[6]}),t[8]||(t[8]=e(", we looked at reading input mostly from files, but what if you want to read input from ")),t[9]||(t[9]=n("strong",null,"STDIN",-1)),t[10]||(t[10]=e("?"))]),n("p",null,[t[12]||(t[12]=e("In ")),t[13]||(t[13]=n("strong",null,"Part 7",-1)),t[14]||(t[14]=e(" of the ")),t[15]||(t[15]=n("strong",null,"Awk",-1)),t[16]||(t[16]=e(" series, we shall look at a few examples where you can ")),o(a,{to:"/tecmint.com/pipe-command-output-to-other-commands.html"},{default:s(()=>t[11]||(t[11]=[n("strong",null,"filter the output of other commands",-1)])),_:1,__:[11]}),t[17]||(t[17]=e(" instead of reading input from a file."))]),t[55]||(t[55]=n("hr",null,null,-1)),t[56]||(t[56]=n("h2",{id:"list-files-owned-by-user-in-directory",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#list-files-owned-by-user-in-directory"},[n("span",null,"List Files Owned by User in Directory")])],-1)),n("p",null,[t[20]||(t[20]=e("We shall start with the ")),o(a,{to:"/tecmint.com/linux-dir-command-usage-with-examples.html"},{default:s(()=>t[18]||(t[18]=[n("strong",null,[n("code",null,"dir"),e(" command")],-1)])),_:1,__:[18]}),t[21]||(t[21]=e(", which works similarly to the ")),o(a,{to:"/tecmint.com/ls-command-in-linux.html"},{default:s(()=>t[19]||(t[19]=[n("strong",null,[n("code",null,"ls"),e(" command")],-1)])),_:1,__:[19]}),t[22]||(t[22]=e(". In the first example below, we use the output of the ")),t[23]||(t[23]=n("code",null,"dir -l",-1)),t[24]||(t[24]=e(" command as input for ")),t[25]||(t[25]=n("strong",null,"awk",-1)),t[26]||(t[26]=e(" to print the owner’s username, group name, and the files he/she owns in the current directory:"))]),t[57]||(t[57]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">dir</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $3, $4, $9;}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://tecmint.com/wp-content/uploads/2016/06/List-Files-Owned-By-User-in-Directory.png" alt="List Files Owned By User in Directory" tabindex="0" loading="lazy"><figcaption>List Files Owned By User in Directory</figcaption></figure><hr><h2 id="list-files-owned-by-root-user" tabindex="-1"><a class="header-anchor" href="#list-files-owned-by-root-user"><span>List Files Owned by Root User</span></a></h2>`,4)),n("p",null,[t[28]||(t[28]=e("Take a look at another example where we ")),o(a,{to:"/tecmint.com/combine-multiple-expressions-in-awk.html"},{default:s(()=>t[27]||(t[27]=[n("strong",null,"employ awk expressions",-1)])),_:1,__:[27]}),t[29]||(t[29]=e(", here, we want to print files owned by the ")),t[30]||(t[30]=n("strong",null,"root",-1)),t[31]||(t[31]=e(" user by using an expression to filter strings as in the awk command below:"))]),t[58]||(t[58]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">dir</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;$3==&quot;root&quot; {print $1,$3,$4, $9;} &#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://tecmint.com/wp-content/uploads/2016/06/List-Files-Owned-by-Root-User.png" alt="List Files Owned by Root User" tabindex="0" loading="lazy"><figcaption>List Files Owned by Root User</figcaption></figure><p>The command above includes the <code>(==)</code> comparison operator to help us filter out files in the current directory that are owned by the root user. This is achieved using the expression <code>$3==”root”</code>.</p><hr><h2 id="use-awk-comparison-operator-to-match-string" tabindex="-1"><a class="header-anchor" href="#use-awk-comparison-operator-to-match-string"><span>Use Awk Comparison Operator to Match String</span></a></h2>`,5)),n("p",null,[t[33]||(t[33]=e("Let us look at another example of where we use an ")),o(a,{to:"/tecmint.com/comparison-operators-in-awk.html"},{default:s(()=>t[32]||(t[32]=[n("strong",null,"awk comparison operator",-1)])),_:1,__:[32]}),t[34]||(t[34]=e(" to match a certain string."))]),n("p",null,[t[36]||(t[36]=e("Here, we have used the ")),o(a,{to:"/tecmint.com/13-basic-cat-command-examples-in-linux.html"},{default:s(()=>t[35]||(t[35]=[n("strong",null,[n("code",null,"cat"),e(" command")],-1)])),_:1,__:[35]}),t[37]||(t[37]=e(" to view the contents of a file named ")),o(f,{icon:"fas fa-file-lines"}),t[38]||(t[38]=n("code",null,"tecmint_deals.txt",-1)),t[39]||(t[39]=e(" and we want to view the deals of type ")),t[40]||(t[40]=n("strong",null,"Tech",-1)),t[41]||(t[41]=e(" only, so we shall run the following commands:"))]),t[59]||(t[59]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> tecmint_deals.txt</span>
<span class="line"><span class="token function">cat</span> tecmint_deals.txt <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;$4 ~ /tech/{print}&#39;</span></span>
<span class="line"><span class="token function">cat</span> tecmint_deals.txt <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;$4 ~ /Tech/{print}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://tecmint.com/wp-content/uploads/2016/06/Use-Comparison-Operator-to-Match-String.png" alt="Use Awk Comparison Operator to Match String" tabindex="0" loading="lazy"><figcaption>Use Awk Comparison Operator to Match String</figcaption></figure><p>In the example above, we have used the value <code>~ /pattern/</code> comparison operator, but there are two commands to try and bring out something very important.</p><p>When you run the command with pattern <strong>tech</strong> nothing is printed out because there is no <strong>deal</strong> of that type, but with <strong>Tech</strong>, you get deals of type <strong>Tech</strong>.</p><p>So always be careful when using this comparison operator, it is case-sensitive as we have seen above.</p><p>You can always use the output of another command instead as input for awk instead of reading input from a file, this is very simple as we have looked at in the examples above.</p><hr><h2 id="filter-files-modified-today" tabindex="-1"><a class="header-anchor" href="#filter-files-modified-today"><span>Filter Files Modified Today</span></a></h2><p>Now to filter files modified today, you can use awk to extract and display these files:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;$6 == &quot;Aug&quot; &amp;&amp; $7 == &quot;9&quot; {print $9}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command filters files modified on August 9</p><hr><h2 id="count-files-of-a-specific-type" tabindex="-1"><a class="header-anchor" href="#count-files-of-a-specific-type"><span>Count Files of a Specific Type</span></a></h2><p>To count the number of <code>.txt</code> files in a directory, use:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;$9 ~ /.txt$/ {count++} END {print count}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="extract-specific-fields-from-command-output" tabindex="-1"><a class="header-anchor" href="#extract-specific-fields-from-command-output"><span>Extract Specific Fields from Command Output</span></a></h2>`,17)),n("p",null,[t[43]||(t[43]=e("If you want to extract specific fields from a ")),o(a,{to:"/tecmint.com/ps-command-examples-for-linux-process-monitoring.html"},{default:s(()=>t[42]||(t[42]=[n("strong",null,[n("code",null,"ps"),e(" command")],-1)])),_:1,__:[42]}),t[44]||(t[44]=e(" output, such as the process ID and command name:"))]),t[60]||(t[60]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1, $2, $11}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),n("p",null,[t[46]||(t[46]=e("Hope the examples were clear enough for you to understand, if you have any concerns, you can express them through the comment section below, and remember to check the next part of the series where we shall look at ")),t[47]||(t[47]=n("strong",null,"awk",-1)),t[48]||(t[48]=e(" features such as ")),o(a,{to:"/tecmint.com/learn-awk-variables-numeric-expressions-and-assignment-operators.html"},{default:s(()=>t[45]||(t[45]=[n("strong",null,"variables",-1)])),_:1,__:[45]}),t[49]||(t[49]=e(", ")),t[50]||(t[50]=n("strong",null,"numeric expressions",-1)),t[51]||(t[51]=e(", and ")),t[52]||(t[52]=n("strong",null,"assignment operators",-1)),t[53]||(t[53]=e("."))]),h(" TODO: add ARTICLE CARD "),o(p,d(m({title:"How to Read and Filter Awk Input from STDIN in Linux - Part 7",desc:"In this Part 7 of Awk series, we shall look at few examples where you can filter the output of other commands instead of reading input from a file.",link:"https://chanhi2000.github.io/bookshelf/tecmint.com/read-awk-input-from-stdin-in-linux.html",logo:"https://tecmint.com/wp-content/uploads/2020/07/favicon.ico",background:"rgba(5,86,243,0.2)"})),null,16)])}const F=g(y,[["render",A]]),D=JSON.parse('{"path":"/tecmint.com/read-awk-input-from-stdin-in-linux.html","title":"How to Read and Filter Awk Input from STDIN in Linux - Part 7","lang":"en-US","frontmatter":{"lang":"en-US","title":"How to Read and Filter Awk Input from STDIN in Linux - Part 7","description":"Article(s) > How to Read and Filter Awk Input from STDIN in Linux - Part 7","icon":"iconfont icon-awk","category":["Linux","Shell","awk","Article(s)"],"tag":["blog","tecmint.com","sh","shell","linux","awk"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to Read and Filter Awk Input from STDIN in Linux - Part 7\\",\\"image\\":[\\"https://tecmint.com/wp-content/uploads/2016/06/List-Files-Owned-By-User-in-Directory.png\\",\\"https://tecmint.com/wp-content/uploads/2016/06/List-Files-Owned-by-Root-User.png\\",\\"https://tecmint.com/wp-content/uploads/2016/06/Use-Comparison-Operator-to-Match-String.png\\"],\\"datePublished\\":\\"2024-08-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron Kili\\",\\"url\\":\\"https://tecmint.com/author/aaronkili/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/tecmint.com/read-awk-input-from-stdin-in-linux.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to Read and Filter Awk Input from STDIN in Linux - Part 7"}],["meta",{"property":"og:description","content":"Article(s) > How to Read and Filter Awk Input from STDIN in Linux - Part 7"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tecmint.com/wp-content/uploads/2016/06/Read-Awk-Input-from-STDIN.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://tecmint.com/wp-content/uploads/2016/06/Read-Awk-Input-from-STDIN.png"}],["meta",{"name":"twitter:image:alt","content":"How to Read and Filter Awk Input from STDIN in Linux - Part 7"}],["meta",{"property":"article:author","content":"Aaron Kili"}],["meta",{"property":"article:tag","content":"awk"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:tag","content":"shell"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:tag","content":"tecmint.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-08-12T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > How to Read and Filter Awk Input from STDIN in Linux - Part 7"},{"property":"og:description","content":"How to Read and Filter Awk Input from STDIN in Linux - Part 7"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/tecmint.com/read-awk-input-from-stdin-in-linux.html"}]],"prev":"/tool/awk/articles/README.md","date":"2024-08-12T00:00:00.000Z","isOriginal":false,"author":[{"name":"Aaron Kili","url":"https://tecmint.com/author/aaronkili/"}],"cover":"https://tecmint.com/wp-content/uploads/2016/06/Read-Awk-Input-from-STDIN.png"},"git":{},"readingTime":{"minutes":3.17,"words":951},"filePathRelative":"tecmint.com/read-awk-input-from-stdin-in-linux.md","copyright":{"author":"Aaron Kili"}}');export{F as comp,D as data};
