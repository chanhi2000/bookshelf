import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,d as t,f as a,b as m,t as h,n as d,g,w as s,r as o,o as w,e as i}from"./app-BVguHYKu.js";const v={},y={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},f={class:"table-of-contents"};function b(l,n){const p=o("VPCard"),e=o("router-link"),r=o("SiteInfo");return w(),u("div",null,[t("h1",y,[t("a",k,[t("span",null,h(l.$frontmatter.title)+" ê´€ë ¨",1)])]),a(p,d(g({title:"C# > Article(s)",desc:"Article(s)",link:"/programming/cs/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t("nav",f,[t("ul",null,[t("li",null,[a(e,{to:"#wishing-you-a-warm-welcome"},{default:s(()=>n[0]||(n[0]=[i("Wishing You a Warm Welcome")])),_:1,__:[0]})]),t("li",null,[a(e,{to:"#the-problem-with-wide-linq"},{default:s(()=>n[1]||(n[1]=[i("The Problem With Wide LINQ")])),_:1,__:[1]})]),t("li",null,[a(e,{to:"#how-to-write-tall-linq"},{default:s(()=>n[2]||(n[2]=[i("How to Write Tall LINQ")])),_:1,__:[2]})])])]),n[3]||(n[3]=t("hr",null,null,-1)),a(r,{name:"Why I Write My LINQ Queries Tall, Not Wide",desc:"In this newsletter, I'll show you how you can write tall LINQ queries to improve readability and make your code easier to maintain. We are going to start from a wide LINQ query, and see how we can refactor it into a tall LINQ query.",url:"https://milanjovanovic.tech/blog/why-i-write-tall-linq-queries/",logo:"https://milanjovanovic.tech/profile_favicon.png",preview:"https://www.milanjovanovic.tech/blog-covers/mnw_001.png"}),n[4]||(n[4]=m(`<h2 id="wishing-you-a-warm-welcome" tabindex="-1"><a class="header-anchor" href="#wishing-you-a-warm-welcome"><span>Wishing You a Warm Welcome</span></a></h2><p>First, I want to welcome you to the first edition of <strong>Milan&#39;s .NET Weekly</strong> newsletter.</p><p>I hope that this newsletter can become a positive force in the .NET community. To bring many of us together so that we can all continue learning and improving.</p><p>With that out of the way, let&#39;s get into .NET!</p><hr><h2 id="the-problem-with-wide-linq" tabindex="-1"><a class="header-anchor" href="#the-problem-with-wide-linq"><span>The Problem With Wide LINQ</span></a></h2><p>Let&#39;s consider the following LINQ expression from a code style perspective.</p><p>I call this a wide LINQ expression because it stretches horizontally across the entire screen.</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line">dbContext<span class="token punctuation">.</span>Animals<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>animal <span class="token operator">=&gt;</span> animal<span class="token punctuation">.</span>HasBigEars<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>animal <span class="token operator">=&gt;</span> animal<span class="token punctuation">.</span>IsDangerous<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span></span>
<span class="line">        animal <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>animal<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> animal<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>It is difficult to read.</li><li>It is difficult to reason about.</li><li>It is difficult to extend or maintain.</li></ul><p>To improve this, I created a simple rule that you can follow:</p><blockquote><p>When writing LINQ, try to go tall, not wide.</p></blockquote><hr><h2 id="how-to-write-tall-linq" tabindex="-1"><a class="header-anchor" href="#how-to-write-tall-linq"><span>How to Write Tall LINQ</span></a></h2><p>So how do we write tall LINQ expressions?</p><p>I&#39;m going to rewrite the previous expression, to improve it.</p><p>Try to follow the <em>one dot per line rule</em>:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line">dbContext</span>
<span class="line">    <span class="token punctuation">.</span>Animals</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>animal <span class="token operator">=&gt;</span> animal<span class="token punctuation">.</span>HasBigEars<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>animal <span class="token operator">=&gt;</span> animal<span class="token punctuation">.</span>IsDangerous<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>animal <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>animal<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> animal<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Is the new version easier to read? <strong>Yes</strong>, very much so.</p><p>It is easier to understand what each expression does, and how it feeds into the next one in the chain.</p><p>If you are working in a team, try to propose this as a coding standard (if it isn&#39;t one already). You will see that over time this will make a noticeable difference.</p>`,21))])}const N=c(v,[["render",b]]),Q=JSON.parse('{"path":"/milanjovanovic.tech/why-i-write-tall-linq-queries.html","title":"Why I Write My LINQ Queries Tall, Not Wide","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Why I Write My LINQ Queries Tall, Not Wide","description":"Article(s) > Why I Write My LINQ Queries Tall, Not Wide","icon":"iconfont icon-csharp","category":["C#","DotNet","Article(s)"],"tag":["blog","milanjovanovic.tech","cs","c#","csharp","dotnet"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Why I Write My LINQ Queries Tall, Not Wide\\",\\"image\\":[\\"https://www.milanjovanovic.tech/blog-covers/mnw_001.png\\"],\\"datePublished\\":\\"2022-09-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/why-i-write-tall-linq-queries.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Why I Write My LINQ Queries Tall, Not Wide"}],["meta",{"property":"og:description","content":"Article(s) > Why I Write My LINQ Queries Tall, Not Wide"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.milanjovanovic.tech/blog-covers/mnw_001.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://www.milanjovanovic.tech/blog-covers/mnw_001.png"}],["meta",{"name":"twitter:image:alt","content":"Why I Write My LINQ Queries Tall, Not Wide"}],["meta",{"property":"article:tag","content":"dotnet"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:tag","content":"c#"}],["meta",{"property":"article:tag","content":"cs"}],["meta",{"property":"article:tag","content":"milanjovanovic.tech"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2022-09-03T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Why I Write My LINQ Queries Tall, Not Wide"},{"property":"og:description","content":"Why I Write My LINQ Queries Tall, Not Wide"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/why-i-write-tall-linq-queries.html"}]],"prev":"/programming/cs/articles/README.md","date":"2022-09-03T00:00:00.000Z","isOriginal":false,"cover":"https://www.milanjovanovic.tech/blog-covers/mnw_001.png"},"git":{},"readingTime":{"minutes":1.49,"words":447},"filePathRelative":"milanjovanovic.tech/why-i-write-tall-linq-queries.md"}');export{N as comp,Q as data};
