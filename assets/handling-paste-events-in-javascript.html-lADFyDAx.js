import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as s,f as t,b as c,a as k,t as b,n as m,g,w as p,e as a,r as o,o as y}from"./app-BVguHYKu.js";const w={},x={id:"frontmatter-title-관련",tabindex:"-1"},q={class:"header-anchor",href:"#frontmatter-title-관련"},j={class:"table-of-contents"},S={class:"hint-container info"},I={href:"https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent/clipboardData",target:"_blank",rel:"noopener noreferrer"},P={href:"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/getData",target:"_blank",rel:"noopener noreferrer"},T={href:"https://developer.mozilla.org/en-US/docs/Web/API/FileList",target:"_blank",rel:"noopener noreferrer"},E={class:"hint-container info"};function D(i,n){const d=o("VPCard"),l=o("router-link"),v=o("SiteInfo"),e=o("RouteLink"),u=o("CodePen"),r=o("VPIcon");return y(),f("div",null,[s("h1",x,[s("a",q,[s("span",null,b(i.$frontmatter.title)+" 관련",1)])]),t(d,m(g({title:"JavaScript > Article(s)",desc:"Article(s)",link:"/programming/js/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),s("nav",j,[s("ul",null,[s("li",null,[t(l,{to:"#listening-for-the-event"},{default:p(()=>n[0]||(n[0]=[a("Listening for the Event")])),_:1,__:[0]})]),s("li",null,[t(l,{to:"#working-with-the-event"},{default:p(()=>n[1]||(n[1]=[a("Working with the Event")])),_:1,__:[1]})]),s("li",null,[t(l,{to:"#getting-text-of-a-pasted-event"},{default:p(()=>n[2]||(n[2]=[a("Getting Text of a Pasted Event")])),_:1,__:[2]})]),s("li",null,[t(l,{to:"#getting-files-from-the-clipboard"},{default:p(()=>n[3]||(n[3]=[a("Getting Files from the Clipboard")])),_:1,__:[3]})]),s("li",null,[t(l,{to:"#conclusion"},{default:p(()=>n[4]||(n[4]=[a("Conclusion")])),_:1,__:[4]})])])]),n[45]||(n[45]=s("hr",null,null,-1)),t(v,{name:"Handling Paste Events in JavaScript",desc:"This concludes our three-part series on working with clipboard data. With pasting, we have some control over the type of data we want to use.",url:"https://frontendmasters.com/blog/handling-paste-events-in-javascript/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4153"}),s("p",null,[n[7]||(n[7]=a("Welcome to the third and final post in the series. In the")),t(e,{to:"/frontendmasters.com/reading-from-the-clipboard-in-javascript.html"},{default:p(()=>n[5]||(n[5]=[s("strong",null,"first article",-1)])),_:1,__:[5]}),n[8]||(n[8]=a(", I explained how JavaScript can read from the user’s clipboard. In the")),t(e,{to:"/frontendmasters.com/writing-to-the-clipboard-in-javascript.html"},{default:p(()=>n[6]||(n[6]=[s("strong",null,"last article",-1)])),_:1,__:[6]}),n[9]||(n[9]=a(", I explained the opposite, writing to the user’s clipboard. Now I’m going to demonstrate how to add basic “paste event” handling in your web app. Luckily, much of what we learned in the past two articles will come in handy as the ‘shape’ of the data will be the same."))]),s("div",S,[n[13]||(n[13]=s("p",{class:"hint-container-title"},"Article Series",-1)),s("ol",null,[s("li",null,[t(e,{to:"/frontendmasters.com/reading-from-the-clipboard-in-javascript.html"},{default:p(()=>n[10]||(n[10]=[s("strong",null,"Reading from the Clipboard in JavaScript",-1)])),_:1,__:[10]})]),s("li",null,[t(e,{to:"/frontendmasters.com/writing-to-the-clipboard-in-javascript.html"},{default:p(()=>n[11]||(n[11]=[s("strong",null,"Writing to the Clipboard in JavaScript",-1)])),_:1,__:[11]})]),s("li",null,[t(e,{to:"/frontendmasters.com/handling-paste-events-in-javascript.html"},{default:p(()=>n[12]||(n[12]=[s("strong",null,"Handling Paste Events in JavaScript",-1)])),_:1,__:[12]})])]),k(" TODO: ... ")]),n[46]||(n[46]=c(`<hr><h2 id="listening-for-the-event" tabindex="-1"><a class="header-anchor" href="#listening-for-the-event"><span>Listening for the Event</span></a></h2><p>If you’ve done anything at all with JavaScript and events you can probably guess the name of the event we’ll use,<code>paste</code>. I love language features, APIs, SDKs, etc where my natural guess about how something is done works! <em>Where</em> you listen for that event will depend on your use, but for our purposes, we’ll make it easy and add a listener on the<code>window</code>object like so:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;paste&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>That’s the easy part. Note that as with most event-related handlers, if you want to block the default action, for example, if the user pasted into a form field, you would use <code>e.preventDefault()</code>. One example of this (and to be clear, I<em>despise</em>this example) are forms asking for confidential information like bank account numbers. The form will disable pasting information into the form field. Again, I<em>really</em>don’t like this, so if you do make use of this, please consider using a<code>title</code>field to provide information to the user. Here’s an example.</p>`,5)),t(u,{user:"cfjedimaster","slug-hash":"qBeaYrZ",title:"Paste Events 1","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),n[47]||(n[47]=s("hr",null,null,-1)),n[48]||(n[48]=s("h2",{id:"working-with-the-event",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#working-with-the-event"},[s("span",null,"Working with the Event")])],-1)),s("p",null,[n[15]||(n[15]=a("So you’re listening for the paste event and want to do something with it, how do you begin? When the event fires, it contains a")),s("a",I,[t(r,{icon:"fa-brands fa-firefox"}),n[14]||(n[14]=s("code",null,"clipboardData",-1))]),n[16]||(n[16]=a("object. There are two main things we can do with this object:"))]),n[49]||(n[49]=c('<ul><li>Read textual data from it using a method,<code>getData</code></li><li>Check for a pasted<em>file</em>using the<code>files</code>property</li></ul><p>Let’s take a quick look at working with text.</p><hr><h2 id="getting-text-of-a-pasted-event" tabindex="-1"><a class="header-anchor" href="#getting-text-of-a-pasted-event"><span>Getting Text of a Pasted Event</span></a></h2>',4)),s("p",null,[n[18]||(n[18]=a("The")),s("a",P,[t(r,{icon:"fa-brands fa-firefox"}),n[17]||(n[17]=s("code",null,"getData",-1))]),n[19]||(n[19]=a("method accepts one attribute, the format of the data to retrieve."))]),n[50]||(n[50]=c(`<p>For example, to read the text of the clipboard:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> pastedText <span class="token operator">=</span> e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And HTML:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> pastedText <span class="token operator">=</span> e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&#39;text/html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The HTML version gets a bit… interesting. Let’s build a quick application to let you test this quickly. First, some HTML that includes radio buttons to let you select how to handle the paste event and an empty <code>&lt;div&gt;</code> for the data:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Pasted Data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textplain<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>View text/plain<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textplain<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/plain<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>texthtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>View text/html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>texthtml<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pasteDump<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In our JavaScript, we’ll listen for changes to the radio button as a way to determine how to handle the paste event. The paste event handler itself will call<code>getData()</code>and log it out to the <code>&lt;div&gt;</code>:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;input[name=type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  i<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    type <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;paste&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> dump <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#pasteDump&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> data <span class="token operator">=</span> e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  dump<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> data<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, you can paste text into the demo and see the different results in your browser console:</p>`,9)),t(u,{user:"cfjedimaster","slug-hash":"RwXGyqx",title:"Paste Events 2","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),s("p",null,[n[21]||(n[21]=a("For ‘plain/text’, you see what I think you would expect. If you go to a random web page, lets say the")),t(e,{to:"/frontendmasters.com/reading-from-the-clipboard-in-javascript.html"},{default:p(()=>n[20]||(n[20]=[s("strong",null,"first article",-1)])),_:1,__:[20]}),n[22]||(n[22]=a("in this series, and select from the title to the first paragraph:"))]),n[51]||(n[51]=c(`<figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/shot1.png?resize=832%2C508&amp;ssl=1" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>And the paste, you get:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="text"><span>text</span></div><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext"><pre><code class="language-plaintext"><span class="line">Reading from the Clipboard in JavaScript July 31, 2024 Browsers have excellent support for reading and writing the user’s clipboard, and this opens up possibilities for better, and more native like experiences on the web. On websites that use these APIs for helpful features, it feels natural to the user. On sites where it isn’t supported, it almost feels like a bug. In this series of articles, I’m going to demonstrate how to work with the clipboard.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>I’ll note that the line breaks were preserved, but are lost when rendered in HTML. If you wanted, you could do a string replacement for<code>\\n</code>for<code>&lt;br&gt;</code>to more accurately render the text.</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/shot2.png?resize=738%2C293&amp;ssl=1" alt="The HTML version is a bit… different" tabindex="0" loading="lazy"><figcaption>The HTML version is a bit… different</figcaption></figure><p>As you can see, it tried to accurately, kinda, represent the HTML from the selection. If you open up your console, you’re presented with something monstrous:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--StartFragment--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gradient-style-text<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> &amp;quot<span class="token punctuation">;</span>Mona Sans&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> system-ui<span class="token punctuation">,</span> -apple-system<span class="token punctuation">,</span> BlinkMacSystemFont<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>Segoe UI&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> Roboto<span class="token punctuation">,</span> Oxygen<span class="token punctuation">,</span> Ubuntu<span class="token punctuation">,</span> Cantarell<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>Open Sans&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>Helvetica Neue&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span> <span class="token property">white-space</span><span class="token punctuation">:</span> balance<span class="token punctuation">;</span> <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span> 1.1<span class="token punctuation">;</span> <span class="token property">font-variation-settings</span><span class="token punctuation">:</span> &amp;quot<span class="token punctuation">;</span>wght&amp;quot<span class="token punctuation">;</span> 900<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>wdth&amp;quot<span class="token punctuation">;</span> 125<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--font-size-xxl<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">word-break</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-variant-ligatures</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-variant-caps</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">orphans</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span> <span class="token property">text-indent</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">text-transform</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">widows</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token property">word-spacing</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">-webkit-text-stroke-width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">text-decoration-thickness</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">text-decoration-style</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">text-decoration-color</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">view-transition-name</span><span class="token punctuation">:</span> header-3136<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Reading from the Clipboard in JavaScript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>time</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block-time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">datetime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2024-07-31<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--font-family-monospace<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--font-size-xsm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 0.3rem<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 0px 0px 2rem<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-variant-ligatures</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-variant-caps</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span> <span class="token property">orphans</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span> <span class="token property">text-indent</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">widows</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token property">word-spacing</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">-webkit-text-stroke-width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">white-space</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">text-decoration-thickness</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">text-decoration-style</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">text-decoration-color</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">view-transition-name</span><span class="token punctuation">:</span> article-time-3136<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>July 31, 2024<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>time</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article-content<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--font-size-md<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 219<span class="token punctuation">,</span> 219<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">word-break</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span> <span class="token property">overflow-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> &amp;quot<span class="token punctuation">;</span>Mona Sans&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> system-ui<span class="token punctuation">,</span> -apple-system<span class="token punctuation">,</span> BlinkMacSystemFont<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>Segoe UI&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> Roboto<span class="token punctuation">,</span> Oxygen<span class="token punctuation">,</span> Ubuntu<span class="token punctuation">,</span> Cantarell<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>Open Sans&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>Helvetica Neue&amp;quot<span class="token punctuation">;</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span> <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-variant-ligatures</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-variant-caps</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span> <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 0.64px<span class="token punctuation">;</span> <span class="token property">orphans</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span> <span class="token property">text-indent</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">text-transform</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">widows</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token property">word-spacing</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">-webkit-text-stroke-width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">white-space</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">text-decoration-thickness</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">text-decoration-style</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> <span class="token property">text-decoration-color</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 2.2rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Browsers have excellent support for reading and writing the user’s clipboard, and this opens up possibilities for better, and more<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token property">font-variation-settings</span><span class="token punctuation">:</span> &amp;quot<span class="token punctuation">;</span>wght&amp;quot<span class="token punctuation">;</span> 400<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>wdth&amp;quot<span class="token punctuation">;</span> 100<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>slnt&amp;quot<span class="token punctuation">;</span> -10<span class="token punctuation">;</span> <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>250<span class="token punctuation">,</span> 162<span class="token punctuation">,</span> 162<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.1rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>native like<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>experiences on the web. On websites that use these APIs for helpful features, it feels natural to the user. On sites where it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token property">font-variation-settings</span><span class="token punctuation">:</span> &amp;quot<span class="token punctuation">;</span>wght&amp;quot<span class="token punctuation">;</span> 400<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>wdth&amp;quot<span class="token punctuation">;</span> 100<span class="token punctuation">,</span> &amp;quot<span class="token punctuation">;</span>slnt&amp;quot<span class="token punctuation">;</span> -10<span class="token punctuation">;</span> <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>250<span class="token punctuation">,</span> 162<span class="token punctuation">,</span> 162<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.1rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>isn’t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span>supported, it almost feels like a bug. In this series of articles, I’m going to demonstrate how to work with the clipboard.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--EndFragment--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This reminds me quite a lot of what Word documents exported to HTML looked like. Visually fine, but a source that would make your head spin.</p><p>If your curious how this handles<em>non</em>-text data: it depends.</p><p>Right clicking on an image and pasting it in returns nothing if the type is ‘text/plain’, but with ‘text/html’, you get:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--StartFragment--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>https://www.raymondcamden.com/images/avatar3.jpg<span class="token punctuation">&#39;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>Raymond Camden<span class="token punctuation">&#39;</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--EndFragment--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this case, I copied an image from my blog. While this works, there’s a better way.</p><hr><h2 id="getting-files-from-the-clipboard" tabindex="-1"><a class="header-anchor" href="#getting-files-from-the-clipboard"><span>Getting Files from the Clipboard</span></a></h2>`,14)),s("p",null,[n[24]||(n[24]=a("So what happens when you try to paste binary data, or let’s even say a file you copied from your machine? These end up in the")),n[25]||(n[25]=s("code",null,"clipboardData.files",-1)),n[26]||(n[26]=a("property. This is an array-like")),s("a",T,[t(r,{icon:"fa-brands fa-firefox"}),n[23]||(n[23]=a("FileList"))]),n[27]||(n[27]=a("object which matches what you get from an input form field with")),n[28]||(n[28]=s("code",null,"type=file",-1)),n[29]||(n[29]=a("or when you drag and drop into the browser. Because of this, code you may have used before can be used again, which is handy."))]),n[52]||(n[52]=c(`<p>One simple method for handling images is using a<code>FileReader</code>object, reading in the file as a data URL, and then adding it to the DOM. Let’s look at an example of that.</p><p>First, our simple HTML:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Pasted Images<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  Paste an image into the browser.</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preview<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice the ’empty’ image. This is what we’ll use for the preview. Now the JavaScript:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#preview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;paste&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span>files<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;handle a file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">&lt;</span>em<span class="token operator">&gt;</span><span class="token comment">/*</span>
<span class="line">    Files can be 2 or more, but we&#39;ll focus on 1 for img preview</span>
<span class="line">    */</span><span class="token operator">&lt;</span><span class="token operator">/</span>em<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">let</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;image/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">previewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">previewImage</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    img<span class="token punctuation">.</span>src <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>   </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the pasted event contains file, we can check the mimetype of each (although in this case, to keep things simple we’ll focus on one), and if it is an image, run<code>previewImage</code>, which handles reading and converting the data into a URL. You can try this version below:</p>`,6)),t(u,{user:"cfjedimaster","slug-hash":"VwoKENq",title:"Paste Events 3","default-tab":["css","result"],theme:i.$isDarkmode?"dark":"light"},null,8,["theme"]),n[53]||(n[53]=s("hr",null,null,-1)),n[54]||(n[54]=s("h2",{id:"conclusion",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#conclusion"},[s("span",null,"Conclusion")])],-1)),s("p",null,[n[31]||(n[31]=a("Just as when we were ")),t(e,{to:"/frontendmasters.com/writing-to-the-clipboard-in-javascript.html"},{default:p(()=>n[30]||(n[30]=[s("strong",null,[s("em",null,"writing"),a(" to the clipboard")],-1)])),_:1,__:[30]}),n[32]||(n[32]=a(" we had APIs like ")),n[33]||(n[33]=s("code",null,"writeText",-1)),n[34]||(n[34]=a(" and ")),n[35]||(n[35]=s("code",null,"write",-1)),n[36]||(n[36]=a(" where we had to be cognizant of the ")),n[37]||(n[37]=s("em",null,"type",-1)),n[38]||(n[38]=a(" we were writing, the pasting APIs have events with ")),n[39]||(n[39]=s("code",null,"clipboardData",-1)),n[40]||(n[40]=a(" in them too where we can get the data out in potentially a type of our preference. It is up to you to react to these paste events in a way with the best UX and accessibility you can muster. And remember: don’t block pasting as faux security measure!"))]),s("div",E,[n[44]||(n[44]=s("p",{class:"hint-container-title"},"Article Series",-1)),s("ol",null,[s("li",null,[t(e,{to:"/frontendmasters.com/reading-from-the-clipboard-in-javascript.html"},{default:p(()=>n[41]||(n[41]=[s("strong",null,"Reading from the Clipboard in JavaScript",-1)])),_:1,__:[41]})]),s("li",null,[t(e,{to:"/frontendmasters.com/writing-to-the-clipboard-in-javascript.html"},{default:p(()=>n[42]||(n[42]=[s("strong",null,"Writing to the Clipboard in JavaScript",-1)])),_:1,__:[42]})]),s("li",null,[t(e,{to:"/frontendmasters.com/handling-paste-events-in-javascript.html"},{default:p(()=>n[43]||(n[43]=[s("strong",null,"Handling Paste Events in JavaScript",-1)])),_:1,__:[43]})])]),k(" TODO: ... ")]),k(" TODO: add ARTICLE CARD "),t(d,m(g({title:"Handling Paste Events in JavaScript",desc:"This concludes our three-part series on working with clipboard data. With pasting, we have some control over the type of data we want to use.",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/handling-paste-events-in-javascript.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const A=h(w,[["render",D]]),L=JSON.parse('{"path":"/frontendmasters.com/handling-paste-events-in-javascript.html","title":"Handling Paste Events in JavaScript","lang":"en-US","frontmatter":{"lang":"en-US","title":"Handling Paste Events in JavaScript","description":"Article(s) > Handling Paste Events in JavaScript","icon":"fa-brands fa-js","category":["JavaScript","Article(s)"],"tag":["blog","frontendmasters.com","js","javascript"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Handling Paste Events in JavaScript\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/shot1.png?resize=832%2C508&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/10/shot2.png?resize=738%2C293&ssl=1\\"],\\"datePublished\\":\\"2024-10-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Raymond Camden\\",\\"url\\":\\"https://frontendmasters.com/blog/author/raymondcamden/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/handling-paste-events-in-javascript.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Handling Paste Events in JavaScript"}],["meta",{"property":"og:description","content":"Article(s) > Handling Paste Events in JavaScript"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4153"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4153"}],["meta",{"name":"twitter:image:alt","content":"Handling Paste Events in JavaScript"}],["meta",{"property":"article:author","content":"Raymond Camden"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-10-11T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Handling Paste Events in JavaScript"},{"property":"og:description","content":"Handling Paste Events in JavaScript"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/handling-paste-events-in-javascript.html"}]],"prev":"/programming/js/articles/README.md","date":"2024-10-11T00:00:00.000Z","isOriginal":false,"author":[{"name":"Raymond Camden","url":"https://frontendmasters.com/blog/author/raymondcamden/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/4153"},"git":{},"readingTime":{"minutes":7.11,"words":2133},"filePathRelative":"frontendmasters.com/handling-paste-events-in-javascript.md","copyright":{"author":"Raymond Camden"}}');export{A as comp,L as data};
