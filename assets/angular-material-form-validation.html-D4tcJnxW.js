import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as a,f as t,b as v,t as b,n as r,g as d,w as e,e as s,r as l,o as h}from"./app-BVguHYKu.js";const f="/bookshelf/assets/image/code-maze.com/angular-material-form-validation/31-Owner-List-Added-Create-Link.png",y="/bookshelf/assets/image/code-maze.com/angular-material-form-validation/32-Owner-Create-Finished.gif",w="/bookshelf/assets/image/code-maze.com/angular-material-form-validation/34-Success-Dialog.gif",q="/bookshelf/assets/image/code-maze.com/angular-material-form-validation/35-Error-Dialog.gif",M={},x={id:"frontmatter-title-관련",tabindex:"-1"},C={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"table-of-contents"},F={href:"https://code-maze.com/angular-material-series/",target:"_blank",rel:"noopener noreferrer"},D={class:"hint-container info"},j={href:"https://github.com/CodeMazeBlog/angular-material-series/tree/form-validation",target:"_blank",rel:"noopener noreferrer"},O={href:"https://code-maze.com/angular-series/",target:"_blank",rel:"noopener noreferrer"};function I(k,n){const i=l("VPCard"),p=l("router-link"),u=l("SiteInfo"),o=l("RouteLink"),c=l("VPIcon");return h(),g("div",null,[a("h1",x,[a("a",C,[a("span",null,b(k.$frontmatter.title)+" 관련",1)])]),t(i,r(d({title:"Angular.js > Article(s)",desc:"Article(s)",link:"/programming/js-angular/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),t(i,r(d({title:"C# > Article(s)",desc:"Article(s)",link:"/programming/cs/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),a("nav",A,[a("ul",null,[a("li",null,[t(p,{to:"#owner-component-and-the-routing-configuration"},{default:e(()=>n[0]||(n[0]=[s("Owner Component and the Routing Configuration")])),_:1,__:[0]})]),a("li",null,[t(p,{to:"#adding-angular-material-form-validation-and-input-elements"},{default:e(()=>n[1]||(n[1]=[s("Adding Angular Material Form Validation and Input Elements")])),_:1,__:[1]})]),a("li",null,[t(p,{to:"#adding-dialogs-and-shared-module"},{default:e(()=>n[2]||(n[2]=[s("Adding Dialogs and Shared Module")])),_:1,__:[2]}),a("ul",null,[a("li",null,[t(p,{to:"#shared-module"},{default:e(()=>n[3]||(n[3]=[s("Shared Module")])),_:1,__:[3]})]),a("li",null,[t(p,{to:"#dialogs-creation"},{default:e(()=>n[4]||(n[4]=[s("Dialogs Creation")])),_:1,__:[4]})]),a("li",null,[t(p,{to:"#success-dialog-modification"},{default:e(()=>n[5]||(n[5]=[s("Success Dialog Modification")])),_:1,__:[5]})]),a("li",null,[t(p,{to:"#error-dialog-modifications"},{default:e(()=>n[6]||(n[6]=[s("Error Dialog Modifications")])),_:1,__:[6]})])])]),a("li",null,[t(p,{to:"#conclusion"},{default:e(()=>n[7]||(n[7]=[s("Conclusion")])),_:1,__:[7]})])])]),n[30]||(n[30]=a("hr",null,null,-1)),t(u,{name:"Angular Material Form Validation, Input, Datepicker and Modal",desc:"In this article, you will learn how to implement Angular Material Form Validation by using input and datepicker components. We will talk about modals too.",url:"https://code-maze.com/angular-material-form-validation/",logo:"/assets/image/code-maze.com/favicon.png",preview:"/assets/image/angular-material-form-validation/banner.png"}),n[31]||(n[31]=a("p",null,"One of the most important components in Angular Material is the input component. Angular Material supports different types of input elements like color, date, email, month, number, password, etc. In this article, we are going to use the input components to create a Create-Owner component and use it to create a new Owner object in our database.",-1)),a("p",null,[n[9]||(n[9]=s("Of course, we will show how easy it is to apply Angular Material Form Validation with the material input components and also how to create dialogs to show the error or success messages. We won’t dive deeply into the validation logic because we already have a great article that covers that topic ")),t(o,{to:"/code-maze.com/net-core-web-development-part13.html"},{default:e(()=>n[8]||(n[8]=[s("Angular Form Validation.")])),_:1,__:[8]})]),a("ul",null,[a("li",null,[t(o,{to:"/code-maze.com/get-started-angular-material.html"},{default:e(()=>n[10]||(n[10]=[s("Getting started with Angular Material")])),_:1,__:[10]})]),n[13]||(n[13]=a("li",null,[a("a",{href:"/code-maze.com/angular-material-navigation",target:"_blank",rel:"noopener noreferrer"},"Navigation Menu - Sidebar, Main Navigation")],-1)),a("li",null,[t(o,{to:"/code-maze.com/angular-material-table.html"},{default:e(()=>n[11]||(n[11]=[s("Angular Material Table, Filter, Sort, Paging")])),_:1,__:[11]})]),a("li",null,[t(o,{to:"/code-maze.com/angular-material-error-details-pages.html"},{default:e(()=>n[12]||(n[12]=[s("Angular Material Progress Bar, Spinner, CheckBox, Card, Select, Expansion Panel")])),_:1,__:[12]})]),n[14]||(n[14]=a("li",null,"Material Inputs, DatePicker, Form Validation, Modals (Current article)",-1))]),a("p",null,[n[16]||(n[16]=s("For the complete navigation and all the basic instructions of the Angular Material series, check out: ")),a("a",F,[t(c,{icon:"fas fa-globe"}),n[15]||(n[15]=s("Introduction of the Angular Material series."))])]),a("div",D,[n[21]||(n[21]=a("p",{class:"hint-container-title"},"Info",-1)),a("p",null,[n[20]||(n[20]=s("The source code is available at GitHub ")),a("a",j,[n[17]||(n[17]=s("Angular Material Form Validation - Source Code (")),t(c,{icon:"iconfont icon-github"}),n[18]||(n[18]=a("code",null,"CodeMazeBlog/angular-material-series",-1)),n[19]||(n[19]=s(")"))])]),t(u,{name:"CodeMazeBlog/angular-material-series",desc:"This repository contains the code that accompanies Angular Material on Code Maze",url:"https://github.com/CodeMazeBlog/angular-material-series/tree/form-validation",logo:"https://avatars.githubusercontent.com/u/29179238?v=4",preview:"https://opengraph.githubassets.com/496c678481d836f8c8a60c1b96e09b30d5d3aacf99e265342ef73afcaf11239e/CodeMazeBlog/angular-material-series"})]),a("p",null,[n[23]||(n[23]=s("We strongly recommend reading our ")),a("a",O,[t(c,{icon:"fas fa-globe"}),n[22]||(n[22]=s("Angular Series"))]),n[24]||(n[24]=s(" prior to reading this article, if you want to restore your knowledge about that topic or to learn Angular development overall."))]),n[32]||(n[32]=v(`<p>Let’s start step by step.</p><hr><h2 id="owner-component-and-the-routing-configuration" tabindex="-1"><a class="header-anchor" href="#owner-component-and-the-routing-configuration"><span>Owner Component and the Routing Configuration</span></a></h2><p>To create our new component, we have to type a familiar command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng g component owner/owner-create <span class="token parameter variable">--skipTests</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Once we have our component created, let’s configure the routing part in the <code>owner-routing.module.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OwnerCreateComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../owner-create/owner-create.component&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> routes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;owners&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> OwnerListComponent <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;details/:id&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> OwnerDetailsComponent<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> OwnerCreateComponent <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, let’s modify the <code>owner-list.component.html</code> file, by adding a link that will point to the <code>owner-create</code> component:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">fxLayout</span> <span class="token attr-name">fxLayout.lt-md</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column wrap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutGap.gt-sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>250px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutGap.lt.md</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">matInput</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(keyup)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doFilter($event.target.value)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Filter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">[routerLink]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;/owner/create&#39;]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">mat-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Create Owner<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now we can inspect our result:</p><figure><img src="`+f+`" alt="create added to owner component - Angular Material Form Validation" tabindex="0" loading="lazy"><figcaption>create added to owner component - Angular Material Form Validation</figcaption></figure><p>And if we click on the <code>Create Owner</code> button, we are going to be directed to the <code>owner-create</code> component for sure.</p><hr><h2 id="adding-angular-material-form-validation-and-input-elements" tabindex="-1"><a class="header-anchor" href="#adding-angular-material-form-validation-and-input-elements"><span>Adding Angular Material Form Validation and Input Elements</span></a></h2><p>Before we start adding input fields, we need to import one more module into the <code>owner.module.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/forms&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    …<span class="token punctuation">,</span></span>
<span class="line">    ReactiveFormsModule</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We need this module for the reactive form validation.</p><p>In addition to input components, we are going to use the datepicker material component and for that, we need the <code>MatDatepickerModule</code> and <code>MatNativeDateModule</code> inside the <code>material.module.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatDatepickerModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/datepicker&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatNativeDateModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatDatepickerModule<span class="token punctuation">,</span></span>
<span class="line">    MatNativeDateModule</span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatDatepickerModule<span class="token punctuation">,</span></span>
<span class="line">    MatNativeDateModule</span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After all these imports and registrations, we can start with the <code>owner-create.component.html</code> file modification:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">fxLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row wrap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card</span> <span class="token attr-name">fxFlex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxFlex.xs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card-title</span><span class="token punctuation">&gt;</span></span>Create a new owner<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card-title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        </span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>mat-card-content</code> and <code>mat-card-actions</code> elements need to be wrapped with the form tag:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">[formGroup]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ownerForm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>off<span class="token punctuation">&quot;</span></span> <span class="token attr-name">novalidate</span> <span class="token attr-name">(ngSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createOwner(ownerForm.value)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column wrap<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">fxLayoutAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutGap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then inside the <code>mat-card-content</code> tag, we are going to add the following code:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">matInput</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Owner&#39;s name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-hint</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>end<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Not more then 60 characters long.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-hint</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-error</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasError(&#39;name&#39;, &#39;required&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Name is required<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-error</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-error</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasError(&#39;name&#39;, &#39;maxlength&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>You have more than 60 characters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-error</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">matInput</span> <span class="token attr-name">[matDatepicker]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>picker<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Choose a date of birth<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dateOfBirth<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dateOfBirth<span class="token punctuation">&quot;</span></span> </span>
<span class="line">      <span class="token attr-name">readonly</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>picker.open()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-datepicker-toggle</span> <span class="token attr-name">matSuffix</span> <span class="token attr-name">[for]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>picker<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-datepicker-toggle</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-datepicker</span> <span class="token attr-name">#picker</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-datepicker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">matInput</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Owner&#39;s address<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-hint</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>end<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Not more then 100 characters long.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-hint</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-error</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasError(&#39;address&#39;, &#39;required&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Address is required<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-error</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-error</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasError(&#39;address&#39;, &#39;maxlength&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>You have more than 100 characters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-error</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-form-field</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, let’s modify the <code>mat-card-actions</code> element:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-card-actions</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">mat-raised-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!ownerForm.valid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Create<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">mat-raised-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCancel()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-card-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We have completed the HTML part, and we are ready to modify the <code>owner-create.component.ts</code> file. But before we do that, we are going to create a new interface <code>OwnerForCreation</code>:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">OwnerForCreation</span> <span class="token punctuation">{</span></span>
<span class="line">    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    dateOfBirth<span class="token operator">:</span> Date<span class="token punctuation">;</span></span>
<span class="line">    address<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Right after that, we are going to modify our <code>.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> RepositoryService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./../../shared/repository.service&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup<span class="token punctuation">,</span> Validators <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/forms&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Location <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OwnerForCreation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../_interface/ownerForCreation.model&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  selector<span class="token operator">:</span> <span class="token string">&#39;app-owner-create&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./owner-create.component.html&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./owner-create.component.css&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">OwnerCreateComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> ownerForm<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> location<span class="token operator">:</span> Location<span class="token punctuation">,</span> <span class="token keyword">private</span> repository<span class="token operator">:</span> RepositoryService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>ownerForm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      dateOfBirth<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      address<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">hasError</span> <span class="token operator">=</span> <span class="token punctuation">(</span>controlName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> errorName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ownerForm<span class="token punctuation">.</span>controls<span class="token punctuation">[</span>controlName<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">hasError</span><span class="token punctuation">(</span>errorName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">onCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">createOwner</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ownerFormValue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ownerForm<span class="token punctuation">.</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeOwnerCreation</span><span class="token punctuation">(</span>ownerFormValue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token function-variable function">executeOwnerCreation</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ownerFormValue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> owner<span class="token operator">:</span> OwnerForCreation <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> ownerFormValue<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">      dateOfBirth<span class="token operator">:</span> ownerFormValue<span class="token punctuation">.</span>dateOfBirth<span class="token punctuation">,</span></span>
<span class="line">      address<span class="token operator">:</span> ownerFormValue<span class="token punctuation">.</span>address</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">    <span class="token keyword">let</span> apiUrl <span class="token operator">=</span> <span class="token string">&#39;api/owner&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>apiUrl<span class="token punctuation">,</span> owner<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//this is temporary, until we create our dialogs</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">(</span>error <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//temporary as well</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The last thing we need to do is to modify the <code>.css</code> file:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">mat-form-field</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">mat-card-title</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Excellent. We have implemented Angular Material Form Validation in couple of steps and now we can check the result:</p><figure><img src="`+y+`" alt="create component finished - Angular Material Form Validation" tabindex="0" loading="lazy"><figcaption>create component finished - Angular Material Form Validation</figcaption></figure><hr><h2 id="adding-dialogs-and-shared-module" tabindex="-1"><a class="header-anchor" href="#adding-dialogs-and-shared-module"><span>Adding Dialogs and Shared Module</span></a></h2><p>We have finished the owner component creation but we need to inform a user about the creation result, whether it was successful or not. For that purpose, we are going to create two dialog components. One for the success message and another one for the error message.</p><h3 id="shared-module" tabindex="-1"><a class="header-anchor" href="#shared-module"><span>Shared Module</span></a></h3><p>Before we do that, we are going to create a shared module to register our dialog components and to register modules that are already registered inside the app module and owner module as well.</p><p>So, let’s create a shared module first:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng g module shared</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Now, let’s modify the <code>shared.module.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> CommonModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MaterialModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../material/material.module&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FlexLayoutModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/flex-layout&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    CommonModule<span class="token punctuation">,</span></span>
<span class="line">    MaterialModule<span class="token punctuation">,</span></span>
<span class="line">    FlexLayoutModule<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MaterialModule<span class="token punctuation">,</span></span>
<span class="line">    FlexLayoutModule</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SharedModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>Because we now have the FlexLayoutModule and MaterialModule inside of the shared module file, we don’t need them anymore in the app and owner module files. Therefore, we can remove the FlexLayoutModule and MaterialModule imports from the app and owner module files and just import the SharedModule in both mentioned module files (app and owner).</p></div><h3 id="dialogs-creation" tabindex="-1"><a class="header-anchor" href="#dialogs-creation"><span>Dialogs Creation</span></a></h3><p>To continue, we are going to create our dialog components:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">ng g component shared/dialogs/success-dialog <span class="token parameter variable">--skipTests</span></span>
<span class="line">ng g component shared/dialogs/error-dialog <span class="token parameter variable">--skipTests</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>These modules are imported automatically in the <code>shared.module.ts</code> file, but we need to export them as well. Moreover, we need to place the dialog components inside the <code>entryComponents</code> array because we are not going to use routing nor app selector to call these components. We are going to use them as a template reference for the dialog’s <code>open()</code> function and thus the need for the <code>entryComponents</code> array:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MaterialModule<span class="token punctuation">,</span></span>
<span class="line">    FlexLayoutModule<span class="token punctuation">,</span></span>
<span class="line">    SuccessDialogComponent<span class="token punctuation">,</span></span>
<span class="line">    ErrorDialogComponent</span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  entryComponents<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    SuccessDialogComponent<span class="token punctuation">,</span></span>
<span class="line">    ErrorDialogComponent</span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="success-dialog-modification" tabindex="-1"><a class="header-anchor" href="#success-dialog-modification"><span>Success Dialog Modification</span></a></h3><p>Let’s open the <code>success-dialog.component.html</code> file and modify it:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">fxLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">mat-dialog-title</span><span class="token punctuation">&gt;</span></span>Success message<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-dialog-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Action completed successfully<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-dialog-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-dialog-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">mat-raised-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[mat-dialog-close]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-dialog-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>One important thing to notice here is a usage of the <code>mat-dialog-close</code> attribute which instructs this button to close the dialog and submits a result (true in this case). To fetch this result, we need to subscribe to the <code>afterClosed()</code> function. We are going to do that a bit later.</p><p>We haven’t used the <code>mat-dialog</code> elements in our project, therefore we need to register it in the material module:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatDialogModule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/dialog&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  declarations<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  imports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatDialogModule<span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  exports<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    MatDialogModule<span class="token punctuation">,</span></span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, to use this success dialog, we are going to modify the <code>owner-create.component.ts</code> file. Our dialog needs to have a configuration, and we are going to provide that:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatDialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/dialog&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> dialogConfig<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">location</span><span class="token operator">:</span> Location<span class="token punctuation">,</span> <span class="token keyword">private</span> <span class="token literal-property property">repository</span><span class="token operator">:</span> RepositoryService<span class="token punctuation">,</span> <span class="token keyword">private</span> <span class="token literal-property property">dialog</span><span class="token operator">:</span> MatDialog</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>ownerForm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">dateOfBirth</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dialogConfig <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;200px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;400px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">disableClose</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To start our success dialog, we need to import <code>MatDialog</code> and to create a private variable in a constructor of the same type.</p><p>The <code>dialogConfig</code> object consists of several properties that describe the height, width, disable close dialog when clicking outside of the dialog, and passing data to the dialog. Because we don’t want to pass anything to the success dialog, we have left an empty <code>data</code> object.</p><p>Now, let’s modify the subscribe part of the component, to call this dialog:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> apiUrl <span class="token operator">=</span> <span class="token string">&#39;api/owner&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>apiUrl<span class="token punctuation">,</span> owner<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> dialogRef <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dialog<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>SuccessDialogComponent<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dialogConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//we are subscribing on the [mat-dialog-close] attribute as soon as we click on the dialog button</span></span>
<span class="line">    dialogRef<span class="token punctuation">.</span><span class="token function">afterClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">//temporary as well</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is the result:</p><figure><img src="`+w+`" alt="success dialog" tabindex="0" loading="lazy"><figcaption>success dialog</figcaption></figure><h3 id="error-dialog-modifications" tabindex="-1"><a class="header-anchor" href="#error-dialog-modifications"><span>Error Dialog Modifications</span></a></h3><p>We are going to send an error message to the error dialog and we don’t want to emit any event when we click the dialog button, therefore the Error dialog implementation will be a little different.</p><p>Let’s start by modifying the <code>error-dialog.component.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit<span class="token punctuation">,</span> Inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">MAT_DIALOG_DATA</span><span class="token punctuation">,</span> MatDialogRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/dialog&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  selector<span class="token operator">:</span> <span class="token string">&#39;app-error-dialog&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  templateUrl<span class="token operator">:</span> <span class="token string">&#39;./error-dialog.component.html&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./error-dialog.component.css&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ErrorDialogComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> dialogRef<span class="token operator">:</span> MatDialogRef<span class="token operator">&lt;</span> ErrorDialogComponent<span class="token operator">&gt;</span> <span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Inject</span></span><span class="token punctuation">(</span><span class="token constant">MAT_DIALOG_DATA</span><span class="token punctuation">)</span> <span class="token keyword">public</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function-variable function">closeDialog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dialogRef<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>dialogRef</code> variable is here to help us manipulate our opened dialog and the <code>data</code> variable is here to accept any information passed to this component. Of course, we must use the <code>MAT_DIALOG_DATA</code> injection token to enable data acceptance from other components.</p><p>Now, we have to modify the <code>error-dialog.component.html</code> file:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">fxLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>column<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fxLayoutAlign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">mat-dialog-title</span><span class="token punctuation">&gt;</span></span>Error message<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-dialog-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{data.errorMessage}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-dialog-content</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mat-dialog-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">mat-raised-button</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>closeDialog()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mat-dialog-actions</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Having that done, let’s modify the <code>error-handler.service</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// ... Other imports</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ErrorDialogComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./dialogs/error-dialog/error-dialog.component&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MatDialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/material/dialog&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  providedIn<span class="token operator">:</span> <span class="token string">&#39;root&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ErrorHandlerService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> errorMessage<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">public</span> dialogConfig<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> router<span class="token operator">:</span> Router<span class="token punctuation">,</span> <span class="token keyword">private</span> dialog<span class="token operator">:</span> MatDialog<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// ... Other code</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">handleOtherError</span><span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createErrorMessage</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dialogConfig<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;errorMessage&#39;</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errorMessage <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dialog<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>ErrorDialogComponent<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dialogConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And finally, let’s modify the <code>owner-create.component.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ErrorHandlerService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../shared/error-handler.service&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> location<span class="token operator">:</span> Location<span class="token punctuation">,</span> <span class="token keyword">private</span> repository<span class="token operator">:</span> RepositoryService<span class="token punctuation">,</span> <span class="token keyword">private</span> dialog<span class="token operator">:</span> MatDialog<span class="token punctuation">,</span> <span class="token keyword">private</span> errorService<span class="token operator">:</span> ErrorHandlerService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>repository<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>apiUrl<span class="token punctuation">,</span> owner<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> dialogRef <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dialog<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>SuccessDialogComponent<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dialogConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//we are subscribing on the [mat-dialog-close] attribute as soon as we click on the dialog button</span></span>
<span class="line">    dialogRef<span class="token punctuation">.</span><span class="token function">afterClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>result <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">(</span>error <span class="token operator">=&gt;</span>  <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>errorService<span class="token punctuation">.</span>dialogConfig <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>dialogConfig <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>errorService<span class="token punctuation">.</span><span class="token function">handleError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And that is all. Now, we can check the result:</p><figure><img src="`+q+'" alt="error dialog completed" tabindex="0" loading="lazy"><figcaption>error dialog completed</figcaption></figure><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>Excellent.</p><p>We have created a lot of features and covered a lot of material components. We have left out the update and delete functionalities, but this is something that you could do on your own now as an exercise.</p>',87)),a("p",null,[n[27]||(n[27]=s("In all the previous articles, we have covered all the material related logic we need for the Update and Delete actions (Forms, Validations, Input Fields, Dialogs, etc) and in ")),t(o,{to:"/code-maze.com/net-core-web-development-part14.html"},{default:e(()=>n[25]||(n[25]=[s("Angular PUT Actions")])),_:1,__:[25]}),n[28]||(n[28]=s(" and ")),t(o,{to:"/code-maze.com/net-core-web-development-part15.html"},{default:e(()=>n[26]||(n[26]=[s("Angular Delete Actions")])),_:1,__:[26]}),n[29]||(n[29]=s(", we implemented all the required Angular related logic."))]),n[33]||(n[33]=a("p",null,"Of course, if you have any problem creating new functionalities, we have provided the source code for that as well.",-1)),n[34]||(n[34]=a("p",null,"So, feel free to read them, if you haven’t already, and make your own Update and Delete parts of this project.",-1))])}const S=m(M,[["render",I]]),z=JSON.parse('{"path":"/code-maze.com/angular-material-form-validation.html","title":"Angular Material Form Validation, Input, Datepicker and Modal","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Angular Material Form Validation, Input, Datepicker and Modal","description":"Article(s) > Angular Material Form Validation, Input, Datepicker and Modal","icon":"fa-brands fa-angular","category":["Node.js","Angular.js","C#","Article(s)"],"tag":["blog","code-maze.com","csharp","node","nodejs","node-js","angular","angularjs","angular-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Angular Material Form Validation, Input, Datepicker and Modal\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-form-validation/31-Owner-List-Added-Create-Link.png\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-form-validation/32-Owner-Create-Finished.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-form-validation/34-Success-Dialog.gif\\",\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-form-validation/35-Error-Dialog.gif\\"],\\"datePublished\\":\\"2021-06-23T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/code-maze.com/angular-material-form-validation.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Angular Material Form Validation, Input, Datepicker and Modal"}],["meta",{"property":"og:description","content":"Article(s) > Angular Material Form Validation, Input, Datepicker and Modal"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-form-validation/banner.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/angular-material-form-validation/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Angular Material Form Validation, Input, Datepicker and Modal"}],["meta",{"property":"article:tag","content":"angular-js"}],["meta",{"property":"article:tag","content":"angularjs"}],["meta",{"property":"article:tag","content":"angular"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:tag","content":"code-maze.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2021-06-23T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Angular Material Form Validation, Input, Datepicker and Modal"},{"property":"og:description","content":"Angular Material Form Validation, Input, Datepicker and Modal"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/code-maze.com/angular-material-form-validation.html"}]],"prev":"/programming/js-angular/articles/README.md","date":"2021-06-23T00:00:00.000Z","isOriginal":false,"cover":"/assets/image/code-maze.com/angular-material-form-validation/banner.png"},"git":{},"readingTime":{"minutes":8.21,"words":2463},"filePathRelative":"code-maze.com/angular-material-form-validation.md"}');export{S as comp,z as data};
