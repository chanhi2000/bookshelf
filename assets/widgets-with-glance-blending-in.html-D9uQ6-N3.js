import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as e,f as a,b as i,a as p,t as h,n as c,g as d,e as t,r as l,o as v}from"./app-BVguHYKu.js";const k={},b={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},w={href:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee",target:"_blank",rel:"noopener noreferrer"},y={href:"https://medium.com/proandroiddev/its-time-for-an-app-icon-makeover-107ccbb506eb",target:"_blank",rel:"noopener noreferrer"},G={class:"hint-container tip"},M={href:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee",target:"_blank",rel:"noopener noreferrer"},T={href:"https://developer.android.com/develop/ui/compose/glance/theme",target:"_blank",rel:"noopener noreferrer"},B={href:"https://developer.android.com/develop/ui/compose/designsystems/material3",target:"_blank",rel:"noopener noreferrer"},A={href:"https://android.com/intl/en_au/android-12/#a12-color-reimagined",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/KatieBarnett/MotivateMe/tree/workshop/Activity-11",target:"_blank",rel:"noopener noreferrer"},W={href:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee",target:"_blank",rel:"noopener noreferrer"},C={class:"hint-container info"},P={href:"https://proandroiddev.com/widgets-with-glance-blending-in-ae1e52a6cb6f",target:"_blank",rel:"noopener noreferrer"};function V(u,n){const r=l("VPCard"),o=l("SiteInfo"),s=l("VPIcon");return v(),g("div",null,[e("h1",b,[e("a",f,[e("span",null,h(u.$frontmatter.title)+" 관련",1)])]),a(r,c(d({title:"Android > Article(s)",desc:"Article(s)",link:"/programming/java-android/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n[33]||(n[33]=e("nav",{class:"table-of-contents"},[e("ul")],-1)),n[34]||(n[34]=e("hr",null,null,-1)),a(o,{name:"Widgets with Glance: Blending in",desc:"Use dynamic colors from your wallpaper in your Widget GlanceTheme",url:"https://droidcon.com/widgets-with-glance-blending-in",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/11/1_cvh9AVHBSgPV4h8PggKlvw.webp"}),n[35]||(n[35]=e("p",null,[e("strong",null,"Use dynamic colors from your wallpaper in your Widget GlanceTheme")],-1)),e("p",null,[e("a",w,[n[0]||(n[0]=t("If you have gone to the effort (")),a(s,{icon:"fa-brands fa-medium"}),n[1]||(n[1]=e("code",null,"proadnroiddev",-1)),n[2]||(n[2]=t(")"))]),n[6]||(n[6]=t("to provide")),e("a",y,[n[3]||(n[3]=t("themed app icons (")),a(s,{icon:"fa-brands fa-medium"}),n[4]||(n[4]=e("code",null,"proadnroiddev",-1)),n[5]||(n[5]=t(")"))]),n[7]||(n[7]=t("for your Android app, you have allowed the user to have a beautiful and consistent home screen aesthetic. Why should app widgets be any different? With Jetpack Compose Glance, you can easily theme your widgets to use dynamic colors from the wallpaper (when supported) and fit right in with the app icons."))]),e("div",G,[n[12]||(n[12]=e("p",{class:"hint-container-title"},"Tips",-1)),e("p",null,[n[11]||(n[11]=t("Do you want your widget to stand out from the background with custom colours depending on the wallpaper? Check out my other article* ")),e("a",M,[e("em",null,[n[8]||(n[8]=t("Widgets with Glance: Standing out (")),a(s,{icon:"fa-brands fa-medium"}),n[9]||(n[9]=e("code",null,"proadnroiddev",-1)),n[10]||(n[10]=t(")"))])])]),a(o,{name:"Widgets with Glance: Standing out",desc:"Detect wallpaper colors so transparent widgets do not get lost in the background",url:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*mky0GpsMOkUNapd6diKK2A.jpeg"})]),n[36]||(n[36]=e("p",null,". . .",-1)),e("p",null,[n[15]||(n[15]=t("If you haven’t looked into")),e("a",T,[a(s,{icon:"fa-brands fa-android"}),n[13]||(n[13]=t("Glance theming"))]),n[16]||(n[16]=t(", it is pretty easy to set up. It is just the same as")),e("a",B,[a(s,{icon:"fa-brands fa-android"}),n[14]||(n[14]=t("Material Design 3"))]),n[17]||(n[17]=t("theming where you can provide a custom set of colors to style your widget to match your app branding."))]),n[37]||(n[37]=i(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="MotivateMeGlanceTheme.kt"><span>MotivateMeGlanceTheme.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">object</span> MotivateMeGlanceColorScheme <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">val</span> colors <span class="token operator">=</span> <span class="token function">ColorProviders</span><span class="token punctuation">(</span></span>
<span class="line">       light <span class="token operator">=</span> lightScheme<span class="token punctuation">,</span></span>
<span class="line">       dark <span class="token operator">=</span> darkScheme</span>
<span class="line">   <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">MotivateMeGlanceTheme</span><span class="token punctuation">(</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">GlanceTheme</span><span class="token punctuation">(</span>colors <span class="token operator">=</span> MotivateMeGlanceColorScheme<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      content<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> QuoteWidget <span class="token operator">:</span> <span class="token function">GlanceAppWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line">  <span class="token keyword">override</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">provideGlance</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span> id<span class="token operator">:</span> GlanceId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    provideContent <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">MotivateMeGlanceTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token function">WidgetContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),p(" @include: https://gist.github.com/KatieBarnett/e6ead24c8afb4cb19c1089613bc092ee/raw/54ccca785faedfae9e16fa4814d9d2fdfdfa6f56/MotivateMeGlanceTheme.kt "),n[38]||(n[38]=i("<p>In this basic set up, we have the app color scheme<code>lightScheme</code>and<code>darkScheme</code>provided as<code>ColorProviders</code>(using<code>androidx.glance:glance-material3</code>) to<code>GlanceTheme</code>which will set the custom color scheme for the widget.</p><p>To use this, wrap the content by the<code>GlanceTheme</code>and the widget will use the app branding.</p><p>Now, this would look a lot better on this background with coordinating colors rather than the purple app branding which clashes with this particular wallpaper.</p>",3)),e("p",null,[n[19]||(n[19]=t("For this, we need to use the dynamic system color theming available for some devices (manufacturer depending) with")),e("a",A,[a(s,{icon:"fa-brands fa-android"}),n[18]||(n[18]=t("Android 12 and above"))]),n[20]||(n[20]=t(". If you haven’t yet played with the system theming, you just need to long press on the wallpaper and select ‘Wallpaper & style’. Here you can select a color theme to match your wallpaper or personal preference."))]),n[39]||(n[39]=i(`<figure><img src="https://droidcon.com/wp-content/uploads/2024/11/2-1.webp" alt="This is what sets the colors for your themed app icons!" tabindex="0" loading="lazy"><figcaption>This is what sets the colors for your themed app icons!</figcaption></figure><p>To use this color theme, just update your<code>GlanceTheme</code>definition to use<code>GlanceTheme.colors</code>for supported versions of Android:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MotivateMeGlanceTheme.kt"><span>MotivateMeGlanceTheme.kt</span></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">MotivateMeGlanceTheme</span><span class="token punctuation">(</span></span>
<span class="line">    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">GlanceTheme</span><span class="token punctuation">(</span></span>
<span class="line">        colors <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">&gt;=</span> Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>S<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            GlanceTheme<span class="token punctuation">.</span>colors</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            MotivateMeGlanceColorScheme<span class="token punctuation">.</span>colors</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        content <span class="token operator">=</span> <span class="token punctuation">{</span> content<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),p(" @include: https://gist.github.com/KatieBarnett/27c0f401e42847e475d7f561ddb925f6/raw/a7acff565420183a3f7c47a5d4678a066daf11ab/MotivateMeGlanceTheme.kt "),n[40]||(n[40]=i('<p>For non supported devices, the app branding will be used. Now the widget blends nicely with the background without the jarring purple theming.</p><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/3-1.webp" alt="Not quite camouflage, but better." tabindex="0" loading="lazy"><figcaption>Not quite camouflage, but better.</figcaption></figure><p>You may notice that it still doesn’t match the themed app icons. In the example above the background is using<code>GlanceTheme.colors.background</code>for the background and<code>GlanceTheme.colors.onBackground</code>for the foreground text and icon. If you want to match the themed app icons for your widget then use<code>GlanceTheme.colors.widgetBackground</code>for the background and<code>GlanceTheme.colors.primary</code> for the foreground.</p><figure><img src="https://droidcon.com/wp-content/uploads/2024/11/4-1-1024x614.webp" alt="From standing out to blending in. Perfect!" tabindex="0" loading="lazy"><figcaption>From standing out to blending in. Perfect!</figcaption></figure>',4)),e("p",null,[n[24]||(n[24]=t("To see a full example, see my")),e("a",S,[n[21]||(n[21]=t("sample widget app (")),a(s,{icon:"iconfont icon-github"}),n[22]||(n[22]=e("code",null,"KatieBarnett/MotivateMe",-1)),n[23]||(n[23]=t(")"))]),n[25]||(n[25]=t(":"))]),a(o,{name:"KatieBarnett/MotivateMe",desc:"Sample app for Widget Fever: A Hands-On Workshop with Jetpack Compose Glance & Gemini",url:"https://github.com/KatieBarnett/MotivateMe/tree/workshop/Activity-11",logo:"https://github.githubassets.com/favicons/favicon-dark.svg",preview:"https://opengraph.githubassets.com/e48744e1af1e9e66eb80f2b5d2e02dc223574c5da2a50758e30a7af1b5bb0d3f/KatieBarnett/MotivateMe"}),e("p",null,[n[29]||(n[29]=t("Do you want your widget to stand out from the background with custom colours depending on the wallpaper? Check out my other article")),e("a",W,[n[26]||(n[26]=t("Widgets with Glance: Standing out (")),a(s,{icon:"fa-brands fa-medium"}),n[27]||(n[27]=e("code",null,"proandroiddev",-1)),n[28]||(n[28]=t(")"))])]),a(o,{name:"Widgets with Glance: Standing out",desc:"Detect wallpaper colors so transparent widgets do not get lost in the background",url:"https://proandroiddev.com/widgets-with-glance-standing-out-33834eee2dee/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*mky0GpsMOkUNapd6diKK2A.jpeg"}),e("div",C,[n[32]||(n[32]=e("p",{class:"hint-container-title"},"Info",-1)),e("p",null,[n[31]||(n[31]=t("this article is previously published on ")),e("a",P,[a(s,{icon:"fa-brands fa-medium"}),n[30]||(n[30]=t("proandroiddev.com"))])]),a(o,{name:"Widgets with Glance: Blending in",desc:"Use dynamic colors from your wallpaper in your Widget GlanceTheme",url:"https://proandroiddev.com/widgets-with-glance-blending-in-ae1e52a6cb6f/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1200/1*1RKuGEZI9txSA9Vnjatzew.jpeg"})]),p(" TODO: add ARTICLE CARD "),a(r,c(d({title:"Widgets with Glance: Blending in",desc:"Use dynamic colors from your wallpaper in your Widget GlanceTheme",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/widgets-with-glance-blending-in.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const j=m(k,[["render",V]]),I=JSON.parse('{"path":"/droidcon.com/widgets-with-glance-blending-in.html","title":"Widgets with Glance: Blending in","lang":"en-US","frontmatter":{"lang":"en-US","title":"Widgets with Glance: Blending in","description":"Article(s) > Widgets with Glance: Blending in","icon":"iconfont icon-jetpack-compose","category":["Java","Kotlin","Android","Jetpack Compose","Article(s)"],"tag":["blog","droidcon.com","java","kotlin","android","jetpack-compse"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Widgets with Glance: Blending in\\",\\"image\\":[\\"https://droidcon.com/wp-content/uploads/2024/11/2-1.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/3-1.webp\\",\\"https://droidcon.com/wp-content/uploads/2024/11/4-1-1024x614.webp\\"],\\"datePublished\\":\\"2024-11-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Katie Barnett\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/widgets-with-glance-blending-in.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Widgets with Glance: Blending in"}],["meta",{"property":"og:description","content":"Article(s) > Widgets with Glance: Blending in"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/11/1_cvh9AVHBSgPV4h8PggKlvw.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/11/1_cvh9AVHBSgPV4h8PggKlvw.webp"}],["meta",{"name":"twitter:image:alt","content":"Widgets with Glance: Blending in"}],["meta",{"property":"article:author","content":"Katie Barnett"}],["meta",{"property":"article:tag","content":"jetpack-compse"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-20T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Widgets with Glance: Blending in"},{"property":"og:description","content":"Widgets with Glance: Blending in"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/widgets-with-glance-blending-in.html"}]],"prev":"/programming/java-android/articles/README.md","date":"2024-11-20T00:00:00.000Z","isOriginal":false,"author":"Katie Barnett","cover":"https://droidcon.com/wp-content/uploads/2024/11/1_cvh9AVHBSgPV4h8PggKlvw.webp"},"git":{},"readingTime":{"minutes":3.29,"words":986},"filePathRelative":"droidcon.com/widgets-with-glance-blending-in.md","copyright":{"author":"Katie Barnett"}}');export{j as comp,I as data};
