import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as y,d as n,f as a,b as p,a as k,t as x,n as m,g,w as t,e,r as u,o as w}from"./app-BVguHYKu.js";const P={},U={id:"frontmatter-title-관련",tabindex:"-1"},R={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"table-of-contents"};function C(f,s){const c=u("VPCard"),o=u("router-link"),h=u("SiteInfo"),d=u("RouteLink"),i=u("VPIcon"),b=u("CodeTabs");return w(),y("div",null,[n("h1",U,[n("a",R,[n("span",null,x(f.$frontmatter.title)+" 관련",1)])]),a(c,m(g({title:"Linux - Fedora > Article(s)",desc:"Article(s)",link:"/devops/linux-fedora/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),a(c,m(g({title:"Linux - Debian > Article(s)",desc:"Article(s)",link:"/devops/linux-debian/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",A,[n("ul",null,[n("li",null,[a(o,{to:"#_1-identify-resource-hungry-processes"},{default:t(()=>s[0]||(s[0]=[e("1. Identify Resource Hungry Processes")])),_:1,__:[0]}),n("ul",null,[n("li",null,[a(o,{to:"#a-using-top-command"},{default:t(()=>s[1]||(s[1]=[e("a. Using top Command")])),_:1,__:[1]})]),n("li",null,[a(o,{to:"#b-using-htop-command"},{default:t(()=>s[2]||(s[2]=[e("b. Using htop Command")])),_:1,__:[2]})]),n("li",null,[a(o,{to:"#c-using-ps-command"},{default:t(()=>s[3]||(s[3]=[e("c. Using ps Command")])),_:1,__:[3]})])])]),n("li",null,[a(o,{to:"#_2-kill-unnecessary-processes"},{default:t(()=>s[4]||(s[4]=[e("2. Kill Unnecessary Processes")])),_:1,__:[4]})]),n("li",null,[a(o,{to:"#_3-optimize-startup-applications"},{default:t(()=>s[5]||(s[5]=[e("3. Optimize Startup Applications")])),_:1,__:[5]}),n("ul",null,[n("li",null,[a(o,{to:"#a-using-systemctl-command"},{default:t(()=>s[6]||(s[6]=[e("a. Using systemctl Command")])),_:1,__:[6]})]),n("li",null,[a(o,{to:"#b-using-gui-tools"},{default:t(()=>s[7]||(s[7]=[e("b. Using GUI Tools")])),_:1,__:[7]})])])]),n("li",null,[a(o,{to:"#_4-reduce-swappiness-optimize-swap-usage"},{default:t(()=>s[8]||(s[8]=[e("4. Reduce Swappiness (Optimize Swap Usage)")])),_:1,__:[8]})]),n("li",null,[a(o,{to:"#_5-use-lightweight-desktop-alternatives"},{default:t(()=>s[9]||(s[9]=[e("5. Use Lightweight Desktop Alternatives")])),_:1,__:[9]}),n("ul",null,[n("li",null,[a(o,{to:"#a-desktop-environments"},{default:t(()=>s[10]||(s[10]=[e("a. Desktop Environments")])),_:1,__:[10]})]),n("li",null,[a(o,{to:"#b-applications"},{default:t(()=>s[11]||(s[11]=[e("b. Applications")])),_:1,__:[11]})])])]),n("li",null,[a(o,{to:"#_6-clear-cache-and-buffers"},{default:t(()=>s[12]||(s[12]=[e("6. Clear Cache and Buffers")])),_:1,__:[12]})]),n("li",null,[a(o,{to:"#_7-optimize-kernel-parameters"},{default:t(()=>s[13]||(s[13]=[e("7. Optimize Kernel Parameters")])),_:1,__:[13]})]),n("li",null,[a(o,{to:"#_8-reduce-memory-usage-with-zram"},{default:t(()=>s[14]||(s[14]=[e("8. Reduce Memory Usage with ZRAM")])),_:1,__:[14]})]),n("li",null,[a(o,{to:"#_9-limit-cpu-usage-of-processes"},{default:t(()=>s[15]||(s[15]=[e("9. Limit CPU Usage of Processes")])),_:1,__:[15]})]),n("li",null,[a(o,{to:"#_10-regularly-update-your-system"},{default:t(()=>s[16]||(s[16]=[e("10. Regularly Update Your System")])),_:1,__:[16]})]),n("li",null,[a(o,{to:"#troubleshooting-tips"},{default:t(()=>s[17]||(s[17]=[e("Troubleshooting Tips")])),_:1,__:[17]})]),n("li",null,[a(o,{to:"#conclusion"},{default:t(()=>s[18]||(s[18]=[e("Conclusion")])),_:1,__:[18]})])])]),s[84]||(s[84]=n("hr",null,null,-1)),a(h,{name:"How to Reduce RAM & CPU Usage on Linux",desc:"In this guide, we’ll explore practical methods to reduce RAM and CPU usage on Linux, ensuring your system runs smoothly and efficiently.",url:"https://tecmint.com/reduce-ram-cpu-usage-on-linux",logo:"https://tecmint.com/wp-content/uploads/2020/07/favicon.ico",preview:"https://tecmint.com/wp-content/uploads/2013/08/Reduce-RAM-CPU-Usage-on-Linux.png"}),n("p",null,[a(d,{to:"/tecmint.com/what-is-linux.html"},{default:t(()=>s[19]||(s[19]=[n("strong",null,"Linux",-1)])),_:1,__:[19]}),s[20]||(s[20]=e(" is a powerful and efficient operating system, but high RAM and CPU usage can degrade performance, slow down applications, and even cause system crashes when you’re running a server, workstation, or embedded system, and optimizing resource usage is essential for smooth operation."))]),n("p",null,[s[22]||(s[22]=e("In this guide, we’ll explore practical methods to reduce RAM and CPU usage on Linux. We’ll cover ")),a(d,{to:"/tecmint.com/command-line-tools-to-monitor-linux-performance.html"},{default:t(()=>s[21]||(s[21]=[n("strong",null,"monitoring tools",-1)])),_:1,__:[21]}),s[23]||(s[23]=e(", process management, kernel tweaks, and system optimization techniques to keep your system running efficiently."))]),s[85]||(s[85]=n("hr",null,null,-1)),s[86]||(s[86]=n("h2",{id:"_1-identify-resource-hungry-processes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-identify-resource-hungry-processes"},[n("span",null,"1. Identify Resource Hungry Processes")])],-1)),s[87]||(s[87]=n("p",null,"The first step in reducing RAM and CPU usage is identifying which processes are consuming the most resources by utilizing several command-line tools:",-1)),s[88]||(s[88]=n("h3",{id:"a-using-top-command",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#a-using-top-command"},[n("span",null,"a. Using top Command")])],-1)),n("p",null,[s[25]||(s[25]=e("The ")),a(d,{to:"/tecmint.com/12-top-command-examples-in-linux.html"},{default:t(()=>s[24]||(s[24]=[n("strong",null,"top command",-1)])),_:1,__:[24]}),s[26]||(s[26]=e(" provides a real-time view of system processes, including CPU and memory usage."))]),s[89]||(s[89]=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">top</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Press <kbd>P</kbd> to sort processes by CPU usage.</li><li>Press <kbd>M</kbd> to sort processes by memory usage.</li><li>Look for processes consuming excessive resources and note their Process ID (<strong>PID</strong>).</li></ul><figure><img src="https://tecmint.com/wp-content/uploads/2013/08/Real-Time-System-Process-Monitoring.png" alt="Real-Time System Process Monitoring" tabindex="0" loading="lazy"><figcaption>Real-Time System Process Monitoring</figcaption></figure><p>Real-Time System Process Monitoring</p><h3 id="b-using-htop-command" tabindex="-1"><a class="header-anchor" href="#b-using-htop-command"><span>b. Using htop Command</span></a></h3>`,5)),n("p",null,[a(d,{to:"/tecmint.com/htop-linux-process-monitoring.html"},{default:t(()=>s[27]||(s[27]=[n("strong",null,"htop",-1)])),_:1,__:[27]}),s[28]||(s[28]=e(" is an interactive process viewer that provides a more user-friendly interface than ")),s[29]||(s[29]=n("code",null,"top",-1)),s[30]||(s[30]=e("."))]),s[90]||(s[90]=n("p",null,[e("To install "),n("code",null,"htop"),e(" on Linux, use the following appropriate command for your specific Linux distribution.")],-1)),a(b,{data:[{id:'<VPIcon icon="fa-brands fa-debian"/>,<VPIcon icon="fa-brands fa-ubuntu"/>,<VPIcon icon="iconfont icon-linuxmint"/>'},{id:'<VPIcon icon="fa-brands fa-fedora"/>,<VPIcon icon="fa-brands fa-centos"/>,<VPIcon icon="fa-brands fa-redhat"/>,<VPIcon icon="iconfont icon-rockylinux"/>'},{id:'<VPIcon icon="iconfont icon-gentoo"/>'},{id:'<VPIcon icon="iconfont icon-alpine"/>'},{id:'<VPIcon icon="iconfont icon-archlinux"/>'},{id:'<VPIcon icon="fa-brands fa-opensuse"/>'},{id:'<VPIcon icon="fa-brands fa-freebsd"/>'}],active:0,"tab-id":"sh"},{title0:t(({value:l,isActive:r})=>[a(i,{icon:"fa-brands fa-debian"}),s[31]||(s[31]=e(",")),a(i,{icon:"fa-brands fa-ubuntu"}),s[32]||(s[32]=e(",")),a(i,{icon:"iconfont icon-linuxmint"})]),title1:t(({value:l,isActive:r})=>[a(i,{icon:"fa-brands fa-fedora"}),s[33]||(s[33]=e(",")),a(i,{icon:"fa-brands fa-centos"}),s[34]||(s[34]=e(",")),a(i,{icon:"fa-brands fa-redhat"}),s[35]||(s[35]=e(",")),a(i,{icon:"iconfont icon-rockylinux"})]),title2:t(({value:l,isActive:r})=>[a(i,{icon:"iconfont icon-gentoo"})]),title3:t(({value:l,isActive:r})=>[a(i,{icon:"iconfont icon-alpine"})]),title4:t(({value:l,isActive:r})=>[a(i,{icon:"iconfont icon-archlinux"})]),title5:t(({value:l,isActive:r})=>[a(i,{icon:"fa-brands fa-opensuse"})]),title6:t(({value:l,isActive:r})=>[a(i,{icon:"fa-brands fa-freebsd"})]),tab0:t(({value:l,isActive:r})=>s[36]||(s[36]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt"),e(),n("span",{class:"token function"},"install"),e(),n("span",{class:"token function"},"htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:t(({value:l,isActive:r})=>s[37]||(s[37]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(" dnf "),n("span",{class:"token function"},"install"),e(),n("span",{class:"token function"},"htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab2:t(({value:l,isActive:r})=>s[38]||(s[38]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(" emerge "),n("span",{class:"token parameter variable"},"-a"),e(" sys-apps/htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab3:t(({value:l,isActive:r})=>s[39]||(s[39]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(" apk "),n("span",{class:"token function"},"add"),e(),n("span",{class:"token function"},"htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab4:t(({value:l,isActive:r})=>s[40]||(s[40]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(" pacman "),n("span",{class:"token parameter variable"},"-S"),e(),n("span",{class:"token function"},"htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab5:t(({value:l,isActive:r})=>s[41]||(s[41]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"zypper"),e(),n("span",{class:"token function"},"install"),e(),n("span",{class:"token function"},"htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab6:t(({value:l,isActive:r})=>s[42]||(s[42]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(" pkg "),n("span",{class:"token function"},"install"),e(),n("span",{class:"token function"},"htop")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1}),s[91]||(s[91]=p(`<p>Run <code>htop</code> to view and manage processes easily.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">htop</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Press <kbd>F6</kbd> to sort processes by CPU or memory usage.</li><li>Press <kbd>F9</kbd> to kill a selected process.</li></ul><figure><img src="https://tecmint.com/wp-content/uploads/2013/08/htop-interactive-process-viewer.png" alt="htop - Interactive Process Viewer" tabindex="0" loading="lazy"><figcaption>htop - Interactive Process Viewer</figcaption></figure><h3 id="c-using-ps-command" tabindex="-1"><a class="header-anchor" href="#c-using-ps-command"><span>c. Using ps Command</span></a></h3>`,5)),n("p",null,[s[44]||(s[44]=e("The ")),a(d,{to:"/tecmint.com/ps-command-examples-for-linux-process-monitoring.html"},{default:t(()=>s[43]||(s[43]=[n("strong",null,"ps command",-1)])),_:1,__:[43]}),s[45]||(s[45]=e(" can be used to list processes and their resource usage."))]),s[92]||(s[92]=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">ps</span> aux <span class="token parameter variable">--sort</span><span class="token operator">=</span>-%mem <span class="token operator">|</span> <span class="token function">head</span>  <span class="token comment"># Top memory-consuming processes</span></span>
<span class="line"><span class="token function">ps</span> aux <span class="token parameter variable">--sort</span><span class="token operator">=</span>-%cpu <span class="token operator">|</span> <span class="token function">head</span>  <span class="token comment"># Top CPU-consuming processes</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://tecmint.com/wp-content/uploads/2013/08/Check-Memory-Consuming-Processes.png" alt="Check Memory Consuming Processes" tabindex="0" loading="lazy"><figcaption>Check Memory Consuming Processes</figcaption></figure><hr><h2 id="_2-kill-unnecessary-processes" tabindex="-1"><a class="header-anchor" href="#_2-kill-unnecessary-processes"><span>2. Kill Unnecessary Processes</span></a></h2>`,4)),n("p",null,[s[47]||(s[47]=e("Once you’ve identified resource-hogging processes, you can terminate them to free up resources using the ")),a(d,{to:"/tecmint.com/how-to-kill-a-process-in-linux.html"},{default:t(()=>s[46]||(s[46]=[n("strong",null,"kill command",-1)])),_:1,__:[46]}),s[48]||(s[48]=e(" followed by the ")),s[49]||(s[49]=n("strong",null,"PID",-1)),s[50]||(s[50]=e("."))]),s[93]||(s[93]=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">kill</span> PID</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If the process doesn’t terminate, use the <code>-9</code> flag to force-kill it.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">kill</span> <span class="token parameter variable">-9</span> PID</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,3)),n("p",null,[s[52]||(s[52]=e("Alternatively, use the ")),a(d,{to:"/tecmint.com/find-and-kill-running-processes-pid-in-linux.html"},{default:t(()=>s[51]||(s[51]=[n("strong",null,"pkill command",-1)])),_:1,__:[51]}),s[53]||(s[53]=e(" to kill processes by name."))]),s[94]||(s[94]=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">pkill</span> <span class="token operator">&lt;</span>PROCESS_NAME<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="_3-optimize-startup-applications" tabindex="-1"><a class="header-anchor" href="#_3-optimize-startup-applications"><span>3. Optimize Startup Applications</span></a></h2><p>Many applications and services start automatically at boot, consuming valuable system resources.</p><p>To manage startup applications:</p><h3 id="a-using-systemctl-command" tabindex="-1"><a class="header-anchor" href="#a-using-systemctl-command"><span>a. Using systemctl Command</span></a></h3>`,6)),n("p",null,[s[55]||(s[55]=e("List all enabled services using the ")),a(d,{to:"/tecmint.com/manage-services-using-systemd-and-systemctl-in-linux.html"},{default:t(()=>s[54]||(s[54]=[n("strong",null,"systemctl command",-1)])),_:1,__:[54]}),s[56]||(s[56]=e("."))]),s[95]||(s[95]=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">systemctl list-unit-files <span class="token parameter variable">--type</span><span class="token operator">=</span>service <span class="token operator">|</span> <span class="token function">grep</span> enabled</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Disable unnecessary services.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> systemctl disable service_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://tecmint.com/wp-content/uploads/2013/08/List-Enabled-Services.png" alt="List Enabled Services" tabindex="0" loading="lazy"><figcaption>List Enabled Services</figcaption></figure><h3 id="b-using-gui-tools" tabindex="-1"><a class="header-anchor" href="#b-using-gui-tools"><span>b. Using GUI Tools</span></a></h3>`,5)),n("p",null,[s[58]||(s[58]=e("If you’re using a desktop environment like ")),s[59]||(s[59]=n("strong",null,"GNOME",-1)),s[60]||(s[60]=e(" or ")),s[61]||(s[61]=n("strong",null,"KDE",-1)),s[62]||(s[62]=e(", use the built-in startup applications manager to ")),a(d,{to:"/tecmint.com/disable-unwanted-services-linux.html"},{default:t(()=>s[57]||(s[57]=[n("strong",null,"disable unnecessary programs",-1)])),_:1,__:[57]}),s[63]||(s[63]=e("."))]),s[96]||(s[96]=p(`<hr><h2 id="_4-reduce-swappiness-optimize-swap-usage" tabindex="-1"><a class="header-anchor" href="#_4-reduce-swappiness-optimize-swap-usage"><span>4. Reduce Swappiness (Optimize Swap Usage)</span></a></h2><p>Swappiness controls how often the system uses swap space instead of <strong>RAM</strong>. A high swappiness value can lead to excessive swapping, slowing down your system.</p><p>To check the current swappiness value:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cat</span> /proc/sys/vm/swappiness</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,5)),n("p",null,[s[64]||(s[64]=e("The default value is usually ")),s[65]||(s[65]=n("code",null,"60",-1)),s[66]||(s[66]=e(", but to reduce swappiness you need to edit the ")),a(i,{icon:"fas fa-folder-open"}),s[67]||(s[67]=n("code",null,"/etc/",-1)),a(i,{icon:"fas fa-file-lines"}),s[68]||(s[68]=n("code",null,"sysctl.conf",-1)),s[69]||(s[69]=e(" file."))]),s[97]||(s[97]=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> <span class="token function">nano</span> /etc/sysctl.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Add or modify the following line.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/sysctl.conf"><span>/etc/sysctl.conf</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token assign-left variable">vm.swappiness</span><span class="token operator">=</span><span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Save the file and apply the changes.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> <span class="token function">sysctl</span> <span class="token parameter variable">-p</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="_5-use-lightweight-desktop-alternatives" tabindex="-1"><a class="header-anchor" href="#_5-use-lightweight-desktop-alternatives"><span>5. Use Lightweight Desktop Alternatives</span></a></h2><p>Heavy desktop environments and applications can strain system resources, so consider switching to lightweight alternatives:</p><h3 id="a-desktop-environments" tabindex="-1"><a class="header-anchor" href="#a-desktop-environments"><span>a. Desktop Environments</span></a></h3><p>Replace <strong>GNOME</strong> or <strong>KDE</strong> with lighter options like <strong>XFCE</strong>, <strong>LXDE</strong>, or <strong>MATE</strong>.</p><h3 id="b-applications" tabindex="-1"><a class="header-anchor" href="#b-applications"><span>b. Applications</span></a></h3><p>Use lightweight applications such as:</p><ul><li><strong>Text Editor</strong>: Replace <strong>LibreOffice</strong> with <strong>AbiWord</strong> or <strong>Mousepad</strong>.</li><li><strong>Web Browser</strong>: Use <strong>Firefox</strong> with fewer extensions or switch to lightweight browsers like <strong>Midori</strong>.</li><li><strong>File Manager</strong>: Replace <strong>Nautilus</strong> with <strong>Thunar</strong> or <strong>PCManFM</strong>.</li></ul><hr><h2 id="_6-clear-cache-and-buffers" tabindex="-1"><a class="header-anchor" href="#_6-clear-cache-and-buffers"><span>6. Clear Cache and Buffers</span></a></h2><p>Linux uses RAM to cache files and improve performance. However, you can manually clear the cache if needed:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> <span class="token function">sync</span><span class="token punctuation">;</span> <span class="token function">sudo</span> <span class="token function">sysctl</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">vm.drop_caches</span><span class="token operator">=</span><span class="token number">3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command clears pagecache, dentries, and inodes. Use it cautiously, as it may temporarily slow down file access.</p><hr><h2 id="_7-optimize-kernel-parameters" tabindex="-1"><a class="header-anchor" href="#_7-optimize-kernel-parameters"><span>7. Optimize Kernel Parameters</span></a></h2>`,20)),n("p",null,[s[70]||(s[70]=e("To tune or optimize kernel parameters, you need to edit ")),a(i,{icon:"fas fa-folder-open"}),s[71]||(s[71]=n("code",null,"/etc/",-1)),a(i,{icon:"fas fa-file-lines"}),s[72]||(s[72]=n("code",null,"sysctl.conf",-1)),s[73]||(s[73]=e(" file and add the following or adjust parameters to improve system performance."))]),s[98]||(s[98]=p(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/sysctl.conf"><span>/etc/sysctl.conf</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token assign-left variable">vm.dirty_background_ratio</span><span class="token operator">=</span><span class="token number">5</span></span>
<span class="line"><span class="token assign-left variable">vm.dirty_ratio</span><span class="token operator">=</span><span class="token number">10</span></span>
<span class="line"><span class="token assign-left variable">vm.min_free_kbytes</span><span class="token operator">=</span><span class="token number">65536</span></span>
<span class="line"><span class="token assign-left variable">kernel.sched_autogroup_enabled</span><span class="token operator">=</span><span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>These settings control how often dirty data is written to disk, reducing RAM usage.</p><hr><h2 id="_8-reduce-memory-usage-with-zram" tabindex="-1"><a class="header-anchor" href="#_8-reduce-memory-usage-with-zram"><span>8. Reduce Memory Usage with ZRAM</span></a></h2><p>Zram and Zswap are compressed memory technologies that can reduce RAM usage.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> zram-config </span>
<span class="line"><span class="token function">sudo</span> systemctl start zram-config</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),n("p",null,[s[74]||(s[74]=e("Once installed, you need to edit the GRUB configuration file (")),a(i,{icon:"fas fa-folder-open"}),s[75]||(s[75]=n("code",null,"/etc/default/",-1)),a(i,{icon:"fas fa-file-lines"}),s[76]||(s[76]=n("code",null,"grub",-1)),s[77]||(s[77]=e(") and add:"))]),s[99]||(s[99]=p(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/default/grub"><span>/etc/default/grub</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token assign-left variable">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="token operator">=</span><span class="token string">&quot;zswap.enabled=1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Update GRUB and reboot:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> <span class="token function">update-grub</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">reboot</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_9-limit-cpu-usage-of-processes" tabindex="-1"><a class="header-anchor" href="#_9-limit-cpu-usage-of-processes"><span>9. Limit CPU Usage of Processes</span></a></h2><p>If a process is hogging the CPU, limit its usage using cpulimit.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> cpulimit  <span class="token comment"># Debian/Ubuntu  </span></span>
<span class="line"><span class="token function">sudo</span> yum <span class="token function">install</span> cpulimit  <span class="token comment"># RHEL/CentOS  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Limit a process (e.g., <strong>firefox</strong>) to 30% CPU usage.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> cpulimit <span class="token parameter variable">-e</span> firefox <span class="token parameter variable">-l</span> <span class="token number">30</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To permanently limit a process, use systemd.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">sudo</span> systemctl set-property <span class="token operator">&lt;</span>SERVICE_NAME<span class="token operator">&gt;</span> <span class="token assign-left variable">CPUQuota</span><span class="token operator">=</span><span class="token number">30</span>%</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="_10-regularly-update-your-system" tabindex="-1"><a class="header-anchor" href="#_10-regularly-update-your-system"><span>10. Regularly Update Your System</span></a></h2><p>Keeping your system updated ensures you have the latest performance improvements and bug fixes.</p>`,14)),a(b,{data:[{id:'<VPIcon icon="fa-brands fa-debian"/>,<VPIcon icon="fa-brands fa-ubuntu"/>'},{id:'<VPIcon icon="fa-brands fa-fedora"/>,<VPIcon icon="fa-brands fa-centos"/>,<VPIcon icon="fa-brands fa-redhat"/>,<VPIcon icon="iconfont icon-rockylinux"/>'}],active:0,"tab-id":"sh"},{title0:t(({value:l,isActive:r})=>[a(i,{icon:"fa-brands fa-debian"}),s[78]||(s[78]=e(",")),a(i,{icon:"fa-brands fa-ubuntu"})]),title1:t(({value:l,isActive:r})=>[a(i,{icon:"fa-brands fa-fedora"}),s[79]||(s[79]=e(",")),a(i,{icon:"fa-brands fa-centos"}),s[80]||(s[80]=e(",")),a(i,{icon:"fa-brands fa-redhat"}),s[81]||(s[81]=e(",")),a(i,{icon:"iconfont icon-rockylinux"})]),tab0:t(({value:l,isActive:r})=>s[82]||(s[82]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt"),e(" update "),n("span",{class:"token operator"},"&&"),e(),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt"),e(" upgrade")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:t(({value:l,isActive:r})=>s[83]||(s[83]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"sudo"),e(" yum update")]),e(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1}),s[100]||(s[100]=p('<hr><h2 id="troubleshooting-tips" tabindex="-1"><a class="header-anchor" href="#troubleshooting-tips"><span>Troubleshooting Tips</span></a></h2><ul><li>If a process doesn’t terminate with <code>kill</code>, use <code>kill -9 PID</code> to force-kill it.</li><li>If <code>zram</code> or <code>zswap</code> doesn’t work, ensure your kernel supports these features.</li><li>If system performance doesn’t improve, consider upgrading your hardware (e.g., adding more RAM or switching to an SSD).</li></ul><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>Optimizing RAM and CPU usage on Linux is a blend of monitoring, tweaking, and occasionally upgrading hardware. By identifying resource-hogging processes, adjusting system settings, and opting for lightweight alternatives, you can breathe new life into your system.</p>',6)),k(" TODO: add ARTICLE CARD "),a(c,m(g({title:"How to Reduce RAM & CPU Usage on Linux",desc:"In this guide, we’ll explore practical methods to reduce RAM and CPU usage on Linux, ensuring your system runs smoothly and efficiently.",link:"https://chanhi2000.github.io/bookshelf/tecmint.com/reduce-ram-cpu-usage-on-linux.html",logo:"https://tecmint.com/wp-content/uploads/2020/07/favicon.ico",background:"rgba(5,86,243,0.2)"})),null,16)])}const L=v(P,[["render",C]]),S=JSON.parse('{"path":"/tecmint.com/reduce-ram-cpu-usage-on-linux.html","title":"How to Reduce RAM & CPU Usage on Linux","lang":"en-US","frontmatter":{"lang":"en-US","title":"How to Reduce RAM & CPU Usage on Linux","description":"Article(s) > How to Reduce RAM & CPU Usage on Linux","icon":"fa-brands fa-fedora","category":["DevOps","Linux","Fedora","Debian","Article(s)"],"tag":["blog","tecmint.com","devops","linux","fedora","redhat","centos","debian","ubuntu","raspberry-pi","kali","kalilinux","kali-linux"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to Reduce RAM & CPU Usage on Linux\\",\\"image\\":[\\"https://tecmint.com/wp-content/uploads/2013/08/Real-Time-System-Process-Monitoring.png\\",\\"https://tecmint.com/wp-content/uploads/2013/08/htop-interactive-process-viewer.png\\",\\"https://tecmint.com/wp-content/uploads/2013/08/Check-Memory-Consuming-Processes.png\\",\\"https://tecmint.com/wp-content/uploads/2013/08/List-Enabled-Services.png\\"],\\"datePublished\\":\\"2025-02-27T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ravi Saive\\",\\"url\\":\\"https://tecmint.com/author/admin/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/tecmint.com/reduce-ram-cpu-usage-on-linux.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to Reduce RAM & CPU Usage on Linux"}],["meta",{"property":"og:description","content":"Article(s) > How to Reduce RAM & CPU Usage on Linux"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tecmint.com/wp-content/uploads/2013/08/Reduce-RAM-CPU-Usage-on-Linux.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://tecmint.com/wp-content/uploads/2013/08/Reduce-RAM-CPU-Usage-on-Linux.png"}],["meta",{"name":"twitter:image:alt","content":"How to Reduce RAM & CPU Usage on Linux"}],["meta",{"property":"article:author","content":"Ravi Saive"}],["meta",{"property":"article:tag","content":"kali-linux"}],["meta",{"property":"article:tag","content":"kalilinux"}],["meta",{"property":"article:tag","content":"kali"}],["meta",{"property":"article:tag","content":"raspberry-pi"}],["meta",{"property":"article:tag","content":"ubuntu"}],["meta",{"property":"article:tag","content":"debian"}],["meta",{"property":"article:tag","content":"centos"}],["meta",{"property":"article:tag","content":"redhat"}],["meta",{"property":"article:tag","content":"fedora"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"tecmint.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-02-27T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > How to Reduce RAM & CPU Usage on Linux"},{"property":"og:description","content":"How to Reduce RAM & CPU Usage on Linux"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/tecmint.com/reduce-ram-cpu-usage-on-linux.html"}]],"prev":"/devops/linux-fedora/articles/README.md","date":"2025-02-27T00:00:00.000Z","isOriginal":false,"author":[{"name":"Ravi Saive","url":"https://tecmint.com/author/admin/"}],"cover":"https://tecmint.com/wp-content/uploads/2013/08/Reduce-RAM-CPU-Usage-on-Linux.png"},"git":{},"readingTime":{"minutes":4.98,"words":1494},"filePathRelative":"tecmint.com/reduce-ram-cpu-usage-on-linux.md","copyright":{"author":"Ravi Saive"}}');export{L as comp,S as data};
