import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as n,f as e,b as m,a as b,t as y,n as v,g as k,w as t,e as s,r,o as w}from"./app-BVguHYKu.js";const A={},x={id:"frontmatter-title-관련",tabindex:"-1"},j={class:"header-anchor",href:"#frontmatter-title-관련"},K={class:"table-of-contents"},J={href:"https://medium.com/kotlin-academy/java-and-kotlin-versions-in-android-when-to-upgrade-and-when-to-avoid-cf47edbbac5b",target:"_blank",rel:"noopener noreferrer"},S={class:"hint-container info"},C={href:"mailto:dobri.kostadinov@gmail.com",target:"_blank",rel:"noopener noreferrer"},I={href:"https://linkedin.com/in/dobrikostadinov/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://medium.com/@dobri.kostadinov",target:"_blank",rel:"noopener noreferrer"},T={class:"hint-container info"},E={href:"https://proandroiddev.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions-10cf026739fd",target:"_blank",rel:"noopener noreferrer"};function q(h,a){const c=r("VPCard"),o=r("router-link"),u=r("SiteInfo"),p=r("VPIcon"),d=r("Tabs");return w(),f("div",null,[n("h1",x,[n("a",j,[n("span",null,y(h.$frontmatter.title)+" 관련",1)])]),e(c,v(k({title:"Java > Article(s)",desc:"Article(s)",link:"/programming/java/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",K,[n("ul",null,[n("li",null,[e(o,{to:"#introduction"},{default:t(()=>a[0]||(a[0]=[s("Introduction")])),_:1,__:[0]})]),n("li",null,[e(o,{to:"#java-features-by-version"},{default:t(()=>a[1]||(a[1]=[s("Java Features by Version")])),_:1,__:[1]}),n("ul",null,[n("li",null,[e(o,{to:"#java-8-2014"},{default:t(()=>a[2]||(a[2]=[s("Java 8 (2014)")])),_:1,__:[2]})]),n("li",null,[e(o,{to:"#java-9-2017"},{default:t(()=>a[3]||(a[3]=[s("Java 9 (2017)")])),_:1,__:[3]})]),n("li",null,[e(o,{to:"#java-10-2018"},{default:t(()=>a[4]||(a[4]=[s("Java 10 (2018)")])),_:1,__:[4]})]),n("li",null,[e(o,{to:"#java-11-2018-—-lts"},{default:t(()=>a[5]||(a[5]=[s("Java 11 (2018 — LTS)")])),_:1,__:[5]})]),n("li",null,[e(o,{to:"#java-14-2020"},{default:t(()=>a[6]||(a[6]=[s("Java 14 (2020)")])),_:1,__:[6]})]),n("li",null,[e(o,{to:"#java-17-2021-—-lts"},{default:t(()=>a[7]||(a[7]=[s("Java 17 (2021 — LTS)")])),_:1,__:[7]})])])]),n("li",null,[e(o,{to:"#kotlin-features-by-version"},{default:t(()=>a[8]||(a[8]=[s("Kotlin Features by Version")])),_:1,__:[8]}),n("ul",null,[n("li",null,[e(o,{to:"#kotlin-1-0-2016"},{default:t(()=>a[9]||(a[9]=[s("Kotlin 1.0 (2016)")])),_:1,__:[9]})]),n("li",null,[e(o,{to:"#kotlin-1-1-2017"},{default:t(()=>a[10]||(a[10]=[s("Kotlin 1.1 (2017)")])),_:1,__:[10]})]),n("li",null,[e(o,{to:"#kotlin-1-3-2018"},{default:t(()=>a[11]||(a[11]=[s("Kotlin 1.3 (2018)")])),_:1,__:[11]})]),n("li",null,[e(o,{to:"#kotlin-1-4-2020"},{default:t(()=>a[12]||(a[12]=[s("Kotlin 1.4 (2020)")])),_:1,__:[12]})]),n("li",null,[e(o,{to:"#kotlin-1-4-with-sam-conversion-for-kotlin-interfaces"},{default:t(()=>a[13]||(a[13]=[s("Kotlin 1.4 (With SAM Conversion for Kotlin Interfaces)")])),_:1,__:[13]})]),n("li",null,[e(o,{to:"#kotlin-1-5-2021"},{default:t(()=>a[14]||(a[14]=[s("Kotlin 1.5 (2021)")])),_:1,__:[14]})]),n("li",null,[e(o,{to:"#kotlin-1-6-2021"},{default:t(()=>a[15]||(a[15]=[s("Kotlin 1.6 (2021)")])),_:1,__:[15]})]),n("li",null,[e(o,{to:"#kotlin-1-9-2023"},{default:t(()=>a[16]||(a[16]=[s("Kotlin 1.9 (2023)")])),_:1,__:[16]})])])]),n("li",null,[e(o,{to:"#impact-on-android-development"},{default:t(()=>a[17]||(a[17]=[s("Impact on Android Development")])),_:1,__:[17]})]),n("li",null,[e(o,{to:"#conclusion"},{default:t(()=>a[18]||(a[18]=[s("Conclusion")])),_:1,__:[18]})])])]),a[51]||(a[51]=n("hr",null,null,-1)),e(u,{name:"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions",desc:"In the previous article, I explored which version of Java and Kotlin you can or cannot use depending on your AGP, Android Studio etc.. Lets continue that journey by specifying which features you have in each version of Java and Kotlin. It never hurts to refresh our memory from time to time right?",url:"https://droidcon.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",preview:"https://droidcon.com/wp-content/uploads/2024/11/1_yA3E5J_8MJOqw7Ng2ZCBOQ-600x600.webp"}),a[52]||(a[52]=n("figure",null,[n("img",{src:"https://droidcon.com/wp-content/uploads/2024/11/1_yA3E5J_8MJOqw7Ng2ZCBOQ-600x600.webp",alt:"This image was generated with the assistance of AI",tabindex:"0",loading:"lazy"}),n("figcaption",null,"This image was generated with the assistance of AI")],-1)),a[53]||(a[53]=n("hr",null,null,-1)),a[54]||(a[54]=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction"},[n("span",null,"Introduction")])],-1)),n("p",null,[n("a",J,[a[19]||(a[19]=s("In the previous article (")),e(p,{icon:"fa-brands fa-medium"}),a[20]||(a[20]=n("code",null,"kotlin-academy",-1)),a[21]||(a[21]=s(")"))]),a[22]||(a[22]=s(", I explored which version of Java and Kotlin you can or cannot use depending on your AGP, Android Studio etc.. Lets continue that journey by specifying which features you have in each version of Java and Kotlin. It never hurts to refresh our memory from time to time right?"))]),a[55]||(a[55]=n("p",null,"Java and Kotlin are the two core languages for Android development. While Java has been around for decades, Kotlin’s rise as a modern alternative has made it an official language for Android. Keeping up with the latest language features is crucial for writing optimized, clean, and maintainable code. This guide outlines the most important features introduced in each version of Java and Kotlin, with a focus on Android development.",-1)),a[56]||(a[56]=n("hr",null,null,-1)),a[57]||(a[57]=n("h2",{id:"java-features-by-version",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#java-features-by-version"},[n("span",null,"Java Features by Version")])],-1)),a[58]||(a[58]=n("h3",{id:"java-8-2014",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#java-8-2014"},[n("span",null,"Java 8 (2014)")])],-1)),a[59]||(a[59]=n("p",null,"Java 8 is still the most widely used version in Android development due to its long-lasting support. Key features include:",-1)),e(d,{data:[{id:"Lambda Expressions"},{id:"Streams API"},{id:"Default Methods"}],active:0},{title0:t(({value:i,isActive:l})=>a[23]||(a[23]=[s("Lambda Expressions")])),title1:t(({value:i,isActive:l})=>a[24]||(a[24]=[s("Streams API")])),title2:t(({value:i,isActive:l})=>a[25]||(a[25]=[s("Default Methods")])),tab0:t(({value:i,isActive:l})=>a[26]||(a[26]=[n("p",null,"Simplifies the syntax for anonymous classes.",-1),n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java"},[n("pre",null,[n("code",{class:"language-java"},[n("span",{class:"line"},[n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" names "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Jane"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Doe"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("names"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),s("name "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:l})=>a[27]||(a[27]=[n("p",null,"Used for functional-style operations on collections.",-1),n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java"},[n("pre",null,[n("code",{class:"language-java"},[n("span",{class:"line"},[n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" names "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Jane"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Doe"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s(" names"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stream"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"filter"),n("span",{class:"token punctuation"},"("),s("name "),n("span",{class:"token operator"},"->"),s(" name"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"J"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s(),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab2:t(({value:i,isActive:l})=>a[28]||(a[28]=[n("p",null,"Allows interfaces to have default method implementations.",-1),n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java"},[n("pre",null,[n("code",{class:"language-java"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"Walkable"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"walk"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Walking..."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[60]||(a[60]=m(`<h3 id="java-9-2017" tabindex="-1"><a class="header-anchor" href="#java-9-2017"><span>Java 9 (2017)</span></a></h3><h4 id="module-system-project-jigsaw" tabindex="-1"><a class="header-anchor" href="#module-system-project-jigsaw"><span>Module System (Project Jigsaw)</span></a></h4><p>Organizes large codebases into modules for better encapsulation.</p><h4 id="jshell-repl" tabindex="-1"><a class="header-anchor" href="#jshell-repl"><span>JShell (REPL)</span></a></h4><p>Java introduced a Read-Eval-Print Loop (REPL) tool for testing code snippets interactively.</p><h3 id="java-10-2018" tabindex="-1"><a class="header-anchor" href="#java-10-2018"><span>Java 10 (2018)</span></a></h3><h4 id="local-variable-type-inference-var" tabindex="-1"><a class="header-anchor" href="#local-variable-type-inference-var"><span>Local-Variable Type Inference (<code>var</code>)</span></a></h4><p>Allows you to declare variables without specifying their types explicitly.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Orange&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="java-11-2018-—-lts" tabindex="-1"><a class="header-anchor" href="#java-11-2018-—-lts"><span>Java 11 (2018 — LTS)</span></a></h3><h4 id="http-client-api" tabindex="-1"><a class="header-anchor" href="#http-client-api"><span>HTTP Client API</span></a></h4><p>Introduces a standard HTTP client to replace <code>HttpURLConnection</code>.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">HttpClient</span> client <span class="token operator">=</span> <span class="token class-name">HttpClient</span><span class="token punctuation">.</span><span class="token function">newHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">HttpRequest</span> request <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-14-2020" tabindex="-1"><a class="header-anchor" href="#java-14-2020"><span>Java 14 (2020)</span></a></h3><h4 id="switch-expressions-preview" tabindex="-1"><a class="header-anchor" href="#switch-expressions-preview"><span>Switch Expressions (Preview)</span></a></h4><p>Improves the switch statement with a new concise syntax.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token constant">MONDAY</span><span class="token punctuation">,</span> <span class="token constant">FRIDAY</span><span class="token punctuation">,</span> <span class="token constant">SUNDAY</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Weekend&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token constant">TUESDAY</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Weekday&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Unknown&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-17-2021-—-lts" tabindex="-1"><a class="header-anchor" href="#java-17-2021-—-lts"><span>Java 17 (2021 — LTS)</span></a></h3><h4 id="sealed-classes" tabindex="-1"><a class="header-anchor" href="#sealed-classes"><span>Sealed Classes</span></a></h4><p>Restricts which other classes can extend a class, improving security and code readability.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">Shape</span> <span class="token keyword">permits</span> <span class="token class-name">Circle</span><span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">// Code…</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="kotlin-features-by-version" tabindex="-1"><a class="header-anchor" href="#kotlin-features-by-version"><span>Kotlin Features by Version</span></a></h2><h3 id="kotlin-1-0-2016" tabindex="-1"><a class="header-anchor" href="#kotlin-1-0-2016"><span>Kotlin 1.0 (2016)</span></a></h3>`,24)),e(d,{data:[{id:"Null Safety"},{id:"Extension Functions"}],active:0},{title0:t(({value:i,isActive:l})=>a[29]||(a[29]=[s("Null Safety")])),title1:t(({value:i,isActive:l})=>a[30]||(a[30]=[s("Extension Functions")])),tab0:t(({value:i,isActive:l})=>a[31]||(a[31]=[n("p",null,"Prevents null pointer exceptions.",-1),n("div",{class:"language-kotlin line-numbers-mode","data-highlighter":"prismjs","data-ext":"kt"},[n("pre",null,[n("code",{class:"language-kotlin"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"val"),s(" name"),n("span",{class:"token operator"},":"),s(" String"),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:i,isActive:l})=>a[32]||(a[32]=[n("p",null,"Allows you to add functions to classes without modifying their source code.",-1),n("div",{class:"language-kotlin line-numbers-mode","data-highlighter":"prismjs","data-ext":"kt"},[n("pre",null,[n("code",{class:"language-kotlin"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"fun"),s(" String"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addExclamation"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(" String "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"!"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Hello"')]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addExclamation"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[61]||(a[61]=m(`<h3 id="kotlin-1-1-2017" tabindex="-1"><a class="header-anchor" href="#kotlin-1-1-2017"><span>Kotlin 1.1 (2017)</span></a></h3><h4 id="coroutines-experimental" tabindex="-1"><a class="header-anchor" href="#coroutines-experimental"><span>Coroutines (Experimental)</span></a></h4><p>Simplifies asynchronous programming by eliminating callbacks.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">GlobalScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> result <span class="token operator">=</span> async <span class="token punctuation">{</span> <span class="token function">someLongRunningTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="kotlin-1-3-2018" tabindex="-1"><a class="header-anchor" href="#kotlin-1-3-2018"><span>Kotlin 1.3 (2018)</span></a></h3><h4 id="stable-coroutines" tabindex="-1"><a class="header-anchor" href="#stable-coroutines"><span>Stable Coroutines*</span></a></h4><p>Coroutines become officially stable and a key part of Android development.</p><h4 id="inline-classes-experimental" tabindex="-1"><a class="header-anchor" href="#inline-classes-experimental"><span>Inline Classes (Experimental)</span></a></h4><p>Inline classes provide an efficient way to define types that avoid allocation.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">inline</span> <span class="token keyword">class</span> <span class="token function">UserId</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="kotlin-1-4-2020" tabindex="-1"><a class="header-anchor" href="#kotlin-1-4-2020"><span>Kotlin 1.4 (2020)</span></a></h3><h4 id="sam-conversion-for-kotlin-interfaces" tabindex="-1"><a class="header-anchor" href="#sam-conversion-for-kotlin-interfaces"><span>SAM Conversion for Kotlin Interfaces</span></a></h4><p>In Kotlin 1.4,<strong>SAM Conversion</strong>allows you to pass lambda expressions for single abstract method (SAM) interfaces directly, without the need to explicitly create an object or override the method. This simplifies the code when using functional interfaces.</p><div class="hint-container tip"><p class="hint-container-title">Example</p><p>Before Kotlin 1.4 (Without SAM Conversion for Kotlin Interfaces)</p><p>If you wanted to use a<code>Runnable</code>in Kotlin (which has only one method<code>run()</code>), you had to instantiate it like this:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">val</span> runnable<span class="token operator">:</span> Runnable <span class="token operator">=</span> Runnable <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Running with SAM conversion...&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">Thread</span><span class="token punctuation">(</span>runnable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="kotlin-1-4-with-sam-conversion-for-kotlin-interfaces" tabindex="-1"><a class="header-anchor" href="#kotlin-1-4-with-sam-conversion-for-kotlin-interfaces"><span>Kotlin 1.4 (With SAM Conversion for Kotlin Interfaces)</span></a></h3><p>With SAM conversion, you can pass a lambda directly:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line">val runnable<span class="token operator">:</span> <span class="token class-name">Runnable</span> <span class="token operator">=</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Running with SAM conversion...&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">(</span>runnable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, you can pass the lambda directly in the constructor if the interface expects it:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">Thread</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Running directly with lambda!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This makes the code more concise and easier to read, especially when dealing with functional interfaces or APIs that use single abstract methods like event listeners or background tasks.</p><h3 id="kotlin-1-5-2021" tabindex="-1"><a class="header-anchor" href="#kotlin-1-5-2021"><span>Kotlin 1.5 (2021)</span></a></h3><p><strong>- Sealed Interfaces</strong><br> Sealed interfaces in Kotlin 1.5 extend the concept of sealed classes to interfaces, allowing you to control which types can implement an interface. Like sealed classes, sealed interfaces ensure that all possible implementations are known at compile time, enabling the compiler to enforce exhaustive<code>when</code>statements. This is especially useful when modeling hierarchies where only a specific set of types is allowed, improving code safety and clarity. By restricting the set of implementors, sealed interfaces prevent unexpected or unintended classes from implementing the interface, which can reduce runtime errors.sealed interface Shape</p><p><strong>- Value Classes (Experimental)</strong><br> Value classes in Kotlin, introduced as an experimental feature, provide a way to wrap a value in a type while avoiding the overhead of creating a full-fledged object. By using the<code>@JvmInline</code>annotation, the compiler treats the value class as an inline type, meaning the wrapped value is directly used in memory without additional allocation. This leads to more efficient memory usage, especially for simple data types like<code>String</code>,<code>Int</code>, or<code>Long</code>, which are frequently used in performance-critical parts of the code.@JvmInline<br> value class Password(val value: String)</p><h3 id="kotlin-1-6-2021" tabindex="-1"><a class="header-anchor" href="#kotlin-1-6-2021"><span>Kotlin 1.6 (2021)</span></a></h3><p><strong>- Stable Value Classes</strong><br> Value classes are now stable, offering better memory efficiency.</p><h3 id="kotlin-1-9-2023" tabindex="-1"><a class="header-anchor" href="#kotlin-1-9-2023"><span>Kotlin 1.9 (2023)</span></a></h3><p><strong>- Optimized JVM performance</strong><br> Improvements that make Kotlin code run more efficiently on the JVM.</p><hr><h2 id="impact-on-android-development" tabindex="-1"><a class="header-anchor" href="#impact-on-android-development"><span>Impact on Android Development</span></a></h2><ul><li><strong>Java</strong>: While Android’s runtime (ART) supports Java 8, most of the new language features in later versions like local variable inference (<code>var</code>), records, and sealed classes are unavailable unless using third-party libraries like D8 desugaring.</li><li><strong>Kotlin</strong>: Kotlin is highly integrated into Android development. Features like coroutines are essential for handling background tasks without blocking the UI, making Kotlin a popular choice for Android apps.</li></ul><hr><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>Staying updated on Java and Kotlin versions ensures that developers can take advantage of the latest improvements in code efficiency, readability, and performance. While Android’s support for newer Java features is limited, Kotlin’s integration with Android is growing stronger with every release, making it the go-to choice for modern Android development.</p>`,33)),n("div",S,[a[44]||(a[44]=n("p",{class:"hint-container-title"},"Dobri Kostadinov",-1)),a[45]||(a[45]=n("p",null,"Android Consultant | Trainer",-1)),n("p",null,[n("a",C,[e(p,{icon:"fas fa-envelope"}),a[33]||(a[33]=s("Email me"))]),a[40]||(a[40]=s("|")),n("a",I,[a[34]||(a[34]=s("Follow me on LinkedIn (")),e(p,{icon:"fa-brands fa-linkedin"}),a[35]||(a[35]=n("code",null,"dobrikostadinov",-1)),a[36]||(a[36]=s(")"))]),a[41]||(a[41]=s("|")),n("a",V,[a[37]||(a[37]=s("Follow me on Medium (")),e(p,{icon:"fa-brands fa-medium"}),a[38]||(a[38]=n("code",null,"dobri.kostadinov",-1)),a[39]||(a[39]=s(")"))]),a[42]||(a[42]=s("|")),a[43]||(a[43]=n("a",{href:"https://buymeacoffee.com/dobri.kostadinov",target:"_blank",rel:"noopener noreferrer"},"Buy me a coffee",-1))])]),n("div",T,[a[50]||(a[50]=n("p",{class:"hint-container-title"},"Info",-1)),n("p",null,[a[49]||(a[49]=s("This article is previously published on ")),n("a",E,[a[46]||(a[46]=s("proandroiddev.com (")),e(p,{icon:"fa-brands fa-medium"}),a[47]||(a[47]=n("code",null,"proandroiddev",-1)),a[48]||(a[48]=s(")"))])]),e(u,{name:"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions",desc:"A Version-by-Version Breakdown of Java and Kotlin Enhancements for Modern Android Development",url:"https://proandroiddev.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions-10cf026739fd/",logo:"https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",preview:"https://miro.medium.com/v2/resize:fit:1024/1*yA3E5J_8MJOqw7Ng2ZCBOQ.png"})]),b(" TODO: add ARTICLE CARD "),e(c,v(k({title:"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions",desc:"In the previous article, I explored which version of Java and Kotlin you can or cannot use depending on your AGP, Android Studio etc.. Lets continue that journey by specifying which features you have in each version of Java and Kotlin. It never hurts to refresh our memory from time to time right?",link:"https://chanhi2000.github.io/bookshelf/droidcon.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions.html",logo:"https://droidcon.com/wp-content/uploads/2021/07/favicon-300x300.png",background:"rgba(4,20,221,0.2)"})),null,16)])}const P=g(A,[["render",q]]),R=JSON.parse('{"path":"/droidcon.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions.html","title":"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions","lang":"en-US","frontmatter":{"lang":"en-US","title":"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions","description":"Article(s) > Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions","icon":"iconfont icon-kotlin","category":["Java","Kotlin","Article(s)"],"tag":["blog","droidcon.com","java","kotlin"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions\\",\\"image\\":[\\"https://droidcon.com/wp-content/uploads/2024/11/1_yA3E5J_8MJOqw7Ng2ZCBOQ-600x600.webp\\"],\\"datePublished\\":\\"2024-11-06T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dobri Kostadinov\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions"}],["meta",{"property":"og:description","content":"Article(s) > Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://droidcon.com/wp-content/uploads/2024/11/1_yA3E5J_8MJOqw7Ng2ZCBOQ-600x600.webp"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://droidcon.com/wp-content/uploads/2024/11/1_yA3E5J_8MJOqw7Ng2ZCBOQ-600x600.webp"}],["meta",{"name":"twitter:image:alt","content":"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions"}],["meta",{"property":"article:author","content":"Dobri Kostadinov"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"droidcon.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2024-11-06T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions"},{"property":"og:description","content":"Java and Kotlin: A Comprehensive Guide to New and Key Features Across Versions"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/droidcon.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions.html"}]],"prev":"/programming/java/articles/README.md","date":"2024-11-06T00:00:00.000Z","isOriginal":false,"author":"Dobri Kostadinov","cover":"https://droidcon.com/wp-content/uploads/2024/11/1_yA3E5J_8MJOqw7Ng2ZCBOQ-600x600.webp"},"git":{},"readingTime":{"minutes":5.01,"words":1502},"filePathRelative":"droidcon.com/java-and-kotlin-a-comprehensive-guide-to-new-and-key-features-across-versions.md","copyright":{"author":"Dobri Kostadinov"}}');export{P as comp,R as data};
