import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as s,f as t,b as k,a as i,t as m,n as h,g as v,w as c,e as a,r as o,o as b}from"./app-BVguHYKu.js";const f={},y={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},j={href:"https://stackblitz.com/edit/vitejs-vite-qhqmg5?file=src%2FApp.jsx",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/c99rahul/react-toast",target:"_blank",rel:"noopener noreferrer"};function T(l,n){const r=o("VPCard"),e=o("router-link"),u=o("SiteInfo"),p=o("VPIcon");return b(),g("div",null,[s("h1",y,[s("a",w,[s("span",null,m(l.$frontmatter.title)+" 관련",1)])]),t(r,h(v({title:"How to create a custom toast component with React",desc:"Create a toast component in your React app that is capable of displaying multiple notifications, customizing their position, and deleting them.",link:"/blog.logrocket.com/how-to-create-custom-toast-component-react/README.md",logo:"/assets/image/blog.logrocket.com/favicon.png",background:"rgba(112,76,182,0.2)"})),null,16),s("nav",x,[s("ul",null,[s("li",null,[t(e,{to:"#adding-the-position-input"},{default:c(()=>n[0]||(n[0]=[a("Adding the position input")])),_:1,__:[0]})]),s("li",null,[t(e,{to:"#adding-the-toastlistcomponent"},{default:c(()=>n[1]||(n[1]=[a("Adding the ToastListcomponent")])),_:1,__:[1]})])])]),n[9]||(n[9]=s("hr",null,null,-1)),t(u,{name:"How to create a custom toast component with React",desc:"Create a toast component in your React app that is capable of displaying multiple notifications, customizing their position, and deleting them.",url:"https://blog.logrocket.com/how-to-create-custom-toast-component-react#positioning-toast-notifications",logo:"/assets/image/blog.logrocket.com/favicon.png",preview:"/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"}),n[10]||(n[10]=k(`<p>Once again, we can retrieve the position inputs from a select combo box (which we will define shortly) by utilizing the <code>target</code> event property. Setting the current position requires just a single line of code:</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">handlePositionChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">setPosition</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="adding-the-position-input" tabindex="-1"><a class="header-anchor" href="#adding-the-position-input"><span>Adding the position input</span></a></h2><p>We can define an object to iterate over and populate our select combo box, which is responsible for showing different positions for <code>ToastList</code>:</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> positions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;top-right&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Top-right&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;top-left&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Top-left&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;bottom-right&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Bottom-right&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;bottom-left&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Bottom-left&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog.logrocket.com/wp-content/uploads/2020/03/positioning-toast-notifications.webp" alt="Positioning Toast Notifications" tabindex="0" loading="lazy"><figcaption>Positioning Toast Notifications</figcaption></figure><p>Adding options to the select box is now easy by looping over the positions using the <code>Object.keys</code> and providing the value as well as the label, as shown below:</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>position<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Position</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span></span>
<span class="line">    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>position<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>position<span class="token punctuation">}</span></span></span>
<span class="line">    <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePositionChange<span class="token punctuation">}</span></span></span>
<span class="line">  <span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token punctuation">{</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>positions<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">position</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>position<span class="token punctuation">}</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>position<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>positions<span class="token punctuation">[</span>position<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The state of the position combo box is handled by the <code>position</code> state variable, while the change of this input is managed by the <code>handlePositionChange</code> function, which we discussed in the last few steps.</p><hr><h2 id="adding-the-toastlistcomponent" tabindex="-1"><a class="header-anchor" href="#adding-the-toastlistcomponent"><span>Adding the <code>ToastList</code>component</span></a></h2><p>Finally, we conclude our app component file by adding <code>ToastList</code> at the end. We’ll use the toast and position state variables that we declared in the app component above. Additionally, we’ll pass the <code>removeToast</code> function as the <code>removeToast</code> prop of <code>ToastList</code> before exporting it as a default module:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="App.jsx"><span>App.jsx</span></div><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">React Toast Component</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      ...</span>
<span class="line"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ToastList</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toasts<span class="token punctuation">}</span></span> <span class="token attr-name">position</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>position<span class="token punctuation">}</span></span> <span class="token attr-name">removeToast</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>removeToast<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,14)),s("p",null,[n[6]||(n[6]=a("Below is a live working demonstration of our final output. You can view it in a different tab using ")),s("a",j,[t(p,{icon:"iconfont icon-stackblitz"}),n[2]||(n[2]=a("this link"))]),n[7]||(n[7]=a(". Alternatively, you can also ")),s("a",q,[n[3]||(n[3]=a("find all of the code on GitHub (")),t(p,{icon:"iconfont icon-github"}),n[4]||(n[4]=s("code",null,"c99rahul/react-toast",-1)),n[5]||(n[5]=a(")"))]),n[8]||(n[8]=a(":"))]),i(" TODO: stackblitz or sandplayground "),i(" > #### [vitejs-vite-qhqmg5 - StackBlitz](https://stackblitz.com/edit/vitejs-vite-qhqmg5?embed=1&file=src%2FApp.jsx) ")])}const A=d(f,[["render",T]]),_=JSON.parse('{"path":"/blog.logrocket.com/how-to-create-custom-toast-component-react/positioning-toast-notifications.html","title":"Positioning toast notifications","lang":"en-US","frontmatter":{"lang":"en-US","title":"Positioning toast notifications","description":"Article(s) > (9/9) How to create a custom toast component with React","category":["Node.js","React.js","Article(s)"],"tag":["blog","blog.logrocket.com","node","nodejs","node-js","react","reactjs","react-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Positioning toast notifications\\",\\"image\\":[\\"https://blog.logrocket.com/wp-content/uploads/2020/03/positioning-toast-notifications.webp\\"],\\"datePublished\\":\\"2023-06-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Uzochukwu Eddie Odozi\\",\\"url\\":\\"https://blog.logrocket.com/author/uzochukwuodozi/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/how-to-create-custom-toast-component-react/positioning-toast-notifications.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Positioning toast notifications"}],["meta",{"property":"og:description","content":"Article(s) > (9/9) How to create a custom toast component with React"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Positioning toast notifications"}],["meta",{"property":"article:author","content":"Uzochukwu Eddie Odozi"}],["meta",{"property":"article:tag","content":"react-js"}],["meta",{"property":"article:tag","content":"reactjs"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"blog.logrocket.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2023-06-21T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > (9/9) How to create a custom toast component with React"},{"property":"og:description","content":"Positioning toast notifications"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/blog.logrocket.com/how-to-create-custom-toast-component-react/positioning-toast-notifications.html"}]],"next":"/blog.logrocket.com/how-to-create-custom-toast-component-react/README.md#conclusion","date":"2023-06-21T00:00:00.000Z","isOriginal":false,"author":[{"name":"Uzochukwu Eddie Odozi","url":"https://blog.logrocket.com/author/uzochukwuodozi/"}],"cover":"/assets/image/blog.logrocket.com/how-to-create-custom-toast-component-react/banner.png"},"git":{},"readingTime":{"minutes":1.87,"words":562},"filePathRelative":"blog.logrocket.com/how-to-create-custom-toast-component-react/positioning-toast-notifications.md","copyright":{"author":"Uzochukwu Eddie Odozi"}}');export{A as comp,_ as data};
