import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as m,d as e,f as t,b as i,t as d,n as g,g as u,e as s,r as o,o as b}from"./app-BVguHYKu.js";const h="/bookshelf/assets/image/meetup.nhncloud.com/gitlogo.png",v={},f={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"};function y(l,n){const r=o("VPCard"),p=o("SiteInfo"),a=o("VPIcon");return b(),m("div",null,[e("h1",f,[e("a",k,[e("span",null,d(l.$frontmatter.title)+" 관련",1)])]),t(r,g(u({title:"Git > Article(s)",desc:"Article(s)",link:"/programming/git/articles/README.md",logo:"https://chanhi2000.github.io/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n[17]||(n[17]=e("nav",{class:"table-of-contents"},[e("ul")],-1)),n[18]||(n[18]=e("hr",null,null,-1)),t(p,{name:"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때 | NHN Cloud Meetup",desc:"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때",url:"https://meetup.nhncloud.com/posts/45",logo:"https://meetup.nhncloud.com/resources/img/favicon.ico",preview:"/assets/image/meetup.nhncloud.com/gitlogo.png"}),n[19]||(n[19]=e("figure",null,[e("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1)),e("p",null,[n[0]||(n[0]=s("보통 프로젝트를 진행할때는 ")),t(a,{icon:"fas fa-code-branch"}),n[1]||(n[1]=e("code",null,"master",-1)),n[2]||(n[2]=s(" 브랜치만 릴리즈 하면서 운영을 하게 되는데요, 가끔 중규모/대규모 개편을 하게 되면 브랜치 두개를 동시에 관리를 해야 하는 애로사항이 있습니다."))]),n[20]||(n[20]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">git</span> branch</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># master</span></span>
<span class="line"><span class="token comment"># next-release</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),e("p",null,[n[3]||(n[3]=s("이렇게 두개의 브랜치가 있습니다. ")),t(a,{icon:"fas fa-code-branch"}),n[4]||(n[4]=e("code",null,"master",-1)),n[5]||(n[5]=s("는 지금 운영중인 브랜치고, ")),t(a,{icon:"fas fa-code-branch"}),n[6]||(n[6]=e("code",null,"next-release",-1)),n[7]||(n[7]=s("는 다음 대규모 개편때 반영될 코드죠. 근데 갑자기 (예를들어)UI상의 오타가 발견되었어요. 이런 경우 ")),t(a,{icon:"fas fa-code-branch"}),n[8]||(n[8]=e("code",null,"master",-1)),n[9]||(n[9]=s("와 ")),t(a,{icon:"fas fa-code-branch"}),n[10]||(n[10]=e("code",null,"next-release",-1)),n[11]||(n[11]=s("에 모두 반영되어야 하죠."))]),n[21]||(n[21]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">git</span> checkout master</span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">&quot;fixed: typo&quot;</span></span>
<span class="line"><span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># b14b975 fixed: typo</span></span>
<span class="line"><span class="token comment"># 9f57292 ....</span></span>
<span class="line"><span class="token comment"># ....</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),e("p",null,[n[12]||(n[12]=s("이렇게 ")),t(a,{icon:"fas fa-code-branch"}),n[13]||(n[13]=e("code",null,"master",-1)),n[14]||(n[14]=s(" 에 반영이 되었습니다. 이 내용을 ")),t(a,{icon:"fas fa-code-branch"}),n[15]||(n[15]=e("code",null,"next-release",-1)),n[16]||(n[16]=s("에 반영하려면 다음과 같이 하면 됩니다"))]),n[22]||(n[22]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">git</span> checkout next-release</span>
<span class="line"><span class="token function">git</span> cherry-pick b14b975</span>
<span class="line"><span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># 23fa1e76 fixed: typo</span></span>
<span class="line"><span class="token comment"># dd0f27c ...</span></span>
<span class="line"><span class="token comment"># ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">참고</p><p>git flow, 즉 <code>feature/BTS-###</code> 같은 브랜치를 따서 <code>merge</code> 하는 방식으로 운영하는 경우, 굳이 <code>cherry-pick</code>을 이용할 필요까지는 없습니다. single master branch 위에서 작업하는 방식으로 진행하는 경우에 유용하죠.</p></div>`,2))])}const P=c(v,[["render",y]]),V=JSON.parse('{"path":"/meetup.nhncloud.com/45.html","title":"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때","description":"Article(s) > git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때","icon":"iconfont icon-git","category":["Git","Article(s)"],"tag":["blog","meetup.nhncloud.com","git","git-cherry-pick"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/meetup.nhncloud.com/gitlogo.png\\"],\\"datePublished\\":\\"2015-11-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/meetup.nhncloud.com/45.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때"}],["meta",{"property":"og:description","content":"Article(s) > git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/meetup.nhncloud.com/gitlogo.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/meetup.nhncloud.com/gitlogo.png"}],["meta",{"name":"twitter:image:alt","content":"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때"}],["meta",{"property":"article:tag","content":"git-cherry-pick"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:tag","content":"meetup.nhncloud.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2015-11-30T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때"},{"property":"og:description","content":"git cherry-pick: 다른 브랜치의 일부 커밋만 반영하고 싶을 때"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/meetup.nhncloud.com/45.html"}]],"prev":"/programming/git/articles/README.md","date":"2015-11-30T00:00:00.000Z","isOriginal":false,"cover":"/assets/image/meetup.nhncloud.com/gitlogo.png"},"git":{},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"meetup.nhncloud.com/45.md"}');export{P as comp,V as data};
