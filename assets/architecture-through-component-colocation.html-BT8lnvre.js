import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,d as e,f as s,b as l,a as b,t as y,n as d,g as u,w as i,e as t,r as o,o as w}from"./app-BVguHYKu.js";const v={},S={id:"frontmatter-title-관련",tabindex:"-1"},C={class:"header-anchor",href:"#frontmatter-title-관련"},A={class:"table-of-contents"},j={href:"https://atomicdesign.bradfrost.com/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_components",target:"_blank",rel:"noopener noreferrer"},x={href:"https://lit.dev/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://vite.dev/guide/features.html#css",target:"_blank",rel:"noopener noreferrer"},V={href:"https://web.dev/articles/css-module-scripts",target:"_blank",rel:"noopener noreferrer"},T={href:"https://bugs.webkit.org/show_bug.cgi?id=227967",target:"_blank",rel:"noopener noreferrer"},W={href:"https://bugzilla.mozilla.org/show_bug.cgi?id=1720570",target:"_blank",rel:"noopener noreferrer"},I={href:"https://lit.dev/",target:"_blank",rel:"noopener noreferrer"};function U(p,n){const c=o("VPCard"),r=o("router-link"),m=o("SiteInfo"),a=o("VPIcon"),g=o("RouteLink"),h=o("CodePen");return w(),f("div",null,[e("h1",S,[e("a",C,[e("span",null,y(p.$frontmatter.title)+" 관련",1)])]),s(c,d(u({title:"Node.js > Article(s)",desc:"Article(s)",link:"/programming/js-node/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",A,[e("ul",null,[e("li",null,[s(r,{to:"#enter-css-module-scripts"},{default:i(()=>n[0]||(n[0]=[t("Enter CSS Module Scripts")])),_:1,__:[0]}),e("ul",null,[e("li",null,[s(r,{to:"#lit"},{default:i(()=>n[1]||(n[1]=[t("Lit")])),_:1,__:[1]})])])]),e("li",null,[s(r,{to:"#demo"},{default:i(()=>n[2]||(n[2]=[t("Demo")])),_:1,__:[2]})])])]),n[38]||(n[38]=e("hr",null,null,-1)),s(m,{name:"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts",desc:"CSS module scripts help keep the dream of co-locating files that all relate to a component, without needing a bundler. ",url:"https://frontendmasters.com/blog/architecture-through-component-colocation/",logo:"https://frontendmasters.com/favicon.ico",preview:"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/6712"}),e("p",null,[n[4]||(n[4]=t("It’s an established Good Idea™ that building digital interfaces of any kind is best done by building components and then piecing together the interfaces from those components. This can be sliced and diced a lot of ways, but generally: a component is a reasonable independent peice of what that interface needs. When it comes to websites, things like a header, footer, grid, card, button, etc. A design system, as it were. See concepts like ")),e("a",j,[s(a,{icon:"fas fa-globe"}),n[3]||(n[3]=t("Atomic Design"))]),n[5]||(n[5]=t("."))]),n[39]||(n[39]=l('<p>A nice by-product of the Rise of JavaScript Frameworks is that they solidified this idea. React, Vue, Svelte… you work with them by building components and composing them together. That’s their point.</p><p>I like the idea of userland tools like JavaScript frameworks pushing the boundaries, then the web evolving to not require those tools. <em>So can we pull off a component-structured project without any build process or framework?</em> We’re close.</p><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/08/Screenshot-2025-08-09-at-1.19.58-PM.png?resize=488%2C462&amp;ssl=1" alt="This is an example of how I’d like to structure a website" tabindex="0" loading="lazy"><figcaption>This is an example of how I’d like to structure a website</figcaption></figure><p>Those components (in our simple example, a button, card, and header) are all:</p><ul><li>Inside a <code>components</code> folder, each with their own named folder (organized!)</li><li>Have a file for their template and logic</li><li>Have a separate CSS file</li></ul><figure><img src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/08/Screenshot-2025-08-09-at-10.59.43-AM.png?resize=480%2C546&amp;ssl=1" alt="So like this" tabindex="0" loading="lazy"><figcaption>So like this</figcaption></figure>',6)),e("p",null,[n[6]||(n[6]=t("This is the kind of logical grouping and isolation that makes sense to me in creating a component architecture. A more complex setup might have components with, say, ")),s(a,{icon:"iconfont icon-graphql"}),n[7]||(n[7]=e("code",null,".graphql",-1)),n[8]||(n[8]=t(" files, their own images, tests, etc. The co-location is key to sanity."))]),e("p",null,[n[12]||(n[12]=t("Our components are JavaScript here because there is ")),s(g,{to:"/frontendmasters.com/seeking-an-answer-why-cant-html-alone-do-includes.html"},{default:i(()=>n[9]||(n[9]=[e("strong",null,"no concept of HTML includes yet",-1)])),_:1,__:[9]}),n[13]||(n[13]=t(", but also that ")),e("a",M,[s(a,{icon:"fa-brands fa-firefox"}),n[10]||(n[10]=t("web components"))]),n[14]||(n[14]=t(" are a generally nice way to handle this anyway, and they require JavaScript instantiation. We don’t need any framework to use web components (hence “vanilla app architecture”), but in the demo, I’ll use ")),e("a",x,[s(a,{icon:"fas fa-globe"}),n[11]||(n[11]=t("Lit"))]),n[15]||(n[15]=t(" (just a light helper library)."))]),e("p",null,[n[17]||(n[17]=t("How do we integrate those ")),s(a,{icon:"fa-brands fa-js"}),n[18]||(n[18]=e("code",null,"component.js",-1)),n[19]||(n[19]=t(" and ")),s(a,{icon:"fa-brands fa-css3-alt"}),n[20]||(n[20]=e("code",null,"component.css",-1)),n[21]||(n[21]=t(" files? That question has long lingered for me. Bundlers can do this job. For instance, webpack just invented their own way of dealing with it. If you type ")),n[22]||(n[22]=e("code",null,'import "./card.css";',-1)),n[23]||(n[23]=t(" in a JavaScript file that is processed by webpack, it’ll just know what you mean and ensure that CSS is loaded on the page somehow. Likewise, ")),e("a",N,[s(a,{icon:"iconfont icon-vite"}),n[16]||(n[16]=t("Vite just does it’s own thing"))]),n[24]||(n[24]=t(":"))]),n[40]||(n[40]=e("blockquote",null,[e("p",null,[t("Importing "),e("code",null,".css"),t(" files will inject its content to the page via a "),e("code",null,"<style>"),t(" tag with HMR support.")])],-1)),n[41]||(n[41]=e("p",null,"That’s great and all, but we’re trying to go vanilla here. No bundler/build process. How do we import CSS like that?",-1)),n[42]||(n[42]=e("hr",null,null,-1)),n[43]||(n[43]=e("h2",{id:"enter-css-module-scripts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#enter-css-module-scripts"},[e("span",null,"Enter CSS Module Scripts")])],-1)),e("p",null,[n[26]||(n[26]=e("strong",null,"Good news:",-1)),n[27]||(n[27]=t(" JavaScript has an answer to that question we just asked, and it’s called ")),e("a",V,[s(a,{icon:"fas fa-globe"}),n[25]||(n[25]=t("CSS Module Scripts"))]),n[28]||(n[28]=t("."))]),e("p",null,[n[31]||(n[31]=e("strong",null,"Bad news:",-1)),n[32]||(n[32]=t(" Only Chrome supports it. (")),e("a",T,[s(a,{icon:"iconfont icon-webkit"}),n[29]||(n[29]=t("WebKit bug"))]),n[33]||(n[33]=t("; ")),e("a",W,[s(a,{icon:"fa-brands fa-firefox"}),n[30]||(n[30]=t("Firefox bug"))]),n[34]||(n[34]=t(")"))]),n[44]||(n[44]=l(`<p>Google’s blog post on them (linked above) is one of the few pieces of information available about them, and it contains some <strong><em>incorrect syntax</em></strong>, so be careful there. It should look like this (the <code>with</code> keyword is correct, if you see <code>assert</code> that’s old/wrong):</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> sheet <span class="token keyword">from</span> <span class="token string">&#39;./styles.css&#39;</span> <span class="token keyword">with</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;css&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>When you do that (in a supporting browser), <code>sheet</code> becomes a “Constructable Stylesheet” and then you can use it to, in our case, apply it to the Shadow Root of a web component.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token keyword">const</span> shadowRoot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;open&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    shadowRoot<span class="token punctuation">.</span>adoptedStyleSheets <span class="token operator">=</span> <span class="token punctuation">[</span>sheet<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">//...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>These “import attributes,” as I think they are called, can do other things. It’s much better supported to import JSON this way, like:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> sheet <span class="token keyword">from</span> <span class="token string">&#39;./data.json&#39;</span> <span class="token keyword">with</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="lit" tabindex="-1"><a class="header-anchor" href="#lit"><span>Lit</span></a></h3>`,7)),e("p",null,[n[36]||(n[36]=t("Using ")),e("a",I,[s(a,{icon:"fas fa-globe"}),n[35]||(n[35]=t("Lit"))]),n[37]||(n[37]=t(", applying the styleheet (or, “the constructable stylesheet, as imported via CSS module scripts” to do the whole mouthful) is like this:"))]),n[45]||(n[45]=l(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>html<span class="token punctuation">,</span> LitElement<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> sheet <span class="token keyword">from</span> <span class="token string">&#39;./button.css&#39;</span> <span class="token keyword">with</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;css&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">My</span> Component <span class="token keyword">extends</span> <span class="token class-name">LitElement</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">static</span> styles <span class="token operator">=</span> <span class="token punctuation">[</span>sheet<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2>`,3)),s(h,{user:"anon","slug-hash":"XJmppKN",title:"Basic Demo for CSS Module Scripts in Web Components","default-tab":["css","result"],theme:p.$isDarkmode?"dark":"light"},null,8,["theme"]),b(" TODO: add ARTICLE CARD "),s(c,d(u({title:"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts",desc:"CSS module scripts help keep the dream of co-locating files that all relate to a component, without needing a bundler. ",link:"https://chanhi2000.github.io/bookshelf/frontendmasters.com/architecture-through-component-colocation.html",logo:"https://frontendmasters.com/favicon.ico",background:"rgba(188,75,52,0.2)"})),null,16)])}const L=k(v,[["render",U]]),z=JSON.parse('{"path":"/frontendmasters.com/architecture-through-component-colocation.html","title":"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts","lang":"en-US","frontmatter":{"lang":"en-US","title":"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts","description":"Article(s) > A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts","icon":"fa-brands fa-node","category":["Node.js","Article(s)"],"tag":["blog","frontendmasters.com","node","nodejs","node-js"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts\\",\\"image\\":[\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/08/Screenshot-2025-08-09-at-1.19.58-PM.png?resize=488%2C462&ssl=1\\",\\"https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/08/Screenshot-2025-08-09-at-10.59.43-AM.png?resize=480%2C546&ssl=1\\"],\\"datePublished\\":\\"2025-08-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chris Coyier\\",\\"url\\":\\"https://frontendmasters.com/blog/author/chriscoyier/\\"}]}"],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/architecture-through-component-colocation.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts"}],["meta",{"property":"og:description","content":"Article(s) > A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/6712"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/6712"}],["meta",{"name":"twitter:image:alt","content":"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts"}],["meta",{"property":"article:author","content":"Chris Coyier"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"frontendmasters.com"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:published_time","content":"2025-08-11T00:00:00.000Z"}],[{"meta":null},{"property":"og:title","content":"Article(s) > A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts"},{"property":"og:description","content":"A Nice Vanilla App Archicture Using Web Components and CSS Module Scripts"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/frontendmasters.com/architecture-through-component-colocation.html"}]],"prev":"/programming/js-node/articles/README.md","date":"2025-08-11T00:00:00.000Z","isOriginal":false,"author":[{"name":"Chris Coyier","url":"https://frontendmasters.com/blog/author/chriscoyier/"}],"cover":"https://frontendmasters.com/blog/wp-json/social-image-generator/v1/image/6712"},"git":{},"readingTime":{"minutes":3.46,"words":1038},"filePathRelative":"frontendmasters.com/architecture-through-component-colocation.md","copyright":{"author":"Chris Coyier"}}');export{L as comp,z as data};
